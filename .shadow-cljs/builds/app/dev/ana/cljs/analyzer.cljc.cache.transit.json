["^ ","~:output",["^ ","~:js","goog.provide('cljs.analyzer');\ngoog.require('cljs.core');\ngoog.require('goog.string');\ngoog.require('clojure.string');\ngoog.require('clojure.set');\ngoog.require('cljs.env');\ngoog.require('cljs.tagged_literals');\ngoog.require('cljs.tools.reader');\ngoog.require('cljs.tools.reader.reader_types');\ngoog.require('cljs.reader');\ncljs.analyzer._STAR_cljs_ns_STAR_ = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\ncljs.analyzer._STAR_cljs_file_STAR_ = null;\ncljs.analyzer._STAR_checked_arrays_STAR_ = false;\ncljs.analyzer._STAR_check_alias_dupes_STAR_ = true;\ncljs.analyzer._STAR_cljs_static_fns_STAR_ = false;\ncljs.analyzer._STAR_fn_invoke_direct_STAR_ = false;\ncljs.analyzer._STAR_cljs_macros_path_STAR_ = \"/cljs/core\";\ncljs.analyzer._STAR_cljs_macros_is_classpath_STAR_ = true;\ncljs.analyzer._STAR_cljs_dep_set_STAR_ = cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558),cljs.core.PersistentVector.EMPTY], null));\ncljs.analyzer._STAR_analyze_deps_STAR_ = true;\ncljs.analyzer._STAR_load_tests_STAR_ = true;\ncljs.analyzer._STAR_load_macros_STAR_ = true;\ncljs.analyzer._STAR_reload_macros_STAR_ = false;\ncljs.analyzer._STAR_macro_infer_STAR_ = true;\ncljs.analyzer._STAR_passes_STAR_ = null;\ncljs.analyzer._STAR_file_defs_STAR_ = null;\ncljs.analyzer._STAR_private_var_access_nowarn_STAR_ = false;\n/**\n * The namespace of the constants table as a symbol.\n */\ncljs.analyzer.constants_ns_sym = new cljs.core.Symbol(null,\"cljs.core.constants\",\"cljs.core.constants\",2057417066,null);\ncljs.analyzer._STAR_verbose_STAR_ = false;\ncljs.analyzer._cljs_macros_loaded = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\ncljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217)],[true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true]);\ncljs.analyzer.unchecked_arrays_QMARK_ = (function cljs$analyzer$unchecked_arrays_QMARK_(){\nreturn cljs.core._STAR_unchecked_arrays_STAR_;\n});\n/**\n * Returns false-y, :warn, or :error based on configuration and the\n * current value of *unchecked-arrays*.\n */\ncljs.analyzer.checked_arrays = (function cljs$analyzer$checked_arrays(){\nif(((cljs.core.not(new cljs.core.Keyword(null,\"advanced\",\"advanced\",-451287892).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))) && ((!(cljs.core._STAR_unchecked_arrays_STAR_))))){\nreturn cljs.analyzer._STAR_checked_arrays_STAR_;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.js_reserved = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 63, [\"typeof\",null,\"float\",null,\"implements\",null,\"else\",null,\"boolean\",null,\"abstract\",null,\"int\",null,\"static\",null,\"package\",null,\"this\",null,\"await\",null,\"yield\",null,\"interface\",null,\"void\",null,\"delete\",null,\"class\",null,\"export\",null,\"var\",null,\"try\",null,\"long\",null,\"null\",null,\"return\",null,\"methods\",null,\"native\",null,\"private\",null,\"new\",null,\"for\",null,\"catch\",null,\"extends\",null,\"short\",null,\"protected\",null,\"throws\",null,\"synchronized\",null,\"transient\",null,\"super\",null,\"if\",null,\"let\",null,\"import\",null,\"char\",null,\"switch\",null,\"const\",null,\"case\",null,\"break\",null,\"volatile\",null,\"function\",null,\"continue\",null,\"final\",null,\"do\",null,\"double\",null,\"while\",null,\"public\",null,\"arguments\",null,\"debugger\",null,\"with\",null,\"instanceof\",null,\"default\",null,\"throw\",null,\"goto\",null,\"finally\",null,\"byte\",null,\"constructor\",null,\"in\",null,\"enum\",null], null), null);\ncljs.analyzer.es5_allowed = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [\"default\",null], null), null);\ncljs.analyzer.SENTINEL = ({});\ncljs.analyzer.gets = (function cljs$analyzer$gets(var_args){\nvar G__28776 = arguments.length;\nswitch (G__28776) {\ncase 3:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3 = (function (m,k0,k1){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$1,k1);\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4 = (function (m,k0,k1,k2){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$2,k2);\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5 = (function (m,k0,k1,k2,k3){\nvar m__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,k0,cljs.analyzer.SENTINEL);\nif((m__$1 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,k1,cljs.analyzer.SENTINEL);\nif((m__$2 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nvar m__$3 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$2,k2,cljs.analyzer.SENTINEL);\nif((m__$3 === cljs.analyzer.SENTINEL)){\nreturn null;\n} else {\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(m__$3,k3);\n}\n}\n}\n}));\n\n(cljs.analyzer.gets.cljs$lang$maxFixedArity = 5);\n\ncljs.analyzer.CLJ_NIL_SYM = new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null);\ncljs.analyzer.NUMBER_SYM = new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\ncljs.analyzer.STRING_SYM = new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null);\ncljs.analyzer.BOOLEAN_SYM = new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null);\ncljs.analyzer.JS_STAR_SYM = new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null);\ncljs.analyzer.DOT_SYM = new cljs.core.Symbol(null,\".\",\".\",1975675962,null);\ncljs.analyzer.NEW_SYM = new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null);\ncljs.analyzer.CLJS_CORE_SYM = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\ncljs.analyzer.CLJS_CORE_MACROS_SYM = new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null);\ncljs.analyzer.IGNORE_SYM = new cljs.core.Symbol(null,\"ignore\",\"ignore\",8989494,null);\ncljs.analyzer.ANY_SYM = new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\ncljs.analyzer.cljs_seq_QMARK_ = (function cljs$analyzer$cljs_seq_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISeq$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_map_QMARK_ = (function cljs$analyzer$cljs_map_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (1024))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_vector_QMARK_ = (function cljs$analyzer$cljs_vector_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (16384))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.cljs_set_QMARK_ = (function cljs$analyzer$cljs_set_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ & (4096))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.munge_path = (function cljs$analyzer$munge_path(ss){\nreturn cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ss));\n});\n/**\n * Given a namespace as a symbol return the relative path. May optionally\n *   provide the file extension, defaults to :cljs.\n */\ncljs.analyzer.ns__GT_relpath = (function cljs$analyzer$ns__GT_relpath(var_args){\nvar G__28789 = arguments.length;\nswitch (G__28789) {\ncase 1:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629));\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2 = (function (ns,ext){\nreturn [clojure.string.replace(cljs.analyzer.munge_path(ns),\".\",\"/\"),\".\",cljs.core.name(ext)].join('');\n}));\n\n(cljs.analyzer.ns__GT_relpath.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.topo_sort = (function cljs$analyzer$topo_sort(var_args){\nvar G__28795 = arguments.length;\nswitch (G__28795) {\ncase 2:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$2 = (function (x,get_deps){\nreturn cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(x,(0),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.sorted_map()),cljs.core.memoize(get_deps));\n}));\n\n(cljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4 = (function (x,depth,state,memo_get_deps){\nvar deps = (memo_get_deps.cljs$core$IFn$_invoke$arity$1 ? memo_get_deps.cljs$core$IFn$_invoke$arity$1(x) : memo_get_deps.call(null,x));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [depth], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentHashSet.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\nvar seq__28798_29716 = cljs.core.seq(deps);\nvar chunk__28799_29717 = null;\nvar count__28800_29718 = (0);\nvar i__28801_29719 = (0);\nwhile(true){\nif((i__28801_29719 < count__28800_29718)){\nvar dep_29721 = chunk__28799_29717.cljs$core$IIndexed$_nth$arity$2(null,i__28801_29719);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_29721,(depth + (1)),state,memo_get_deps);\n\n\nvar G__29722 = seq__28798_29716;\nvar G__29723 = chunk__28799_29717;\nvar G__29724 = count__28800_29718;\nvar G__29725 = (i__28801_29719 + (1));\nseq__28798_29716 = G__29722;\nchunk__28799_29717 = G__29723;\ncount__28800_29718 = G__29724;\ni__28801_29719 = G__29725;\ncontinue;\n} else {\nvar temp__5735__auto___29726 = cljs.core.seq(seq__28798_29716);\nif(temp__5735__auto___29726){\nvar seq__28798_29727__$1 = temp__5735__auto___29726;\nif(cljs.core.chunked_seq_QMARK_(seq__28798_29727__$1)){\nvar c__4609__auto___29728 = cljs.core.chunk_first(seq__28798_29727__$1);\nvar G__29729 = cljs.core.chunk_rest(seq__28798_29727__$1);\nvar G__29730 = c__4609__auto___29728;\nvar G__29731 = cljs.core.count(c__4609__auto___29728);\nvar G__29732 = (0);\nseq__28798_29716 = G__29729;\nchunk__28799_29717 = G__29730;\ncount__28800_29718 = G__29731;\ni__28801_29719 = G__29732;\ncontinue;\n} else {\nvar dep_29733 = cljs.core.first(seq__28798_29727__$1);\ncljs.analyzer.topo_sort.cljs$core$IFn$_invoke$arity$4(dep_29733,(depth + (1)),state,memo_get_deps);\n\n\nvar G__29734 = cljs.core.next(seq__28798_29727__$1);\nvar G__29735 = null;\nvar G__29736 = (0);\nvar G__29737 = (0);\nseq__28798_29716 = G__29734;\nchunk__28799_29717 = G__29735;\ncount__28800_29718 = G__29736;\ni__28801_29719 = G__29737;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__28804_29739 = cljs.core.seq(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(state),cljs.core._LT_,depth));\nvar chunk__28805_29740 = null;\nvar count__28806_29741 = (0);\nvar i__28807_29742 = (0);\nwhile(true){\nif((i__28807_29742 < count__28806_29741)){\nvar vec__28816_29746 = chunk__28805_29740.cljs$core$IIndexed$_nth$arity$2(null,i__28807_29742);\nvar _LT_depth_29747 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28816_29746,(0),null);\nvar __29748 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28816_29746,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_29747], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__29749 = seq__28804_29739;\nvar G__29750 = chunk__28805_29740;\nvar G__29751 = count__28806_29741;\nvar G__29752 = (i__28807_29742 + (1));\nseq__28804_29739 = G__29749;\nchunk__28805_29740 = G__29750;\ncount__28806_29741 = G__29751;\ni__28807_29742 = G__29752;\ncontinue;\n} else {\nvar temp__5735__auto___29753 = cljs.core.seq(seq__28804_29739);\nif(temp__5735__auto___29753){\nvar seq__28804_29754__$1 = temp__5735__auto___29753;\nif(cljs.core.chunked_seq_QMARK_(seq__28804_29754__$1)){\nvar c__4609__auto___29755 = cljs.core.chunk_first(seq__28804_29754__$1);\nvar G__29757 = cljs.core.chunk_rest(seq__28804_29754__$1);\nvar G__29758 = c__4609__auto___29755;\nvar G__29759 = cljs.core.count(c__4609__auto___29755);\nvar G__29760 = (0);\nseq__28804_29739 = G__29757;\nchunk__28805_29740 = G__29758;\ncount__28806_29741 = G__29759;\ni__28807_29742 = G__29760;\ncontinue;\n} else {\nvar vec__28819_29761 = cljs.core.first(seq__28804_29754__$1);\nvar _LT_depth_29762 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28819_29761,(0),null);\nvar __29763 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28819_29761,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(state,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [_LT_depth_29762], null),clojure.set.difference,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([deps], 0));\n\n\nvar G__29765 = cljs.core.next(seq__28804_29754__$1);\nvar G__29766 = null;\nvar G__29767 = (0);\nvar G__29768 = (0);\nseq__28804_29739 = G__29765;\nchunk__28805_29740 = G__29766;\ncount__28806_29741 = G__29767;\ni__28807_29742 = G__29768;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(depth,(0))){\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.vals(cljs.core.deref(state))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.topo_sort.cljs$lang$maxFixedArity = 4);\n\n\ncljs.analyzer.ast_QMARK_ = (function cljs$analyzer$ast_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && (cljs.core.contains_QMARK_(x,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955))));\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.error_message !== 'undefined')){\n} else {\ncljs.analyzer.error_message = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__28822 = cljs.core.get_global_hierarchy;\nreturn (fexpr__28822.cljs$core$IFn$_invoke$arity$0 ? fexpr__28822.cljs$core$IFn$_invoke$arity$0() : fexpr__28822.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"error-message\"),(function() { \nvar G__29769__delegate = function (warning_type,_){\nreturn warning_type;\n};\nvar G__29769 = function (warning_type,var_args){\nvar _ = null;\nif (arguments.length > 1) {\nvar G__29770__i = 0, G__29770__a = new Array(arguments.length -  1);\nwhile (G__29770__i < G__29770__a.length) {G__29770__a[G__29770__i] = arguments[G__29770__i + 1]; ++G__29770__i;}\n  _ = new cljs.core.IndexedSeq(G__29770__a,0,null);\n} \nreturn G__29769__delegate.call(this,warning_type,_);};\nG__29769.cljs$lang$maxFixedArity = 1;\nG__29769.cljs$lang$applyTo = (function (arglist__29772){\nvar warning_type = cljs.core.first(arglist__29772);\nvar _ = cljs.core.rest(arglist__29772);\nreturn G__29769__delegate(warning_type,_);\n});\nG__29769.cljs$core$IFn$_invoke$arity$variadic = G__29769__delegate;\nreturn G__29769;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"preamble-missing\",\"preamble-missing\",220974801),(function (warning_type,info){\nreturn [\"Preamble resource file not found: \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"missing\",\"missing\",362507769).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764),(function (warning_type,info){\nreturn [\"Required namespace not provided for \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",new cljs.core.Keyword(null,\"unprovided\",\"unprovided\",-652330764).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),(function (warning_type,info){\nreturn [(cljs.core.truth_(new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205).cljs$core$IFn$_invoke$arity$1(info))?\"Can't take value of macro \":\"Use of undeclared Var \"),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),(function (warning_type,info){\nreturn [\"var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" is not public\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),(function (warning_type,p__28823){\nvar map__28824 = p__28823;\nvar map__28824__$1 = (((((!((map__28824 == null))))?(((((map__28824.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28824.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28824):map__28824);\nvar info = map__28824__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28824__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28824__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljs\",\"cljs\",1492417629)),\", \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583)),\", or JavaScript source providing \\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(js_provide),\"\\\"\",((clojure.string.includes_QMARK_(cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$1(ns_sym),\"_\"))?\" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\":null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-macros-ns\",\"undeclared-macros-ns\",-438029430),(function (warning_type,p__28826){\nvar map__28827 = p__28826;\nvar map__28827__$1 = (((((!((map__28827 == null))))?(((((map__28827.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28827.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28827):map__28827);\nvar info = map__28827__$1;\nvar ns_sym = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28827__$1,new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605));\nvar js_provide = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28827__$1,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493));\nreturn [\"No such macros namespace: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_sym),\", could not locate \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"clj\",\"clj\",-660495428)),\" or \",cljs.analyzer.ns__GT_relpath.cljs$core$IFn$_invoke$arity$2(ns_sym,new cljs.core.Keyword(null,\"cljc\",\"cljc\",-1728400583))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" not declared ^:dynamic\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" already refers to: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" being replaced by: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info))))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(info)),\" is being replaced\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" no longer fn, references are stale\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),(function (warning_type,info){\nreturn [\"Wrong number of args (\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519).cljs$core$IFn$_invoke$arity$1(info)),\") passed to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info);\n}\n})())].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323).cljs$core$IFn$_invoke$arity$1(info)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)))),\" declared arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(info)),\" mismatch defined arglists \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),(function (warning_type,info){\nreturn [\"Invalid :refer, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"lib\",\"lib\",191808726).cljs$core$IFn$_invoke$arity$1(info)),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(info)),\" does not exist\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-deprecated\",\"protocol-deprecated\",103233497),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is deprecated\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"undeclared-protocol-symbol\",\"undeclared-protocol-symbol\",462882867),(function (warning_type,info){\nreturn [\"Can't resolve protocol symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-protocol-symbol\",\"invalid-protocol-symbol\",86246948),(function (warning_type,info){\nreturn [\"Symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is not a protocol\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-invalid-method\",\"protocol-invalid-method\",522647516),(function (warning_type,info){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"no-such-method\",\"no-such-method\",1087422840).cljs$core$IFn$_invoke$arity$1(info))){\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare method called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n} else {\nreturn [\"Bad method signature in protocol implementation, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info)),\" does not declare arity \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"invalid-arity\",\"invalid-arity\",1335461949).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-duped-method\",\"protocol-duped-method\",15128166),(function (warning_type,info){\nreturn [\"Duplicated methods in protocol implementation \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fname\",\"fname\",1500291491).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-multiple-impls\",\"protocol-multiple-impls\",794179260),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implemented multiple times\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-variadic-method\",\"protocol-with-variadic-method\",-693368178),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" declares method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-with-overwriting-method\",\"protocol-with-overwriting-method\",319993011),(function (warning_type,info){\nvar overwritten_protocol = new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"existing\",\"existing\",-340796094).cljs$core$IFn$_invoke$arity$1(info));\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" is overwriting \",(cljs.core.truth_(overwritten_protocol)?\"method\":\"function\"),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),(cljs.core.truth_(overwritten_protocol)?[\" of protocol \",cljs.core.name(overwritten_protocol)].join(''):null)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-with-variadic-method\",\"protocol-impl-with-variadic-method\",-319321217),(function (warning_type,info){\nreturn [\"Protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(info)),\" implements method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" with variadic signature (&)\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),(function (warning_type,info){\nreturn [\"Ignoring target object \\\"\",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(info)], 0)),\"\\\" passed in recur to protocol method head\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have more than 1 variadic overload\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have fixed arity function with more params than variadic function\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\": Can't have 2 overloads with same arity\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extending-base-js-type\",\"extending-base-js-type\",432787264),(function (warning_type,info){\nreturn [\"Extending an existing JavaScript type - use a different symbol name \",\"instead of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"current-symbol\",\"current-symbol\",-932381075).cljs$core$IFn$_invoke$arity$1(info)),\" e.g \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"suggested-symbol\",\"suggested-symbol\",-1329631875).cljs$core$IFn$_invoke$arity$1(info))].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(info)),\", all arguments must be numbers, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"types\",\"types\",590030639).cljs$core$IFn$_invoke$arity$1(info)),\" instead\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236),(function (warning_type,p__28839){\nvar map__28840 = p__28839;\nvar map__28840__$1 = (((((!((map__28840 == null))))?(((((map__28840.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28840.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28840):map__28840);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28840__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar types = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28840__$1,new cljs.core.Keyword(null,\"types\",\"types\",590030639));\nvar G__28842 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),G__28842)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),G__28842)){\nreturn [\"cljs.core/aget, arguments must be an array followed by numeric indices, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.rest(types)))))?[\" (consider \",((((2) === cljs.core.count(types)))?\"goog.object/get\":\"goog.object/getValueByKeys\"),\" for object access)\"].join(''):null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),G__28842)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),G__28842)){\nreturn [\"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(types),\" instead\",((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),cljs.core.first(types))) || (cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),null], null), null),cljs.core.butlast(cljs.core.rest(types))))))?\" (consider goog.object/set for object access)\":null)].join('');\n} else {\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__28842)].join('')));\n\n}\n}\n}\n}\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),(function (warning_type,info){\nreturn [\"Cannot invoke type constructor \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150).cljs$core$IFn$_invoke$arity$1(info)))),\" as function \"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),(function (warning_type,info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(info)),\" is a single segment namespace\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),(function (warning_type,p__28847){\nvar map__28848 = p__28847;\nvar map__28848__$1 = (((((!((map__28848 == null))))?(((((map__28848.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28848.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28848):map__28848);\nvar info = map__28848__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28848__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar munged = cljs.core.munge(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28846_SHARP_){\nif(cljs.core.truth_((cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_reserved.cljs$core$IFn$_invoke$arity$1(p1__28846_SHARP_) : cljs.analyzer.js_reserved.call(null,p1__28846_SHARP_)))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__28846_SHARP_),\"$\"].join('');\n} else {\nreturn p1__28846_SHARP_;\n}\n}),clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name),/\\./))));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" contains a reserved JavaScript keyword,\",\" the corresponding Google Closure namespace will be munged to \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),(function (warning_type,p__28850){\nvar map__28851 = p__28850;\nvar map__28851__$1 = (((((!((map__28851 == null))))?(((((map__28851.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28851.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28851):map__28851);\nvar info = map__28851__$1;\nvar ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28851__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28851__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [\"Namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\" clashes with var \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$)].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),(function (warning_type,p__28853){\nvar map__28854 = p__28853;\nvar map__28854__$1 = (((((!((map__28854 == null))))?(((((map__28854.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28854.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28854):map__28854);\nvar info = map__28854__$1;\nvar var$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28854__$1,new cljs.core.Keyword(null,\"var\",\"var\",-769682797));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" not declared dynamic and thus is not dynamically rebindable, but its name \",\"suggests otherwise. Please either indicate ^:dynamic \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(var$),\" or change the name\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"extend-type-invalid-method-shape\",\"extend-type-invalid-method-shape\",1424103549),(function (warning_type,p__28856){\nvar map__28857 = p__28856;\nvar map__28857__$1 = (((((!((map__28857 == null))))?(((((map__28857.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28857.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28857):map__28857);\nvar info = map__28857__$1;\nvar protocol = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28857__$1,new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28857__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nreturn [\"Bad extend-type method shape for protocol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol),\" method \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method),\", method arities must be grouped together\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-js-module-type\",\"unsupported-js-module-type\",1806206180),(function (warning_type,p__28859){\nvar map__28860 = p__28859;\nvar map__28860__$1 = (((((!((map__28860 == null))))?(((((map__28860.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28860.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28860):map__28860);\nvar info = map__28860__$1;\nvar module_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28860__$1,new cljs.core.Keyword(null,\"module-type\",\"module-type\",1392760304));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28860__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported JavaScript module type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(module_type),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"unsupported-preprocess-value\",\"unsupported-preprocess-value\",1635147105),(function (warning_type,p__28862){\nvar map__28863 = p__28862;\nvar map__28863__$1 = (((((!((map__28863 == null))))?(((((map__28863.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28863.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28863):map__28863);\nvar preprocess = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28863__$1,new cljs.core.Keyword(null,\"preprocess\",\"preprocess\",1208285012));\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28863__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nreturn [\"Unsupported preprocess value \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(preprocess),\" for foreign library \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(file),\".\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),(function (warning_type,p__28865){\nvar map__28866 = p__28865;\nvar map__28866__$1 = (((((!((map__28866 == null))))?(((((map__28866.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28866.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28866):map__28866);\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28866__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\" is shadowed by a local\"].join('');\n}));\ncljs.analyzer.error_message.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),(function (warning_type,p__28869){\nvar map__28870 = p__28869;\nvar map__28870__$1 = (((((!((map__28870 == null))))?(((((map__28870.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28870.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28870):map__28870);\nvar warn_type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28870__$1,new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28870__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28870__$1,new cljs.core.Keyword(null,\"type\",\"type\",1174270348));\nvar property = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28870__$1,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232));\nvar G__28872 = warn_type;\nvar G__28872__$1 = (((G__28872 instanceof cljs.core.Keyword))?G__28872.fqn:null);\nswitch (G__28872__$1) {\ncase \"target\":\nreturn [\"Cannot infer target type in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form),\"\"].join('');\n\nbreak;\ncase \"property\":\nreturn [\"Cannot resolve property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" for inferred type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(type),\" in expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ncase \"object\":\nreturn [\"Adding extern to Object for property \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(property),\" due to \",\"ambiguous expression \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(form)].join('');\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__28872__$1)].join('')));\n\n}\n}));\ncljs.analyzer.default_warning_handler = (function cljs$analyzer$default_warning_handler(warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nvar temp__5735__auto__ = cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(warning_type,extra);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar s = temp__5735__auto__;\nvar _STAR_print_fn_STAR__orig_val__28875 = cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_fn_STAR__temp_val__28876 = cljs.core._STAR_print_err_fn_STAR_;\n(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__temp_val__28876);\n\ntry{return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var G__28877 = env;\nvar G__28878 = [\"WARNING: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(s)].join('');\nreturn (cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.message.cljs$core$IFn$_invoke$arity$2(G__28877,G__28878) : cljs.analyzer.message.call(null,G__28877,G__28878));\n})()], 0));\n}finally {(cljs.core._STAR_print_fn_STAR_ = _STAR_print_fn_STAR__orig_val__28875);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer._STAR_cljs_warning_handlers_STAR_ = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.default_warning_handler], null);\ncljs.analyzer.repeat_char = (function cljs$analyzer$repeat_char(c,n){\nvar ret = c;\nvar n__$1 = n;\nwhile(true){\nif((n__$1 > (0))){\nvar G__29897 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ret),cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join('');\nvar G__29898 = (n__$1 - (1));\nret = G__29897;\nn__$1 = G__29898;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n});\ncljs.analyzer.hex_format = (function cljs$analyzer$hex_format(s,pad){\nvar hex = s.charCodeAt((0)).toString((16));\nvar len = hex.length;\nvar hex__$1 = (((len < pad))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.repeat_char(\"0\",(pad - len))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex)].join(''):hex);\nreturn [\"_u\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex__$1),\"_\"].join('');\n});\ncljs.analyzer.gen_constant_id = (function cljs$analyzer$gen_constant_id(value){\nvar prefix = (((value instanceof cljs.core.Keyword))?\"cst$kw$\":(((value instanceof cljs.core.Symbol))?\"cst$sym$\":(function(){throw (new Error([\"constant type \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(value)),\" not supported\"].join('')))})()\n));\nvar name = (((value instanceof cljs.core.Keyword))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(value),(1)):cljs.core.str.cljs$core$IFn$_invoke$arity$1(value));\nvar name__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\".\",name))?\"_DOT_\":clojure.string.replace(clojure.string.replace(cljs.core.munge(clojure.string.replace(name,\"-\",\"_DASH_\")),\".\",\"$\"),/[^a-z0-9$_]/i,(function (p1__28880_SHARP_){\nreturn cljs.analyzer.hex_format(p1__28880_SHARP_,(4));\n})));\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([prefix,name__$1].join(''));\n});\ncljs.analyzer.register_constant_BANG_ = (function cljs$analyzer$register_constant_BANG_(var_args){\nvar G__28882 = arguments.length;\nswitch (G__28882) {\ncase 1:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$1 = (function (val){\nreturn cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(null,val);\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2 = (function (env,val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (cenv){\nvar G__28883 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"constant-table\",\"cljs.analyzer/constant-table\",-114131889)], null),(function (table){\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(table,val))){\nreturn table;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(table,val,cljs.analyzer.gen_constant_id(val));\n}\n}));\nif(cljs.core.truth_(env)){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__28883,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(\"cljs.analyzer\",\"constants\",\"cljs.analyzer/constants\",1697083770)], null),(function (p__28884){\nvar map__28885 = p__28884;\nvar map__28885__$1 = (((((!((map__28885 == null))))?(((((map__28885.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28885.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28885):map__28885);\nvar constants = map__28885__$1;\nvar seen = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__28885__$1,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.PersistentHashSet.EMPTY);\nvar order = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__28885__$1,new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.PersistentVector.EMPTY);\nvar G__28887 = constants;\nif((!(cljs.core.contains_QMARK_(seen,val)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(G__28887,new cljs.core.Keyword(null,\"seen\",\"seen\",-518999789),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen,val),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"order\",\"order\",-1254677256),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(order,val)], 0));\n} else {\nreturn G__28887;\n}\n}));\n} else {\nreturn G__28883;\n}\n}));\n}));\n\n(cljs.analyzer.register_constant_BANG_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.default_namespaces = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null)], null);\ncljs.analyzer.namespaces = (function (){\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.t_cljs$analyzer28888 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.analyzer.t_cljs$analyzer28888 = (function (meta28889){\nthis.meta28889 = meta28889;\nthis.cljs$lang$protocol_mask$partition0$ = 425984;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(cljs.analyzer.t_cljs$analyzer28888.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_28890,meta28889__$1){\nvar self__ = this;\nvar _28890__$1 = this;\nreturn (new cljs.analyzer.t_cljs$analyzer28888(meta28889__$1));\n}));\n\n(cljs.analyzer.t_cljs$analyzer28888.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_28890){\nvar self__ = this;\nvar _28890__$1 = this;\nreturn self__.meta28889;\n}));\n\n(cljs.analyzer.t_cljs$analyzer28888.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((!((cljs.env._STAR_compiler_STAR_ == null)))){\nreturn new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\n} else {\nreturn cljs.analyzer.default_namespaces;\n}\n}));\n\n(cljs.analyzer.t_cljs$analyzer28888.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"meta28889\",\"meta28889\",939680376,null)], null);\n}));\n\n(cljs.analyzer.t_cljs$analyzer28888.cljs$lang$type = true);\n\n(cljs.analyzer.t_cljs$analyzer28888.cljs$lang$ctorStr = \"cljs.analyzer/t_cljs$analyzer28888\");\n\n(cljs.analyzer.t_cljs$analyzer28888.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__,opt__4430__auto__){\nreturn cljs.core._write(writer__4429__auto__,\"cljs.analyzer/t_cljs$analyzer28888\");\n}));\n\n/**\n * Positional factory function for cljs.analyzer/t_cljs$analyzer28888.\n */\ncljs.analyzer.__GT_t_cljs$analyzer28888 = (function cljs$analyzer$__GT_t_cljs$analyzer28888(meta28889){\nreturn (new cljs.analyzer.t_cljs$analyzer28888(meta28889));\n});\n\n}\n\nreturn (new cljs.analyzer.t_cljs$analyzer28888(cljs.core.PersistentArrayMap.EMPTY));\n})()\n;\ncljs.analyzer.get_namespace = (function cljs$analyzer$get_namespace(var_args){\nvar G__28892 = arguments.length;\nswitch (G__28892) {\ncase 1:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1 = (function (key){\nreturn cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,key);\n}));\n\n(cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$2 = (function (cenv,key){\nvar temp__5737__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cenv),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),key], null));\nif((temp__5737__auto__ == null)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),key)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null)], null);\n} else {\nreturn null;\n}\n} else {\nvar ns = temp__5737__auto__;\nreturn ns;\n}\n}));\n\n(cljs.analyzer.get_namespace.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.get_line = (function cljs$analyzer$get_line(x,env){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\ncljs.analyzer.get_col = (function cljs$analyzer$get_col(x,env){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env);\n}\n});\n/**\n * Given a Clojure namespace intern all macros into the ambient ClojureScript\n * analysis environment.\n */\ncljs.analyzer.intern_macros = (function cljs$analyzer$intern_macros(var_args){\nvar G__28894 = arguments.length;\nswitch (G__28894) {\ncase 1:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$1 = (function (ns){\nreturn cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2(ns,false);\n}));\n\n(cljs.analyzer.intern_macros.cljs$core$IFn$_invoke$arity$2 = (function (ns,reload){\nif(cljs.core.truth_((function (){var or__4185__auto__ = (cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)) == null);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn reload;\n}\n})())){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431)], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__28895){\nvar vec__28896 = p__28895;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28896,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28896,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(function (){var vm = cljs.core.meta(v);\nvar ns__$1 = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(vm).getName();\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(vm,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)),new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404),true], 0));\n})()], null);\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__28899){\nvar vec__28900 = p__28899;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28900,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28900,(1),null);\nreturn v.isMacro();\n}),cljs.core.ns_interns_STAR_(ns)))));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.intern_macros.cljs$lang$maxFixedArity = 2);\n\n/**\n * Construct an empty analysis environment. Required to analyze forms.\n */\ncljs.analyzer.empty_env = (function cljs$analyzer$empty_env(){\nvar val__28705__auto__ = cljs.env._STAR_compiler_STAR_;\nif((val__28705__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = cljs.env.default_compiler_env.cljs$core$IFn$_invoke$arity$0());\n} else {\n}\n\ntry{return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__28903_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__28903_SHARP_,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),p1__28903_SHARP_,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null)],null));\n}),cljs.core.list(new cljs.core.Symbol(null,\"alert\",\"alert\",1068580947,null),new cljs.core.Symbol(null,\"window\",\"window\",-1929916235,null),new cljs.core.Symbol(null,\"document\",\"document\",311342840,null),new cljs.core.Symbol(null,\"console\",\"console\",-1426363712,null),new cljs.core.Symbol(null,\"escape\",\"escape\",648929575,null),new cljs.core.Symbol(null,\"unescape\",\"unescape\",-2037730561,null),new cljs.core.Symbol(null,\"screen\",\"screen\",-664376021,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"navigator\",\"navigator\",-604431588,null),new cljs.core.Symbol(null,\"history\",\"history\",1393136307,null),new cljs.core.Symbol(null,\"location\",\"location\",-838836381,null),new cljs.core.Symbol(null,\"global\",\"global\",1734126574,null),new cljs.core.Symbol(null,\"process\",\"process\",-1011242831,null),new cljs.core.Symbol(null,\"require\",\"require\",1172530194,null),new cljs.core.Symbol(null,\"module\",\"module\",-1229817578,null),new cljs.core.Symbol(null,\"exports\",\"exports\",895523255,null))))], null);\n}finally {if((val__28705__auto__ == null)){\n(cljs.env._STAR_compiler_STAR_ = null);\n} else {\n}\n}});\ncljs.analyzer.source_info__GT_error_data = (function cljs$analyzer$source_info__GT_error_data(p__28904){\nvar map__28905 = p__28904;\nvar map__28905__$1 = (((((!((map__28905 == null))))?(((((map__28905.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28905.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28905):map__28905);\nvar file = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28905__$1,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878));\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28905__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28905__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(\"clojure.error\",\"source\",\"clojure.error/source\",-2011936397),file,new cljs.core.Keyword(\"clojure.error\",\"line\",\"clojure.error/line\",-1816287471),line,new cljs.core.Keyword(\"clojure.error\",\"column\",\"clojure.error/column\",304721553),column], null);\n});\ncljs.analyzer.source_info = (function cljs$analyzer$source_info(var_args){\nvar G__28908 = arguments.length;\nswitch (G__28908) {\ncase 1:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1 = (function (env){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(null,env);\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2 = (function (name,env){\nvar G__28909 = new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)))?\"cljs/core.cljs\":cljs.analyzer._STAR_cljs_file_STAR_),new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(name,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(name,env)], null);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912).cljs$core$IFn$_invoke$arity$1(env))){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([G__28909,cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"root-source-info\",\"root-source-info\",-1436144912)], null))], 0));\n} else {\nreturn G__28909;\n}\n}));\n\n(cljs.analyzer.source_info.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.message = (function cljs$analyzer$message(env,s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),(cljs.core.truth_(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env))?[\" at line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env)),\" \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):(cljs.core.truth_(cljs.analyzer._STAR_cljs_file_STAR_)?[\" in file \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_file_STAR_)].join(''):null))].join('');\n});\ncljs.analyzer.warning = (function cljs$analyzer$warning(warning_type,env,extra){\nvar seq__28910 = cljs.core.seq(cljs.analyzer._STAR_cljs_warning_handlers_STAR_);\nvar chunk__28911 = null;\nvar count__28912 = (0);\nvar i__28913 = (0);\nwhile(true){\nif((i__28913 < count__28912)){\nvar handler = chunk__28911.cljs$core$IIndexed$_nth$arity$2(null,i__28913);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__29977 = seq__28910;\nvar G__29978 = chunk__28911;\nvar G__29979 = count__28912;\nvar G__29980 = (i__28913 + (1));\nseq__28910 = G__29977;\nchunk__28911 = G__29978;\ncount__28912 = G__29979;\ni__28913 = G__29980;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__28910);\nif(temp__5735__auto__){\nvar seq__28910__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__28910__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__28910__$1);\nvar G__29982 = cljs.core.chunk_rest(seq__28910__$1);\nvar G__29983 = c__4609__auto__;\nvar G__29984 = cljs.core.count(c__4609__auto__);\nvar G__29985 = (0);\nseq__28910 = G__29982;\nchunk__28911 = G__29983;\ncount__28912 = G__29984;\ni__28913 = G__29985;\ncontinue;\n} else {\nvar handler = cljs.core.first(seq__28910__$1);\n(handler.cljs$core$IFn$_invoke$arity$3 ? handler.cljs$core$IFn$_invoke$arity$3(warning_type,env,extra) : handler.call(null,warning_type,env,extra));\n\n\nvar G__29987 = cljs.core.next(seq__28910__$1);\nvar G__29988 = null;\nvar G__29989 = (0);\nvar G__29990 = (0);\nseq__28910 = G__29987;\nchunk__28911 = G__29988;\ncount__28912 = G__29989;\ni__28913 = G__29990;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.accumulating_warning_handler = (function cljs$analyzer$accumulating_warning_handler(warn_acc){\nreturn (function (warning_type,env,extra){\nif(cljs.core.truth_((warning_type.cljs$core$IFn$_invoke$arity$1 ? warning_type.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_warnings_STAR_) : warning_type.call(null,cljs.analyzer._STAR_cljs_warnings_STAR_)))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(warn_acc,cljs.core.conj,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [warning_type,env,extra], null));\n} else {\nreturn null;\n}\n});\n});\ncljs.analyzer.replay_accumulated_warnings = (function cljs$analyzer$replay_accumulated_warnings(warn_acc){\nreturn cljs.core.run_BANG_((function (p1__28914_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.warning,p1__28914_SHARP_);\n}),cljs.core.deref(warn_acc));\n});\ncljs.analyzer.error_data = (function cljs$analyzer$error_data(var_args){\nvar G__28916 = arguments.length;\nswitch (G__28916) {\ncase 2:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2 = (function (env,phase){\nreturn cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,phase,null);\n}));\n\n(cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3 = (function (env,phase,symbol){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.source_info__GT_error_data(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358),phase], null),(cljs.core.truth_(symbol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"clojure.error\",\"symbol\",\"clojure.error/symbol\",1544821994),symbol], null):null)], 0));\n}));\n\n(cljs.analyzer.error_data.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.compile_syntax_error = (function cljs$analyzer$compile_syntax_error(env,msg,symbol){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"compile-syntax-check\",\"compile-syntax-check\",-1865080468),symbol),(new Error(msg)));\n});\ncljs.analyzer.error = (function cljs$analyzer$error(var_args){\nvar G__28918 = arguments.length;\nswitch (G__28918) {\ncase 2:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2 = (function (env,msg){\nreturn cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,msg,null);\n}));\n\n(cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3 = (function (env,msg,cause){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.message(env,msg),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349)),cause);\n}));\n\n(cljs.analyzer.error.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.analysis_error_QMARK_ = (function cljs$analyzer$analysis_error_QMARK_(ex){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"cljs\",\"analysis-error\",\"cljs/analysis-error\",-420526349),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(ex)));\n});\ncljs.analyzer.has_error_data_QMARK_ = (function cljs$analyzer$has_error_data_QMARK_(ex){\nreturn cljs.core.contains_QMARK_(cljs.core.ex_data(ex),new cljs.core.Keyword(\"clojure.error\",\"phase\",\"clojure.error/phase\",275140358));\n});\ncljs.analyzer.implicit_nses = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),\"null\",new cljs.core.Symbol(null,\"goog.string\",\"goog.string\",-2055533048,null),\"null\",new cljs.core.Symbol(null,\"goog\",\"goog\",-70603925,null),\"null\",new cljs.core.Symbol(null,\"goog.object\",\"goog.object\",678593132,null),\"null\",new cljs.core.Symbol(null,\"Math\",\"Math\",2033287572,null),\"null\",new cljs.core.Symbol(null,\"goog.array\",\"goog.array\",-671977860,null),\"null\"], null), null);\ncljs.analyzer.implicit_import_QMARK_ = (function cljs$analyzer$implicit_import_QMARK_(env,prefix,suffix){\nreturn cljs.core.contains_QMARK_(cljs.analyzer.implicit_nses,prefix);\n});\ncljs.analyzer.confirm_var_exist_warning = (function cljs$analyzer$confirm_var_exist_warning(env,prefix,suffix){\nreturn (function (env__$1,prefix__$1,suffix__$1){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-var\",\"undeclared-var\",-1624364944),env__$1,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),prefix__$1,new cljs.core.Keyword(null,\"suffix\",\"suffix\",367373057),suffix__$1,new cljs.core.Keyword(null,\"macro-present?\",\"macro-present?\",-1397713205),(!(((function (){var G__28920 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1));\nvar G__28921 = env__$1;\nreturn (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(G__28920,G__28921) : cljs.analyzer.get_expander.call(null,G__28920,G__28921));\n})() == null)))], null));\n});\n});\n/**\n * Check if a JavaScript namespace has been loaded. JavaScript vars are\n *   not currently checked.\n */\ncljs.analyzer.loaded_js_ns_QMARK_ = (function cljs$analyzer$loaded_js_ns_QMARK_(env,prefix){\nif(cljs.core.truth_(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix))){\nreturn null;\n} else {\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env);\nreturn (((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))) || ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394).cljs$core$IFn$_invoke$arity$1(ns),prefix) == null)))));\n}\n});\ncljs.analyzer.internal_js_module_exists_QMARK_ = (function cljs$analyzer$internal_js_module_exists_QMARK_(js_module_index,module){\nreturn cljs.core.contains_QMARK_(cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentHashSet.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((function (p__28922){\nvar vec__28923 = p__28922;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28923,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28923,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(v)], null);\n})),js_module_index),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module));\n});\ncljs.analyzer.js_module_exists_QMARK__STAR_ = cljs.core.memoize(cljs.analyzer.internal_js_module_exists_QMARK_);\ncljs.analyzer.js_module_exists_QMARK_ = (function cljs$analyzer$js_module_exists_QMARK_(module){\nreturn cljs.analyzer.js_module_exists_QMARK__STAR_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931)], null)),module);\n});\ncljs.analyzer.node_module_dep_QMARK_ = (function cljs$analyzer$node_module_dep_QMARK_(module){\ntry{return ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_target_STAR_,\"nodejs\")) && (cljs.core.boolean$(require.resolve(cljs.core.str.cljs$core$IFn$_invoke$arity$1(module)))));\n}catch (e28926){var _ = e28926;\nreturn false;\n}});\ncljs.analyzer.dep_has_global_exports_QMARK_ = (function cljs$analyzer$dep_has_global_exports_QMARK_(module){\nvar global_exports = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.str.cljs$core$IFn$_invoke$arity$1(module),new cljs.core.Keyword(null,\"global-exports\",\"global-exports\",-1644865592)], null));\nreturn ((cljs.core.contains_QMARK_(global_exports,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(module))) || (cljs.core.contains_QMARK_(global_exports,cljs.core.name(module))));\n});\ncljs.analyzer.confirm_var_exists = (function cljs$analyzer$confirm_var_exists(var_args){\nvar G__28928 = arguments.length;\nswitch (G__28928) {\ncase 3:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$3 = (function (env,prefix,suffix){\nvar warn = cljs.analyzer.confirm_var_exist_warning(env,prefix,suffix);\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,warn);\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4 = (function (env,prefix,suffix,missing_fn){\nvar sufstr = cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix);\nvar suffix_str = (((((!((\"..\" === sufstr)))) && (/\\./.test(sufstr))))?cljs.core.first(clojure.string.split.cljs$core$IFn$_invoke$arity$2(sufstr,/\\./)):suffix);\nvar suffix__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix_str);\nif((((!(cljs.analyzer.implicit_import_QMARK_(env,prefix,suffix__$1)))) && ((!(cljs.analyzer.loaded_js_ns_QMARK_(env,prefix)))) && ((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),prefix)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"unquote\",\"unquote\",-1004694737,null),suffix__$1)))))) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),suffix__$1) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(prefix))))){\nreturn (missing_fn.cljs$core$IFn$_invoke$arity$3 ? missing_fn.cljs$core$IFn$_invoke$arity$3(env,prefix,suffix__$1) : missing_fn.call(null,env,prefix,suffix__$1));\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.confirm_var_exists.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.confirm_var_exists_throw = (function cljs$analyzer$confirm_var_exists_throw(){\nreturn (function (env,prefix,suffix){\nreturn cljs.analyzer.confirm_var_exists.cljs$core$IFn$_invoke$arity$4(env,prefix,suffix,(function (env__$1,prefix__$1,suffix__$1){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,[\"Unable to resolve var: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(suffix__$1),\" in this context\"].join(''));\n}));\n});\n});\ncljs.analyzer.resolve_ns_alias = (function cljs$analyzer$resolve_ns_alias(var_args){\nvar G__28930 = arguments.length;\nswitch (G__28930) {\ncase 2:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_ns_alias.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.resolve_macro_ns_alias = (function cljs$analyzer$resolve_macro_ns_alias(var_args){\nvar G__28932 = arguments.length;\nswitch (G__28932) {\ncase 2:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2 = (function (env,name){\nreturn cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,name,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name));\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3 = (function (env,name,not_found){\nvar sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name);\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym,not_found);\n}));\n\n(cljs.analyzer.resolve_macro_ns_alias.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and ns-sym, a symbol identifying a\n * namespace, confirm that the namespace exists. Warn if not found.\n */\ncljs.analyzer.confirm_ns = (function cljs$analyzer$confirm_ns(env,ns_sym){\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns_sym)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.implicit_nses,ns_sym) == null)) && ((cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),ns_sym) == null)) && ((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_sym) == null)) && (cljs.core.not(cljs.analyzer.js_module_exists_QMARK_(ns_sym))))){\nreturn cljs.analyzer.warning(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),ns_sym,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),ns_sym], null));\n} else {\nreturn null;\n}\n});\n/**\n * Is sym visible from core in the current compilation namespace?\n */\ncljs.analyzer.core_name_QMARK_ = (function cljs$analyzer$core_name_QMARK_(env,sym){\nif((function (){var or__4185__auto__ = (!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar temp__5737__auto__ = (cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.get_expander.cljs$core$IFn$_invoke$arity$2(sym,env) : cljs.analyzer.get_expander.call(null,sym,env));\nif((temp__5737__auto__ == null)){\nreturn false;\n} else {\nvar mac = temp__5737__auto__;\nvar ns = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(mac));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns.getName(),new cljs.core.Symbol(null,\"cljs.core$macros\",\"cljs.core$macros\",-2057787548,null));\n}\n}\n})()){\nreturn (!(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),sym)));\n} else {\nreturn false;\n}\n});\n/**\n * Is sym public?\n */\ncljs.analyzer.public_name_QMARK_ = (function cljs$analyzer$public_name_QMARK_(ns,sym){\nvar var_ast = (function (){var or__4185__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.name(ns),\"$macros\"].join('')),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym);\n}\n})();\nreturn (((!((var_ast == null)))) && (cljs.core.not((function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(var_ast);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"anonymous\",\"anonymous\",447897231).cljs$core$IFn$_invoke$arity$1(var_ast);\n}\n})())));\n});\ncljs.analyzer.js_tag_QMARK_ = (function cljs$analyzer$js_tag_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) && (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.namespace(x))))));\n});\ncljs.analyzer.normalize_js_tag = (function cljs$analyzer$normalize_js_tag(x){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),x)))){\nreturn cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(x),/\\./))),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null))], null));\n} else {\nreturn x;\n}\n});\n/**\n * Ensures that a type tag is a set.\n */\ncljs.analyzer.__GT_type_set = (function cljs$analyzer$__GT_type_set(t){\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn t;\n} else {\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc([t]);\n}\n});\ncljs.analyzer.canonicalize_type = (function cljs$analyzer$canonicalize_type(t){\n\nif((t instanceof cljs.core.Symbol)){\nreturn t;\n} else {\nif(cljs.core.empty_QMARK_(t)){\nreturn null;\n} else {\nif(((1) === cljs.core.count(t))){\nreturn cljs.core.first(t);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nif(cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null))){\nvar res = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(t,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null));\nif(((1) === cljs.core.count(res))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nreturn res;\n}\n} else {\nreturn t;\n\n}\n}\n}\n}\n}\n});\n/**\n * Produces a union of types.\n */\ncljs.analyzer.add_types = (function cljs$analyzer$add_types(var_args){\nvar G__28937 = arguments.length;\nswitch (G__28937) {\ncase 0:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__4810__auto__ = [];\nvar len__4789__auto___30052 = arguments.length;\nvar i__4790__auto___30054 = (0);\nwhile(true){\nif((i__4790__auto___30054 < len__4789__auto___30052)){\nargs_arr__4810__auto__.push((arguments[i__4790__auto___30054]));\n\nvar G__30057 = (i__4790__auto___30054 + (1));\ni__4790__auto___30054 = G__30057;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4811__auto__ = (new cljs.core.IndexedSeq(args_arr__4810__auto__.slice((2)),(0),null));\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__4811__auto__);\n\n}\n});\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$1 = (function (t1){\nreturn t1;\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2 = (function (t1,t2){\nif((((t1 == null)) || ((t2 == null)))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.canonicalize_type(clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.__GT_type_set(t1),cljs.analyzer.__GT_type_set(t2)));\n}\n}));\n\n(cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$variadic = (function (t1,t2,ts){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.add_types,cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(t1,t2),ts);\n}));\n\n/** @this {Function} */\n(cljs.analyzer.add_types.cljs$lang$applyTo = (function (seq28934){\nvar G__28935 = cljs.core.first(seq28934);\nvar seq28934__$1 = cljs.core.next(seq28934);\nvar G__28936 = cljs.core.first(seq28934__$1);\nvar seq28934__$2 = cljs.core.next(seq28934__$1);\nvar self__4776__auto__ = this;\nreturn self__4776__auto__.cljs$core$IFn$_invoke$arity$variadic(G__28935,G__28936,seq28934__$2);\n}));\n\n(cljs.analyzer.add_types.cljs$lang$maxFixedArity = (2));\n\ncljs.analyzer.alias__GT_type = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(null,\"String\",\"String\",-2070057435,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"Array\",\"Array\",-423496279,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"Boolean\",\"Boolean\",1661141587,null),new cljs.core.Symbol(null,\"symbol\",\"symbol\",601958831,null),new cljs.core.Symbol(null,\"Symbol\",\"Symbol\",716452869,null)], null);\ncljs.analyzer.has_extern_QMARK__STAR_ = (function cljs$analyzer$has_extern_QMARK__STAR_(var_args){\nvar G__28939 = arguments.length;\nswitch (G__28939) {\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar pre__$1 = (function (){var temp__5737__auto__ = cljs.core.find(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null)),cljs.core.first(pre));\nif((temp__5737__auto__ == null)){\nreturn pre;\n} else {\nvar me = temp__5737__auto__;\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.core.first(me)));\nif((temp__5737__auto____$1 == null)){\nreturn pre;\n} else {\nvar tag = temp__5737__auto____$1;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tag,new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre));\n}\n}\n})();\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(pre__$1,externs,externs);\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3 = (function (pre,externs,top){\nwhile(true){\nif(cljs.core.empty_QMARK_(pre)){\nreturn true;\n} else {\nvar x = cljs.core.first(pre);\nvar me = cljs.core.find(externs,x);\nif(cljs.core.not(me)){\nreturn false;\n} else {\nvar vec__28940 = me;\nvar x_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28940,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28940,(1),null);\nvar xmeta = cljs.core.meta(x_SINGLEQUOTE_);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Function\",\"Function\",-749895448,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(xmeta)))?new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802).cljs$core$IFn$_invoke$arity$1(xmeta):false))){\nvar or__4185__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.next(pre),externs_SINGLEQUOTE_,top);\n}\n} else {\nvar G__30083 = cljs.core.next(pre);\nvar G__30084 = externs_SINGLEQUOTE_;\nvar G__30085 = top;\npre = G__30083;\nexterns = G__30084;\ntop = G__30085;\ncontinue;\n}\n\n}\n\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK__STAR_.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.has_extern_QMARK_ = (function cljs$analyzer$has_extern_QMARK_(var_args){\nvar G__28944 = arguments.length;\nswitch (G__28944) {\ncase 1:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2(pre,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239)));\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$2 = (function (pre,externs){\nvar or__4185__auto__ = cljs.analyzer.has_extern_QMARK__STAR_.cljs$core$IFn$_invoke$arity$2(pre,externs);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(pre)))?(function (){var x = cljs.core.first(pre);\nvar or__4185__auto____$1 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Window\",\"Window\",-138860255,null),new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),x));\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(externs,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Number\",\"Number\",-508146185,null)], null),x));\n}\n})():null);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(pre)),\"cljs$\");\n}\n}\n}));\n\n(cljs.analyzer.has_extern_QMARK_.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.js_tag = (function cljs$analyzer$js_tag(var_args){\nvar G__28946 = arguments.length;\nswitch (G__28946) {\ncase 1:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1 = (function (pre){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2 = (function (pre,tag_type){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3(pre,tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"externs\",\"cljs.analyzer/externs\",893359239)));\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$3 = (function (pre,tag_type,externs){\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(pre,tag_type,externs,externs);\n}));\n\n(cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4 = (function (pre,tag_type,externs,top){\nvar temp__5735__auto__ = cljs.core.find(externs,cljs.core.first(pre));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar vec__28947 = temp__5735__auto__;\nvar p = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28947,(0),null);\nvar externs_SINGLEQUOTE_ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__28947,(1),null);\nvar me = vec__28947;\nvar tag = (function (){var G__28950 = cljs.core.meta(p);\nreturn (tag_type.cljs$core$IFn$_invoke$arity$1 ? tag_type.cljs$core$IFn$_invoke$arity$1(G__28950) : tag_type.call(null,G__28950));\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),(1))){\nif(cljs.core.truth_(tag)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.alias__GT_type.cljs$core$IFn$_invoke$arity$2(tag,tag) : cljs.analyzer.alias__GT_type.call(null,tag,tag))));\n} else {\nreturn null;\n}\n} else {\nvar or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.next(pre),tag_type,externs_SINGLEQUOTE_,top);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$4(cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null)], null),cljs.core.next(pre)),tag_type,cljs.core.get.cljs$core$IFn$_invoke$arity$2(top,tag),top);\n}\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.analyzer.js_tag.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.dotted_symbol_QMARK_ = (function cljs$analyzer$dotted_symbol_QMARK_(sym){\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nreturn ((goog.string.contains(s,\".\")) && ((!(goog.string.contains(s,\"..\")))));\n});\ncljs.analyzer.munge_node_lib = (function cljs$analyzer$munge_node_lib(name){\nreturn [\"node$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\ncljs.analyzer.munge_global_export = (function cljs$analyzer$munge_global_export(name){\nreturn [\"global$module$\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),/[.\\\\/]/,\"$$\")))].join('');\n});\n/**\n * Takes a namespace and an unqualified symbol and potentially returns a new\n *   symbol to be used in lieu of the original.\n */\ncljs.analyzer.resolve_alias = (function cljs$analyzer$resolve_alias(ns,sym){\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),ns))?(function (){var and__4174__auto__ = (function (){var fexpr__28954 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),\"null\",new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),\"null\"], null), null);\nreturn (fexpr__28954.cljs$core$IFn$_invoke$arity$1 ? fexpr__28954.cljs$core$IFn$_invoke$arity$1(sym) : fexpr__28954.call(null,sym));\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.analyzer.checked_arrays();\n} else {\nreturn and__4174__auto__;\n}\n})():false))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn\",\"warn\",-436710552),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget\",\"checked-aget\",950823006,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset\",\"checked-aset\",1556136760,null)], null),new cljs.core.Keyword(null,\"error\",\"error\",-978969032),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"aget\",\"aget\",1491056546,null),new cljs.core.Symbol(null,\"checked-aget'\",\"checked-aget'\",212330530,null),new cljs.core.Symbol(null,\"aset\",\"aset\",900773178,null),new cljs.core.Symbol(null,\"checked-aset'\",\"checked-aset'\",-510930777,null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.checked_arrays(),sym], null));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.ns__GT_module_type = (function cljs$analyzer$ns__GT_module_type(ns){\nif(cljs.core.truth_(cljs.analyzer.js_module_exists_QMARK_(ns))){\nreturn new cljs.core.Keyword(null,\"js\",\"js\",1768080579);\n} else {\nif(cljs.analyzer.node_module_dep_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"node\",\"node\",581201198);\n} else {\nif(cljs.analyzer.dep_has_global_exports_QMARK_(ns)){\nreturn new cljs.core.Keyword(null,\"global\",\"global\",93595047);\n} else {\nreturn null;\n}\n}\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.resolve_STAR_ !== 'undefined')){\n} else {\ncljs.analyzer.resolve_STAR_ = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__28955 = cljs.core.get_global_hierarchy;\nreturn (fexpr__28955.cljs$core$IFn$_invoke$arity$0 ? fexpr__28955.cljs$core$IFn$_invoke$arity$0() : fexpr__28955.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"resolve*\"),(function (env,sym,full_ns,current_ns){\nreturn cljs.analyzer.ns__GT_module_type(full_ns);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null);\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"node\",\"node\",581201198),(function (env,sym,full_ns,current_ns){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_node_lib(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"global\",\"global\",93595047),(function (env,sym,full_ns,current_ns){\nvar pre = cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null),cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./))));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),[cljs.analyzer.munge_global_export(full_ns),\".\",cljs.core.name(sym)].join('')),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null)),new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149),true], null);\n}));\n/**\n * Specially-treated symbols for which we don't trigger :private-var-access warnings.\n */\ncljs.analyzer.private_var_access_exceptions = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),\"null\"], null), null);\ncljs.analyzer.resolve_STAR_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (env,sym,full_ns,current_ns){\nvar sym_ast = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),full_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\nvar sym_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),cljs.core.name(sym));\nif(cljs.core.truth_(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns))?(function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"private\",\"private\",-558947994).cljs$core$IFn$_invoke$arity$1(sym_ast);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn ((cljs.core.not(cljs.analyzer._STAR_private_var_access_nowarn_STAR_)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.private_var_access_exceptions,sym_name)))));\n} else {\nreturn and__4174__auto__;\n}\n})():false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"private-var-access\",\"private-var-access\",967536101),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_name], null));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym_ast,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym_name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),full_ns], null)], 0));\n}));\ncljs.analyzer.required_QMARK_ = (function cljs$analyzer$required_QMARK_(ns,env){\nreturn ((cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)))),ns)) || (cljs.core.contains_QMARK_(cljs.core.set(cljs.core.vals(cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)))),ns)));\n});\n/**\n * Returns true if ns is a required namespace and a JavaScript module that\n * might be invokeable as a function.\n */\ncljs.analyzer.invokeable_ns_QMARK_ = (function cljs$analyzer$invokeable_ns_QMARK_(ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nif(cljs.analyzer.required_QMARK_(ns__$1,env)){\nvar or__4185__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn ((cljs.analyzer.node_module_dep_QMARK_(ns__$1)) || (cljs.analyzer.dep_has_global_exports_QMARK_(ns__$1)));\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.resolve_invokeable_ns = (function cljs$analyzer$resolve_invokeable_ns(ns,current_ns,env){\nvar ns__$1 = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns);\nvar module_type = cljs.analyzer.ns__GT_module_type(ns__$1);\nvar G__28956 = module_type;\nvar G__28956__$1 = (((G__28956 instanceof cljs.core.Keyword))?G__28956.fqn:null);\nswitch (G__28956__$1) {\ncase \"js\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((function (){var or__4185__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1);\n}\n})()),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null)], null);\n\nbreak;\ncase \"node\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_node_lib(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ncase \"global\":\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.analyzer.munge_global_export(cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$1))),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__28956__$1)].join('')));\n\n}\n});\ncljs.analyzer.handle_symbol_local = (function cljs$analyzer$handle_symbol_local(sym,lb){\nif((lb instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null);\n} else {\nreturn lb;\n}\n});\n/**\n * Resolve a var. Accepts a side-effecting confirm fn for producing\n * warnings about unresolved vars.\n */\ncljs.analyzer.resolve_var = (function cljs$analyzer$resolve_var(var_args){\nvar G__28958 = arguments.length;\nswitch (G__28958) {\ncase 2:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2 = (function (env,sym){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,null);\n}));\n\n(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3 = (function (env,sym,confirm){\nwhile(true){\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nif((\"js\" === cljs.core.namespace(sym))){\nvar symn = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar shadowed_by_local = cljs.analyzer.handle_symbol_local(symn,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,symn));\nif((!((shadowed_by_local == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"js-shadowed-by-local\",\"js-shadowed-by-local\",198048291),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym], null));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(shadowed_by_local,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nvar pre = cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./)));\nif(((cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre))) && (cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),sym,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.with_meta((function (){var or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$1(pre);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465),pre], null))], null),(function (){var temp__5735__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(pre,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar ret_tag = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358),true,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag], null);\n} else {\nreturn null;\n}\n})()], 0));\n\n}\n} else {\nvar s = cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym);\nvar lb = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,sym));\nvar current_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nif((!((lb == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lb,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724));\n} else {\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns = cljs.core.namespace(sym);\nvar ns__$1 = (((\"clojure.core\" === ns))?\"cljs.core\":ns);\nvar full_ns = cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,ns__$1,(function (){var or__4185__auto__ = (function (){var and__4174__auto__ = cljs.analyzer.js_module_exists_QMARK_(ns__$1);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),ns__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\n} else {\nreturn and__4174__auto__;\n}\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(ns__$1);\n}\n})());\nif((!((confirm == null)))){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(current_ns,full_ns)){\ncljs.analyzer.confirm_ns(env,full_ns);\n} else {\n}\n\nvar G__28959_30141 = env;\nvar G__28960_30142 = full_ns;\nvar G__28961_30143 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__28959_30141,G__28960_30142,G__28961_30143) : confirm.call(null,G__28959_30141,G__28960_30142,G__28961_30143));\n} else {\n}\n\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif(cljs.analyzer.dotted_symbol_QMARK_(sym)){\nvar idx = s.indexOf(\".\");\nvar prefix = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx));\nvar suffix = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1)));\nvar temp__5737__auto__ = cljs.analyzer.handle_symbol_local(prefix,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,prefix));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),prefix);\nif((temp__5737__auto____$1 == null)){\nvar temp__5737__auto____$2 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),prefix);\nif((temp__5737__auto____$2 == null)){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),prefix,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix)),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"\",prefix))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(suffix):cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),suffix)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),prefix], null)], 0));\n} else {\nvar info = temp__5737__auto____$2;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([info,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n}\n} else {\nvar full_ns = temp__5737__auto____$1;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),suffix)], null);\n}\n} else {\nvar lb__$1 = temp__5737__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(lb__$1)),\".\",suffix].join(''))], null);\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym) == null)))){\nvar full_ns = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym);\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),sym);\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.analyzer.resolve_STAR_.cljs$core$IFn$_invoke$arity$4(env,sym__$1,full_ns,current_ns);\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym) == null)))){\nvar G__30156 = env;\nvar G__30157 = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),sym);\nvar G__30158 = confirm;\nenv = G__30156;\nsym = G__30157;\nconfirm = G__30158;\ncontinue;\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym) == null)))){\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n} else {\nif(cljs.analyzer.core_name_QMARK_(env,sym)){\nif((!((confirm == null)))){\nvar G__28962_30159 = env;\nvar G__28963_30160 = new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null);\nvar G__28964_30161 = sym;\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(G__28962_30159,G__28963_30160,G__28964_30161) : confirm.call(null,G__28962_30159,G__28963_30160,G__28964_30161));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null)], null)], 0));\n} else {\nif(cljs.core.truth_(cljs.analyzer.invokeable_ns_QMARK_(s,env))){\nreturn cljs.analyzer.resolve_invokeable_ns(s,current_ns,env);\n} else {\nif((!((confirm == null)))){\n(confirm.cljs$core$IFn$_invoke$arity$3 ? confirm.cljs$core$IFn$_invoke$arity$3(env,current_ns,sym) : confirm.call(null,env,current_ns,sym));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),current_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(current_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),current_ns], null)], 0));\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.analyzer.resolve_var.cljs$lang$maxFixedArity = 3);\n\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n * Emits a warning if no such var exists.\n */\ncljs.analyzer.resolve_existing_var = (function cljs$analyzer$resolve_existing_var(env,sym){\nif(cljs.core.not(new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)))){\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env,sym,cljs.analyzer.confirm_var_exists);\n} else {\nreturn cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,sym);\n}\n});\n/**\n * Given env, an analysis environment env, and names, a list of symbols, confirm\n * that all correspond to declared dynamic vars.\n */\ncljs.analyzer.confirm_bindings = (function cljs$analyzer$confirm_bindings(env,names){\nvar seq__28965 = cljs.core.seq(names);\nvar chunk__28966 = null;\nvar count__28967 = (0);\nvar i__28968 = (0);\nwhile(true){\nif((i__28968 < count__28967)){\nvar name = chunk__28966.cljs$core$IIndexed$_nth$arity$2(null,i__28968);\nvar env_30165__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_30166 = cljs.analyzer.resolve_existing_var(env_30165__$1,name);\nif(cljs.core.truth_((function (){var and__4174__auto__ = ev_30166;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_30166));\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_30165__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_30166,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_30166)], null));\n} else {\n}\n\n\nvar G__30167 = seq__28965;\nvar G__30168 = chunk__28966;\nvar G__30169 = count__28967;\nvar G__30170 = (i__28968 + (1));\nseq__28965 = G__30167;\nchunk__28966 = G__30168;\ncount__28967 = G__30169;\ni__28968 = G__30170;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__28965);\nif(temp__5735__auto__){\nvar seq__28965__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__28965__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__28965__$1);\nvar G__30171 = cljs.core.chunk_rest(seq__28965__$1);\nvar G__30172 = c__4609__auto__;\nvar G__30173 = cljs.core.count(c__4609__auto__);\nvar G__30174 = (0);\nseq__28965 = G__30171;\nchunk__28966 = G__30172;\ncount__28967 = G__30173;\ni__28968 = G__30174;\ncontinue;\n} else {\nvar name = cljs.core.first(seq__28965__$1);\nvar env_30175__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ev_30176 = cljs.analyzer.resolve_existing_var(env_30175__$1,name);\nif(cljs.core.truth_((function (){var and__4174__auto__ = ev_30176;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(ev_30176));\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),env_30175__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ev\",\"ev\",-406827324),ev_30176,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ev_30176)], null));\n} else {\n}\n\n\nvar G__30178 = cljs.core.next(seq__28965__$1);\nvar G__30179 = null;\nvar G__30180 = (0);\nvar G__30181 = (0);\nseq__28965 = G__30178;\nchunk__28966 = G__30179;\ncount__28967 = G__30180;\ni__28968 = G__30181;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\n/**\n * Given env, an analysis environment, and sym, a symbol, resolve a macro.\n */\ncljs.analyzer.resolve_macro_var = (function cljs$analyzer$resolve_macro_var(env,sym){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar namespaces = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927));\nif((!((cljs.core.namespace(sym) == null)))){\nvar ns__$1 = cljs.core.namespace(sym);\nvar ns__$2 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure.core\",ns__$1))?\"cljs.core\":ns__$1);\nvar full_ns = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$2(env,ns__$2);\nvar full_ns__$1 = (((!(clojure.string.ends_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(full_ns),\"$macros\"].join('')):full_ns);\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null)) == null)))){\nvar full_ns = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym], null));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null));\n} else {\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null)) == null)))){\nvar qualified_symbol = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym], null));\nvar full_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [full_ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym__$1], null));\n} else {\nvar ns__$1 = (((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),sym], null)) == null))))?ns:((cljs.analyzer.core_name_QMARK_(env,sym))?cljs.analyzer.CLJS_CORE_MACROS_SYM:null));\nif((!((ns__$1 == null)))){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(namespaces,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$1,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null));\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\n\n\ncljs.analyzer.specials = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 22, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\",new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),\"null\",new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),\"null\",new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),\"null\",new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),\"null\",new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),\"null\",new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),\"null\",new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),\"null\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),\"null\",new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),\"null\",new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),\"null\",new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),\"null\",new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),\"null\",new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),\"null\",new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),\"null\",new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),\"null\",new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),\"null\",new cljs.core.Symbol(null,\".\",\".\",1975675962,null),\"null\",new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),\"null\",new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),\"null\",new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),\"null\",new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),\"null\"], null), null);\ncljs.analyzer._STAR_recur_frames_STAR_ = null;\ncljs.analyzer._STAR_loop_lets_STAR_ = cljs.core.List.EMPTY;\ncljs.analyzer._STAR_allow_redef_STAR_ = false;\ncljs.analyzer._STAR_allow_ns_STAR_ = true;\ncljs.analyzer.analyze_keyword = (function cljs$analyzer$analyze_keyword(env,sym){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null)], null);\n});\ncljs.analyzer.get_tag = (function cljs$analyzer$get_tag(e){\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e)));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5737__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e));\n} else {\nvar tag = temp__5737__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.find_matching_method = (function cljs$analyzer$find_matching_method(f,params){\nvar methods$ = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(f);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(f));\n}\n})();\nvar c = cljs.core.count(params);\nreturn cljs.core.some((function (m){\nvar and__4174__auto__ = (function (){var or__4185__auto__ = (new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869).cljs$core$IFn$_invoke$arity$1(m) === c);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(m);\n}\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn m;\n} else {\nreturn and__4174__auto__;\n}\n}),methods$);\n});\ncljs.analyzer.type_QMARK_ = (function cljs$analyzer$type_QMARK_(env,t){\nif((((!((t == null)))) && ((t instanceof cljs.core.Symbol)))){\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env,t);\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(var$));\nif((temp__5737__auto____$1 == null)){\nvar temp__5737__auto____$2 = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5737__auto____$2 == null)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"PersistentHashMap\",\"cljs.core/PersistentHashMap\",-454120575,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"List\",\"cljs.core/List\",1708954352,null),\"null\"], null), null),t);\n} else {\nvar proto = temp__5737__auto____$2;\nreturn proto;\n}\n} else {\nvar type = temp__5737__auto____$1;\nreturn type;\n}\n} else {\nvar type = temp__5737__auto__;\nreturn type;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.NOT_NATIVE = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null),\"null\",new cljs.core.Symbol(null,\"not-native\",\"not-native\",-236392494,null),\"null\"], null), null);\ncljs.analyzer.BOOLEAN_OR_SEQ = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),\"null\",new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\"], null), null);\ncljs.analyzer.unwrap_quote = (function cljs$analyzer$unwrap_quote(p__28969){\nvar map__28970 = p__28969;\nvar map__28970__$1 = (((((!((map__28970 == null))))?(((((map__28970.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28970.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28970):map__28970);\nvar expr = map__28970__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28970__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif(cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245))){\nreturn new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(expr);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_if = (function cljs$analyzer$infer_if(env,e){\nvar map__28972 = cljs.analyzer.unwrap_quote(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(e));\nvar map__28972__$1 = (((((!((map__28972 == null))))?(((((map__28972.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28972.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28972):map__28972);\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28972__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar form = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28972__$1,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471));\nvar then_tag = (function (){var G__28974 = env;\nvar G__28975 = new cljs.core.Keyword(null,\"then\",\"then\",460598070).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28974,G__28975) : cljs.analyzer.infer_tag.call(null,G__28974,G__28975));\n})();\nif(((cljs.core.keyword_identical_QMARK_(op,new cljs.core.Keyword(null,\"const\",\"const\",1709929842))) && ((!((form == null)))) && ((!(form === false))))){\nreturn then_tag;\n} else {\nvar else_tag = (function (){var G__28976 = env;\nvar G__28977 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28976,G__28977) : cljs.analyzer.infer_tag.call(null,G__28976,G__28977));\n})();\nif(((cljs.core.symbol_identical_QMARK_(then_tag,else_tag)) || (cljs.core.symbol_identical_QMARK_(else_tag,cljs.analyzer.IGNORE_SYM)))){\nreturn then_tag;\n} else {\nif(cljs.core.symbol_identical_QMARK_(then_tag,cljs.analyzer.IGNORE_SYM)){\nreturn else_tag;\n} else {\nif((((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,then_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,then_tag)))) && ((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NOT_NATIVE,else_tag) == null)))) || (cljs.analyzer.type_QMARK_(env,else_tag)))))){\nreturn new cljs.core.Symbol(null,\"clj\",\"clj\",980036099,null);\n} else {\nif((((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,then_tag) == null)))) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.BOOLEAN_OR_SEQ,else_tag) == null)))))){\nreturn new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null);\n} else {\nvar then_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(then_tag))?then_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([then_tag]));\nvar else_tag__$1 = ((cljs.analyzer.cljs_set_QMARK_(else_tag))?else_tag:cljs.core.PersistentHashSet.createAsIfByAssoc([else_tag]));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(then_tag__$1,else_tag__$1);\n}\n\n}\n}\n}\n}\n});\ncljs.analyzer.infer_invoke = (function cljs$analyzer$infer_invoke(env,p__28978){\nvar map__28979 = p__28978;\nvar map__28979__$1 = (((((!((map__28979 == null))))?(((((map__28979.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28979.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28979):map__28979);\nvar e = map__28979__$1;\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28979__$1,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28979__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar me = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.find_matching_method(f,args),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839));\nvar temp__5737__auto__ = (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,me) : cljs.analyzer.infer_tag.call(null,env,me));\nif((temp__5737__auto__ == null)){\nvar map__28981 = f;\nvar map__28981__$1 = (((((!((map__28981 == null))))?(((((map__28981.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__28981.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__28981):map__28981);\nvar info = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__28981__$1,new cljs.core.Keyword(null,\"info\",\"info\",-317069002));\nvar temp__5737__auto____$1 = ((((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(info) === true) || (new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(info) === true)))?new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(info):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(info)))?new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null):null));\nif((temp__5737__auto____$1 == null)){\nreturn cljs.analyzer.ANY_SYM;\n} else {\nvar ret_tag = temp__5737__auto____$1;\nreturn ret_tag;\n}\n} else {\nvar ret_tag = temp__5737__auto__;\nreturn ret_tag;\n}\n});\n/**\n * Given env, an analysis environment, and e, an AST node, return the inferred\n * type of the node\n */\ncljs.analyzer.infer_tag = (function cljs$analyzer$infer_tag(env,e){\nvar temp__5737__auto__ = cljs.analyzer.get_tag(e);\nif((temp__5737__auto__ == null)){\nvar G__28983 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(e);\nvar G__28983__$1 = (((G__28983 instanceof cljs.core.Keyword))?G__28983.fqn:null);\nswitch (G__28983__$1) {\ncase \"recur\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"throw\":\nreturn cljs.analyzer.IGNORE_SYM;\n\nbreak;\ncase \"let\":\nvar G__28984 = env;\nvar G__28985 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28984,G__28985) : cljs.analyzer.infer_tag.call(null,G__28984,G__28985));\n\nbreak;\ncase \"loop\":\nvar G__28986 = env;\nvar G__28987 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28986,G__28987) : cljs.analyzer.infer_tag.call(null,G__28986,G__28987));\n\nbreak;\ncase \"do\":\nvar G__28988 = env;\nvar G__28989 = new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28988,G__28989) : cljs.analyzer.infer_tag.call(null,G__28988,G__28989));\n\nbreak;\ncase \"fn-method\":\nvar G__28990 = env;\nvar G__28991 = new cljs.core.Keyword(null,\"body\",\"body\",-2049205669).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28990,G__28991) : cljs.analyzer.infer_tag.call(null,G__28990,G__28991));\n\nbreak;\ncase \"def\":\nvar G__28992 = env;\nvar G__28993 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28992,G__28993) : cljs.analyzer.infer_tag.call(null,G__28992,G__28993));\n\nbreak;\ncase \"invoke\":\nreturn cljs.analyzer.infer_invoke(env,e);\n\nbreak;\ncase \"if\":\nreturn cljs.analyzer.infer_if(env,e);\n\nbreak;\ncase \"const\":\nvar G__28994 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(e);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,G__28994)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(false,G__28994)){\nreturn cljs.analyzer.BOOLEAN_SYM;\n} else {\nreturn cljs.analyzer.ANY_SYM;\n\n}\n}\n\nbreak;\ncase \"quote\":\nvar G__28995 = env;\nvar G__28996 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28995,G__28996) : cljs.analyzer.infer_tag.call(null,G__28995,G__28996));\n\nbreak;\ncase \"var\":\ncase \"local\":\ncase \"js-var\":\ncase \"binding\":\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(e);\nif((temp__5737__auto____$1 == null)){\nvar G__28997 = env;\nvar G__28998 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(G__28997,G__28998) : cljs.analyzer.infer_tag.call(null,G__28997,G__28998));\n} else {\nvar init = temp__5737__auto____$1;\nreturn (cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.infer_tag.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.infer_tag.call(null,env,init));\n}\n\nbreak;\ncase \"host-field\":\ncase \"host-call\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ncase \"js\":\nreturn cljs.analyzer.ANY_SYM;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.parse !== 'undefined')){\n} else {\ncljs.analyzer.parse = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__28999 = cljs.core.get_global_hierarchy;\nreturn (fexpr__28999.cljs$core$IFn$_invoke$arity$0 ? fexpr__28999.cljs$core$IFn$_invoke$arity$0() : fexpr__28999.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"parse\"),(function() { \nvar G__30195__delegate = function (op,rest){\nreturn op;\n};\nvar G__30195 = function (op,var_args){\nvar rest = null;\nif (arguments.length > 1) {\nvar G__30196__i = 0, G__30196__a = new Array(arguments.length -  1);\nwhile (G__30196__i < G__30196__a.length) {G__30196__a[G__30196__i] = arguments[G__30196__i + 1]; ++G__30196__i;}\n  rest = new cljs.core.IndexedSeq(G__30196__a,0,null);\n} \nreturn G__30195__delegate.call(this,op,rest);};\nG__30195.cljs$lang$maxFixedArity = 1;\nG__30195.cljs$lang$applyTo = (function (arglist__30197){\nvar op = cljs.core.first(arglist__30197);\nvar rest = cljs.core.rest(arglist__30197);\nreturn G__30195__delegate(op,rest);\n});\nG__30195.cljs$core$IFn$_invoke$arity$variadic = G__30195__delegate;\nreturn G__30195;\n})()\n,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.var_meta = (function cljs$analyzer$var_meta(var_args){\nvar G__29003 = arguments.length;\nswitch (G__29003) {\ncase 1:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$1 = (function (var$){\nreturn cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,null);\n}));\n\n(cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2 = (function (var$,expr_env){\nvar sym = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$);\nvar ks = new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095)], null);\nvar m = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var user_meta = new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964).cljs$core$IFn$_invoke$arity$1(var$);\nvar uks = cljs.core.keys(user_meta);\nreturn cljs.core.zipmap(uks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29000_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(user_meta,p1__29000_SHARP_),null,(1),null)),(2),null));\n}),uks));\n})(),cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(cljs.core.zipmap(ks,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29001_SHARP_){\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.get.cljs$core$IFn$_invoke$arity$2(var$,p1__29001_SHARP_),null,(1),null)),(2),null));\n}),ks)),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null))))),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"test\",\"test\",577538877),cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"when\",\"cljs.core/when\",120293186,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\".-cljs$lang$test\",\".-cljs$lang$test\",718963148,null),null,(1),null)),(new cljs.core.List(null,sym,null,(1),null))))),null,(1),null))], 0)))),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),(function (){var arglists = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(var$);\nvar arglists_SINGLEQUOTE_ = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(arglists)))?cljs.core.second(arglists):arglists);\nreturn (new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(new cljs.core.List(null,cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta,arglists_SINGLEQUOTE_,new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)),(2),null));\n})()], 0))], 0));\nif(cljs.core.truth_(expr_env)){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,m) : cljs.analyzer.analyze.call(null,expr_env,m));\n} else {\nreturn m;\n}\n}));\n\n(cljs.analyzer.var_meta.cljs$lang$maxFixedArity = 2);\n\ncljs.analyzer.var_ast = (function cljs$analyzer$var_ast(env,sym){\nvar _STAR_private_var_access_nowarn_STAR__orig_val__29004 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__29005 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__29005);\n\ntry{var env__$1 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar var$ = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$3(env__$1,sym,cljs.analyzer.confirm_var_exists_throw());\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar temp__5739__auto__ = new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(var$);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar var_ns = temp__5739__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym)),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),(function (){var G__29006 = expr_env;\nvar G__29007 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.name(var_ns),cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(var$))),null,(1),null)))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29006,G__29007) : cljs.analyzer.analyze.call(null,G__29006,G__29007));\n})(),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.analyzer.var_meta.cljs$core$IFn$_invoke$arity$2(var$,expr_env)], null);\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__29004);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"var\",\"var\",870848730,null),(function (op,env,p__29008,_,___$1){\nvar vec__29009 = p__29008;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29009,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29009,(1),null);\nvar form = vec__29009;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to var\");\n} else {\n}\n\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Argument to var must be symbol\");\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"the-var\",\"the-var\",1428415613),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964)], null),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),cljs.analyzer.var_ast(env,sym)], 0));\n}));\ncljs.analyzer.predicate__GT_tag = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(\"cljs.core\",\"array?\",\"cljs.core/array?\",-1655912448,null),new cljs.core.Symbol(\"cljs.core\",\"boolean?\",\"cljs.core/boolean?\",1400713761,null),new cljs.core.Symbol(\"cljs.core\",\"char?\",\"cljs.core/char?\",416405281,null),new cljs.core.Symbol(\"cljs.core\",\"sequential?\",\"cljs.core/sequential?\",1777854658,null),new cljs.core.Symbol(\"cljs.core\",\"keyword?\",\"cljs.core/keyword?\",713156450,null),new cljs.core.Symbol(\"cljs.core\",\"simple-symbol?\",\"cljs.core/simple-symbol?\",-1951205629,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-symbol?\",\"cljs.core/qualified-symbol?\",1570873476,null),new cljs.core.Symbol(\"cljs.core\",\"var?\",\"cljs.core/var?\",1711182854,null),new cljs.core.Symbol(\"cljs.core\",\"map-entry?\",\"cljs.core/map-entry?\",465406728,null),new cljs.core.Symbol(\"cljs.core\",\"double?\",\"cljs.core/double?\",1757455529,null),new cljs.core.Symbol(\"cljs.core\",\"string?\",\"cljs.core/string?\",-2072921719,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-ident?\",\"cljs.core/qualified-ident?\",-1863492566,null),new cljs.core.Symbol(\"cljs.core\",\"qualified-keyword?\",\"cljs.core/qualified-keyword?\",-308091478,null),new cljs.core.Symbol(\"cljs.core\",\"inst?\",\"cljs.core/inst?\",1216133710,null),new cljs.core.Symbol(\"cljs.core\",\"float?\",\"cljs.core/float?\",-941017745,null),new cljs.core.Symbol(\"cljs.core\",\"true?\",\"cljs.core/true?\",-77973136,null),new cljs.core.Symbol(\"cljs.core\",\"number?\",\"cljs.core/number?\",-811857295,null),new cljs.core.Symbol(\"cljs.core\",\"volatile?\",\"cljs.core/volatile?\",-1122186415,null),new cljs.core.Symbol(\"cljs.core\",\"integer?\",\"cljs.core/integer?\",1710697810,null),new cljs.core.Symbol(\"cljs.core\",\"infinite?\",\"cljs.core/infinite?\",-1069503726,null),new cljs.core.Symbol(\"cljs.core\",\"undefined?\",\"cljs.core/undefined?\",-1206515693,null),new cljs.core.Symbol(\"cljs.core\",\"uuid?\",\"cljs.core/uuid?\",-15131116,null),new cljs.core.Symbol(\"cljs.core\",\"record?\",\"cljs.core/record?\",1307655860,null),new cljs.core.Symbol(\"cljs.core\",\"reduced?\",\"cljs.core/reduced?\",-1192491371,null),new cljs.core.Symbol(\"cljs.core\",\"tagged-literal?\",\"cljs.core/tagged-literal?\",-1159666987,null),new cljs.core.Symbol(\"cljs.core\",\"nil?\",\"cljs.core/nil?\",945071861,null),new cljs.core.Symbol(\"cljs.core\",\"zero?\",\"cljs.core/zero?\",-341242858,null),new cljs.core.Symbol(\"cljs.core\",\"false?\",\"cljs.core/false?\",-1660815306,null),new cljs.core.Symbol(\"cljs.core\",\"list?\",\"cljs.core/list?\",-684796618,null),new cljs.core.Symbol(\"cljs.core\",\"simple-ident?\",\"cljs.core/simple-ident?\",1674885558,null),new cljs.core.Symbol(\"cljs.core\",\"simple-keyword?\",\"cljs.core/simple-keyword?\",39474330,null),new cljs.core.Symbol(\"cljs.core\",\"seqable?\",\"cljs.core/seqable?\",-745394886,null),new cljs.core.Symbol(\"cljs.core\",\"symbol?\",\"cljs.core/symbol?\",1422196122,null),new cljs.core.Symbol(\"cljs.core\",\"seq?\",\"cljs.core/seq?\",-1302056292,null),new cljs.core.Symbol(\"cljs.core\",\"delay?\",\"cljs.core/delay?\",2099859324,null),new cljs.core.Symbol(\"cljs.core\",\"regexp?\",\"cljs.core/regexp?\",-348418979,null),new cljs.core.Symbol(\"cljs.core\",\"ident?\",\"cljs.core/ident?\",1567441535,null),new cljs.core.Symbol(\"cljs.core\",\"chunked-seq?\",\"cljs.core/chunked-seq?\",-712922369,null)],[new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"cljs.core\",\"ISequential\",\"cljs.core/ISequential\",-950981796,null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(\"cljs.core\",\"Var\",\"cljs.core/Var\",2071014443,null),new cljs.core.Symbol(\"cljs.core\",\"IMapEntry\",\"cljs.core/IMapEntry\",535941300,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Symbol(\"cljs.core\",\"Inst\",\"cljs.core/Inst\",959205835,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"cljs.core\",\"Volatile\",\"cljs.core/Volatile\",-1098692185,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(\"cljs.core\",\"IUUID\",\"cljs.core/IUUID\",-1606521379,null),new cljs.core.Symbol(\"cljs.core\",\"IRecord\",\"cljs.core/IRecord\",635852000,null),new cljs.core.Symbol(\"cljs.core\",\"Reduced\",\"cljs.core/Reduced\",971663396,null),new cljs.core.Symbol(\"cljs.core\",\"ITaggedLiteral\",\"cljs.core/ITaggedLiteral\",-1236965094,null),new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(\"cljs.core\",\"ISeqable\",\"cljs.core/ISeqable\",137437203,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),new cljs.core.Symbol(null,\"seq\",\"seq\",-177272256,null),new cljs.core.Symbol(\"cljs.core\",\"Delay\",\"cljs.core/Delay\",-21574999,null),new cljs.core.Symbol(\"js\",\"RegExp\",\"js/RegExp\",1778210562,null),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null),\"null\"], null), null),new cljs.core.Symbol(\"cljs.core\",\"IChunkedSeq\",\"cljs.core/IChunkedSeq\",-892943716,null)]);\n/**\n * Look for a predicate-induced tag when the test expression is a simple\n * application of a predicate to a local, as in (string? x).\n */\ncljs.analyzer.simple_predicate_induced_tag = (function cljs$analyzer$simple_predicate_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((2) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__29012 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29013 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29013);\n\ntry{var G__29014 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29015 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29014,G__29015) : cljs.analyzer.analyze.call(null,G__29014,G__29015));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29012);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nvar temp__5735__auto__ = (function (){var G__29016 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nreturn (cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.predicate__GT_tag.cljs$core$IFn$_invoke$arity$1(G__29016) : cljs.analyzer.predicate__GT_tag.call(null,G__29016));\n})();\nif(cljs.core.truth_(temp__5735__auto__)){\nvar tag = temp__5735__auto__;\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_((((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Look for a type-check-induced tag when the test expression is the use of\n *   instance? on a local, as in (instance? UUID x) or implements? on a local, as\n *   in (implements? ICounted x).\n */\ncljs.analyzer.type_check_induced_tag = (function cljs$analyzer$type_check_induced_tag(env,test){\nif(((cljs.core.list_QMARK_(test)) && (((3) === cljs.core.count(test))) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,test)) && ((!(cljs.core.contains_QMARK_(cljs.analyzer.specials,cljs.core.first(test))))))){\nvar analyzed_fn = (function (){var _STAR_cljs_warnings_STAR__orig_val__29017 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29018 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29018);\n\ntry{var G__29019 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29020 = cljs.core.first(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29019,G__29020) : cljs.analyzer.analyze.call(null,G__29019,G__29020));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29017);\n}})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_fn))){\nif(cljs.core.truth_((function (){var G__29022 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_fn);\nvar fexpr__29021 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Symbol(\"cljs.core\",\"implements?\",\"cljs.core/implements?\",-251485149,null),\"null\",new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),\"null\"], null), null);\nreturn (fexpr__29021.cljs$core$IFn$_invoke$arity$1 ? fexpr__29021.cljs$core$IFn$_invoke$arity$1(G__29022) : fexpr__29021.call(null,G__29022));\n})())){\nvar analyzed_type = (function (){var _STAR_cljs_warnings_STAR__orig_val__29023 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29024 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29024);\n\ntry{var G__29025 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29026 = cljs.core.second(test);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29025,G__29026) : cljs.analyzer.analyze.call(null,G__29025,G__29026));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29023);\n}})();\nvar tag = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(analyzed_type);\nvar sym = cljs.core.last(test);\nif(cljs.core.truth_(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(analyzed_type)))?(((cljs.core.namespace(sym) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym], null)):false):false))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sym,tag], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Refine a tag to exclude clj-nil if the test is a local.\n */\ncljs.analyzer.truth_induced_tag = (function cljs$analyzer$truth_induced_tag(env,test){\nif(cljs.core.truth_((((test instanceof cljs.core.Symbol))?(((cljs.core.namespace(test) == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),test], null)):false):false))){\nvar analyzed_symbol = (function (){var _STAR_cljs_warnings_STAR__orig_val__29027 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29028 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29028);\n\ntry{var G__29029 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29030 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29029,G__29030) : cljs.analyzer.analyze.call(null,G__29029,G__29030));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29027);\n}})();\nvar temp__5735__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(analyzed_symbol);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar tag = temp__5735__auto__;\nif(((cljs.core.set_QMARK_(tag)) && (cljs.core.contains_QMARK_(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [test,cljs.analyzer.canonicalize_type(cljs.core.disj.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null)))], null);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n/**\n * Looks at the test and sets any tags which are induced by virtue\n *   of the test being truthy. For example in (if (string? x) x :bar)\n *   the local x in the then branch must be of string type.\n */\ncljs.analyzer.set_test_induced_tags = (function cljs$analyzer$set_test_induced_tags(env,test){\nvar vec__29031 = (function (){var or__4185__auto__ = cljs.analyzer.simple_predicate_induced_tag(env,test);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.analyzer.type_check_induced_tag(env,test);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.truth_induced_tag(env,test);\n}\n}\n})();\nvar local = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29031,(0),null);\nvar tag = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29031,(1),null);\nvar G__29034 = env;\nif(cljs.core.truth_(local)){\nreturn cljs.core.assoc_in(G__29034,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),local,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null),tag);\n} else {\nreturn G__29034;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null),(function (op,env,p__29035,name,_){\nvar vec__29036 = p__29035;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29036,(0),null);\nvar test = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29036,(1),null);\nvar then = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29036,(2),null);\nvar else$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29036,(3),null);\nvar form = vec__29036;\nif((cljs.core.count(form) < (3))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too few arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.compile_syntax_error(env,\"Too many arguments to if\",new cljs.core.Symbol(null,\"if\",\"if\",1181717262,null));\n} else {\n}\n\nvar test_expr = (function (){var _STAR_recur_frames_STAR__orig_val__29039 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29040 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29040);\n\ntry{var G__29041 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29042 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29041,G__29042) : cljs.analyzer.analyze.call(null,G__29041,G__29042));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29039);\n}})();\nvar then_expr = (function (){var _STAR_allow_redef_STAR__orig_val__29043 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__29044 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__29044);\n\ntry{var G__29045 = cljs.analyzer.set_test_induced_tags(env,test);\nvar G__29046 = then;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29045,G__29046) : cljs.analyzer.analyze.call(null,G__29045,G__29046));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__29043);\n}})();\nvar else_expr = (function (){var _STAR_allow_redef_STAR__orig_val__29047 = cljs.analyzer._STAR_allow_redef_STAR_;\nvar _STAR_allow_redef_STAR__temp_val__29048 = true;\n(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__temp_val__29048);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,else$) : cljs.analyzer.analyze.call(null,env,else$));\n}finally {(cljs.analyzer._STAR_allow_redef_STAR_ = _STAR_allow_redef_STAR__orig_val__29047);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"if\",\"if\",-458814265),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test_expr,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then_expr,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),else_expr,new cljs.core.Keyword(null,\"unchecked\",\"unchecked\",924418378),cljs.core._STAR_unchecked_if_STAR_,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.Keyword(null,\"else\",\"else\",-1508377146)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"case*\",\"case*\",-1938255072,null),(function (op,env,p__29051,name,_){\nvar vec__29052 = p__29051;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29052,(0),null);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29052,(1),null);\nvar tests = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29052,(2),null);\nvar thens = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29052,(3),null);\nvar default$ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29052,(4),null);\nvar form = vec__29052;\nif((sym instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* must switch on symbol\",\"\\n\",\"(symbol? sym)\"].join('')));\n}\n\nif(cljs.core.every_QMARK_(cljs.core.vector_QMARK_,tests)){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be grouped in vectors\",\"\\n\",\"(every? vector? tests)\"].join('')));\n}\n\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar v = (function (){var _STAR_recur_frames_STAR__orig_val__29055 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29056 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29056);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,sym) : cljs.analyzer.analyze.call(null,expr_env,sym));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29055);\n}})();\nvar tests__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29049_SHARP_){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (t){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,t) : cljs.analyzer.analyze.call(null,expr_env,t));\n}),p1__29049_SHARP_);\n}),tests);\nvar thens__$1 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29050_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,p1__29050_SHARP_) : cljs.analyzer.analyze.call(null,env,p1__29050_SHARP_));\n}),thens);\nvar nodes = cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tests__$2,then){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-node\",\"case-node\",1016946320),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (test){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-test\",\"case-test\",-213512472),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(test),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),expr_env,new cljs.core.Keyword(null,\"test\",\"test\",577538877),test,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877)], null)], null);\n}),tests__$2),new cljs.core.Keyword(null,\"then\",\"then\",460598070),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case-then\",\"case-then\",2107591745),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(then),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"then\",\"then\",460598070),then,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tests\",\"tests\",-1041085625),new cljs.core.Keyword(null,\"then\",\"then\",460598070)], null)], null);\n}),tests__$1,thens__$1);\nvar default$__$1 = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,default$) : cljs.analyzer.analyze.call(null,env,default$));\nif(cljs.core.every_QMARK_((function (t){\nvar or__4185__auto__ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(t));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(t))){\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(cljs.core.number_QMARK_,cljs.core.string_QMARK_,cljs.core.char_QMARK_)(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(t));\n} else {\nreturn false;\n}\n}\n}),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,tests__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"case* tests must be numbers, strings, or constants\",\"\\n\",\"(every? (fn [t] (or (-> t :info :const) (and (= :const (:op t)) ((some-fn number? string? char?) (:form t))))) (apply concat tests))\"].join('')));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"case\",\"case\",1143702196),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"test\",\"test\",577538877),v,new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),nodes,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),default$__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),new cljs.core.Keyword(null,\"nodes\",\"nodes\",-2099585805),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),(function (op,env,p__29057,name,_){\nvar vec__29058 = p__29057;\nvar ___$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29058,(0),null);\nvar throw_form = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29058,(1),null);\nvar form = vec__29058;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too few arguments to throw, throw expects a single Error instance\");\n} else {\nif(((2) < cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to throw, throw expects a single Error instance\");\n} else {\n}\n}\n\nvar throw_expr = (function (){var _STAR_recur_frames_STAR__orig_val__29061 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29062 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29062);\n\ntry{var G__29063 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29064 = throw_form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29063,G__29064) : cljs.analyzer.analyze.call(null,G__29063,G__29064));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29061);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"throw\",\"throw\",-1044625833),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064),throw_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exception\",\"exception\",-335277064)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"try\",\"try\",-1273693247,null),(function (op,env,p__29069,name,_){\nvar vec__29070 = p__29069;\nvar seq__29071 = cljs.core.seq(vec__29070);\nvar first__29072 = cljs.core.first(seq__29071);\nvar seq__29071__$1 = cljs.core.next(seq__29071);\nvar ___$1 = first__29072;\nvar body = seq__29071__$1;\nvar form = vec__29070;\nvar catchenv = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),(function (p1__29065_SHARP_){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),p1__29065_SHARP_)){\nreturn new cljs.core.Keyword(null,\"return\",\"return\",-1891502105);\n} else {\nreturn p1__29065_SHARP_;\n}\n}));\nvar catch_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__29066_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__29066_SHARP_),new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null));\n}));\nvar default_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(catch_QMARK_,(function (p1__29067_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(p1__29067_SHARP_),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328));\n}));\nvar finally_QMARK_ = cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(cljs.core.seq_QMARK_,(function (p1__29068_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__29068_SHARP_),new cljs.core.Symbol(null,\"finally\",\"finally\",-1065347064,null));\n}));\nvar map__29073 = (function (){var parser = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"start\",\"start\",-355208981),new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),body,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),null,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),null], null);\nwhile(true){\nif(cljs.core.seq_QMARK_(new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser))){\nvar vec__29078 = new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350).cljs$core$IFn$_invoke$arity$1(parser);\nvar seq__29079 = cljs.core.seq(vec__29078);\nvar first__29080 = cljs.core.first(seq__29079);\nvar seq__29079__$1 = cljs.core.next(seq__29079);\nvar form__$1 = first__29080;\nvar forms_STAR_ = seq__29079__$1;\nvar parser_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"forms\",\"forms\",2045992350),forms_STAR_);\nvar G__29081 = new cljs.core.Keyword(null,\"state\",\"state\",-1988618099).cljs$core$IFn$_invoke$arity$1(parser);\nvar G__29081__$1 = (((G__29081 instanceof cljs.core.Keyword))?G__29081.fqn:null);\nswitch (G__29081__$1) {\ncase \"start\":\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__30213 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"catches\",\"catches\",-1478797617));\nparser = G__30213;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__30214 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__30214;\ncontinue;\n} else {\nvar G__30215 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),cljs.core.conj,form__$1);\nparser = G__30215;\ncontinue;\n\n}\n}\n\nbreak;\ncase \"catches\":\nif(cljs.core.truth_(default_QMARK_(form__$1))){\nvar G__30218 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], 0));\nparser = G__30218;\ncontinue;\n} else {\nif(cljs.core.truth_(catch_QMARK_(form__$1))){\nvar G__30219 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(parser_STAR_,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138)], null),cljs.core.conj,form__$1);\nparser = G__30219;\ncontinue;\n} else {\nif(cljs.core.truth_(finally_QMARK_(form__$1))){\nvar G__30220 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parser,new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705));\nparser = G__30220;\ncontinue;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid try form\");\n\n}\n}\n}\n\nbreak;\ncase \"finally\":\nvar G__30222 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(parser_STAR_,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426),form__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"state\",\"state\",-1988618099),new cljs.core.Keyword(null,\"done\",\"done\",-889844188)], 0));\nparser = G__30222;\ncontinue;\n\nbreak;\ncase \"done\":\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Unexpected form after finally\");\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__29081__$1)].join('')));\n\n}\n} else {\nreturn parser;\n}\nbreak;\n}\n})();\nvar map__29073__$1 = (((((!((map__29073 == null))))?(((((map__29073.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29073.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29073):map__29073);\nvar body__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29073__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669));\nvar cblocks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29073__$1,new cljs.core.Keyword(null,\"cblocks\",\"cblocks\",-1769978138));\nvar dblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29073__$1,new cljs.core.Keyword(null,\"dblock\",\"dblock\",-1325623381));\nvar fblock = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29073__$1,new cljs.core.Keyword(null,\"fblock\",\"fblock\",-1236607426));\nvar finally$ = ((cljs.core.seq(fblock))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var _STAR_recur_frames_STAR__orig_val__29083 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29084 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29084);\n\ntry{var G__29085 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__29086 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),cljs.core.rest(fblock))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29085,G__29086) : cljs.analyzer.analyze.call(null,G__29085,G__29086));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29083);\n}})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true):null);\nvar e = (cljs.core.truth_((function (){var or__4185__auto__ = cljs.core.seq(cblocks);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nreturn dblock;\n}\n})())?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"e\"):null);\nvar default$ = (function (){var temp__5733__auto__ = dblock;\nif(cljs.core.truth_(temp__5733__auto__)){\nvar vec__29087 = temp__5733__auto__;\nvar seq__29088 = cljs.core.seq(vec__29087);\nvar first__29089 = cljs.core.first(seq__29088);\nvar seq__29088__$1 = cljs.core.next(seq__29088);\nvar ___$2 = first__29089;\nvar first__29089__$1 = cljs.core.first(seq__29088__$1);\nvar seq__29088__$2 = cljs.core.next(seq__29088__$1);\nvar ___$3 = first__29089__$1;\nvar first__29089__$2 = cljs.core.first(seq__29088__$2);\nvar seq__29088__$3 = cljs.core.next(seq__29088__$2);\nvar name__$1 = first__29089__$2;\nvar cb = seq__29088__$3;\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0))));\n} else {\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null),null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))));\n}\n})();\nvar cblock = ((cljs.core.seq(cblocks))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"cond\",\"cljs.core/cond\",2005388338,null),null,(1),null)),cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p__29090){\nvar vec__29091 = p__29090;\nvar seq__29092 = cljs.core.seq(vec__29091);\nvar first__29093 = cljs.core.first(seq__29092);\nvar seq__29092__$1 = cljs.core.next(seq__29092);\nvar ___$2 = first__29093;\nvar first__29093__$1 = cljs.core.first(seq__29092__$1);\nvar seq__29092__$2 = cljs.core.next(seq__29092__$1);\nvar type = first__29093__$1;\nvar first__29093__$2 = cljs.core.first(seq__29092__$2);\nvar seq__29092__$3 = cljs.core.next(seq__29092__$2);\nvar name__$1 = first__29093__$2;\nvar cb = seq__29092__$3;\nif(cljs.core.truth_(name__$1)){\nif(cljs.core.not(cljs.core.namespace(name__$1))){\n} else {\nthrow (new Error([\"Assert failed: \",\"Can't qualify symbol in catch\",\"\\n\",\"(not (namespace name))\"].join('')));\n}\n} else {\n}\n\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"instance?\",\"cljs.core/instance?\",2044751870,null),null,(1),null)),(new cljs.core.List(null,type,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,e,null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,name__$1,null,(1),null)),(new cljs.core.List(null,e,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cb], 0)))),null,(1),null))))));\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cblocks], 0)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Keyword(null,\"else\",\"else\",-1508377146),null,(1),null)),(new cljs.core.List(null,default$,null,(1),null))], 0)))):default$);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(catchenv);\nvar locals__$1 = (cljs.core.truth_(e)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,e,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"line\",\"line\",212345235),cljs.analyzer.get_line(e,env),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),cljs.analyzer.get_col(e,env)], null)):locals);\nvar catch$ = (cljs.core.truth_(cblock)?(function (){var _STAR_recur_frames_STAR__orig_val__29094 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29095 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29095);\n\ntry{var G__29096 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(catchenv,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1);\nvar G__29097 = cblock;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29096,G__29097) : cljs.analyzer.analyze.call(null,G__29096,G__29097));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29094);\n}})():null);\nvar try$ = (function (){var _STAR_recur_frames_STAR__orig_val__29098 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29099 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29099);\n\ntry{var G__29100 = (cljs.core.truth_((function (){var or__4185__auto__ = e;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn finally$;\n}\n})())?catchenv:env);\nvar G__29101 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body__$1)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29100,G__29101) : cljs.analyzer.analyze.call(null,G__29100,G__29101));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29098);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"try\",\"try\",1380742522),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(try$,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705),finally$,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),e,new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524),catch$,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),cljs.core.vec(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),(cljs.core.truth_(catch$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"catch\",\"catch\",1038065524)], null):null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(finally$)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"finally\",\"finally\",1589088705)], null):null)], 0)))], null);\n}));\ncljs.analyzer.valid_proto = (function cljs$analyzer$valid_proto(x){\nif((x instanceof cljs.core.Symbol)){\nreturn x;\n} else {\nreturn null;\n}\n});\ncljs.analyzer.elide_env = (function cljs$analyzer$elide_env(env,ast,opts){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235));\n});\ncljs.analyzer.replace_env_pass = (function cljs$analyzer$replace_env_pass(new_env){\nreturn (function (env,ast,opts){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new_env);\n});\n});\ncljs.analyzer.ast_children = (function cljs$analyzer$ast_children(ast){\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (c){\nvar g = cljs.core.get.cljs$core$IFn$_invoke$arity$2(ast,c);\nif(cljs.core.vector_QMARK_(g)){\nreturn g;\n} else {\nif(cljs.core.truth_(g)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [g], null);\n} else {\nreturn null;\n}\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"children\",\"children\",-940561982).cljs$core$IFn$_invoke$arity$1(ast)], 0));\n});\ncljs.analyzer.constant_value_QMARK_ = (function cljs$analyzer$constant_value_QMARK_(p__29102){\nvar map__29103 = p__29102;\nvar map__29103__$1 = (((((!((map__29103 == null))))?(((((map__29103.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29103.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29103):map__29103);\nvar ast = map__29103__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29103__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar or__4185__auto__ = (function (){var fexpr__29106 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"const\",\"const\",1709929842),null,new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),null], null), null);\nreturn (fexpr__29106.cljs$core$IFn$_invoke$arity$1 ? fexpr__29106.cljs$core$IFn$_invoke$arity$1(op) : fexpr__29106.call(null,op));\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar and__4174__auto__ = (function (){var fexpr__29109 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),null,new cljs.core.Keyword(null,\"set\",\"set\",304602554),null,new cljs.core.Keyword(null,\"map\",\"map\",1371690461),null], null), null);\nreturn (fexpr__29109.cljs$core$IFn$_invoke$arity$1 ? fexpr__29109.cljs$core$IFn$_invoke$arity$1(op) : fexpr__29109.call(null,op));\n})();\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.every_QMARK_(cljs.analyzer.constant_value_QMARK_,cljs.analyzer.ast_children(ast));\n} else {\nreturn and__4174__auto__;\n}\n}\n});\ncljs.analyzer.const_expr__GT_constant_value = (function cljs$analyzer$const_expr__GT_constant_value(p__29110){\nvar map__29111 = p__29110;\nvar map__29111__$1 = (((((!((map__29111 == null))))?(((((map__29111.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29111.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29111):map__29111);\nvar e = map__29111__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29111__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__29113 = op;\nvar G__29113__$1 = (((G__29113 instanceof cljs.core.Keyword))?G__29113.fqn:null);\nswitch (G__29113__$1) {\ncase \"quote\":\nvar G__29114 = new cljs.core.Keyword(null,\"expr\",\"expr\",745722291).cljs$core$IFn$_invoke$arity$1(e);\nreturn (cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.const_expr__GT_constant_value.cljs$core$IFn$_invoke$arity$1(G__29114) : cljs.analyzer.const_expr__GT_constant_value.call(null,G__29114));\n\nbreak;\ncase \"const\":\nreturn new cljs.core.Keyword(null,\"val\",\"val\",128701612).cljs$core$IFn$_invoke$arity$1(e);\n\nbreak;\ncase \"map\":\nreturn cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698).cljs$core$IFn$_invoke$arity$1(e)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"set\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ncase \"vector\":\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.const_expr__GT_constant_value,new cljs.core.Keyword(null,\"items\",\"items\",1031954938).cljs$core$IFn$_invoke$arity$1(e)));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__29113__$1)].join('')));\n\n}\n});\ncljs.analyzer.earmuffed_QMARK_ = (function cljs$analyzer$earmuffed_QMARK_(sym){\nvar s = cljs.core.name(sym);\nreturn (((((s).length) > (2))) && (clojure.string.starts_with_QMARK_(s,\"*\")) && (clojure.string.ends_with_QMARK_(s,\"*\")));\n});\ncljs.analyzer.core_ns_QMARK_ = (function cljs$analyzer$core_ns_QMARK_(ns_sym){\nvar s = cljs.core.name(ns_sym);\nreturn ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null),ns_sym)) && (((clojure.string.starts_with_QMARK_(s,\"cljs.\")) || (clojure.string.starts_with_QMARK_(s,\"clojure.\")))));\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"def\",\"def\",597100991,null),(function (op,env,form,_,___$1){\nif((cljs.core.count(form) > (4))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n} else {\n}\n\nvar pfn = (function() {\nvar G__30238 = null;\nvar G__30238__2 = (function (___$2,sym){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null);\n});\nvar G__30238__3 = (function (___$2,sym,init){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nvar G__30238__4 = (function (___$2,sym,doc,init){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym,new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init], null);\n});\nG__30238 = function(___$2,sym,doc,init){\nswitch(arguments.length){\ncase 2:\nreturn G__30238__2.call(this,___$2,sym);\ncase 3:\nreturn G__30238__3.call(this,___$2,sym,doc);\ncase 4:\nreturn G__30238__4.call(this,___$2,sym,doc,init);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__30238.cljs$core$IFn$_invoke$arity$2 = G__30238__2;\nG__30238.cljs$core$IFn$_invoke$arity$3 = G__30238__3;\nG__30238.cljs$core$IFn$_invoke$arity$4 = G__30238__4;\nreturn G__30238;\n})()\n;\nvar args = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(pfn,form);\nvar sym = new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305).cljs$core$IFn$_invoke$arity$1(args);\nvar const_QMARK_ = new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar sym_meta = cljs.core.meta(sym);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar protocol = cljs.analyzer.valid_proto(new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym)));\nvar dynamic = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym));\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar clash_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)].join(''));\nvar sym_ns = cljs.core.namespace(sym);\nvar sym__$1 = (cljs.core.truth_((function (){var and__4174__auto__ = sym_ns;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn (!(cljs.core.symbol_identical_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(sym_ns),ns_name)));\n} else {\nreturn and__4174__auto__;\n}\n})())?(function(){throw cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't def ns-qualified name in namespace \",sym_ns].join(''))})():(((!((sym_ns == null))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)):sym\n));\nif((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns], null)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)].join('')),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1))], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't redefine a constant\");\n} else {\n}\n\nvar temp__5739__auto___30246 = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif((temp__5739__auto___30246 == null)){\n} else {\nvar doc_30248 = temp__5739__auto___30246;\nif(typeof doc_30248 === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Too many arguments to def\");\n}\n}\n\nif(((cljs.core.not(dynamic)) && (cljs.analyzer.earmuffed_QMARK_(sym__$1)) && ((!(cljs.analyzer.core_ns_QMARK_(ns_name)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"non-dynamic-earmuffed-var\",\"non-dynamic-earmuffed-var\",-202005643),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1)], null));\n} else {\n}\n\nvar temp__5739__auto___30249 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5739__auto___30249 == null)){\n} else {\nvar v_30251 = temp__5739__auto___30249;\nif(cljs.core.truth_(((cljs.core.not(cljs.analyzer._STAR_allow_redef_STAR_))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_30251)))?((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta)))?(function (){var and__4174__auto__ = cljs.analyzer._STAR_file_defs_STAR_;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.analyzer._STAR_file_defs_STAR_),sym__$1);\n} else {\nreturn and__4174__auto__;\n}\n})():false):false):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef-in-file\",\"redef-in-file\",-476530788),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(v_30251)], null));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(v_30251);\nif(cljs.core.truth_(and__4174__auto__)){\nvar and__4174__auto____$1 = new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_30251);\nif(cljs.core.truth_(and__4174__auto____$1)){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_30251),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta));\n} else {\nreturn and__4174__auto____$1;\n}\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"declared-arglists-mismatch\",\"declared-arglists-mismatch\",-496878383),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(v_30251)),new cljs.core.Keyword(null,\"defined\",\"defined\",-1805032318),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null));\n} else {\n}\n}\n\nvar env__$1 = ((((((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(ns_name,new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))) && (cljs.analyzer.core_name_QMARK_(env,sym__$1)))) || ((!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),sym__$1], null)) == null))))))?(function (){var ev = cljs.analyzer.resolve_existing_var(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),cljs.core.with_meta(sym__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.analyzer\",\"no-resolve\",\"cljs.analyzer/no-resolve\",-1872351017),true], null)));\nvar conj_to_set = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentHashSet.EMPTY);\nif(cljs.analyzer.public_name_QMARK_(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),sym__$1)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"redef\",\"redef\",1032704258),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(ev),new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name], null));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([sym__$1], 0));\n\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),conj_to_set,sym__$1);\n})():env);\nvar var_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),sym__$1));\nvar init_expr = ((cljs.core.contains_QMARK_(args,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)))?(function (){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),sym_meta,((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1)], 0)));\n\nvar _STAR_recur_frames_STAR__orig_val__29116 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29117 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29117);\n\ntry{var _STAR_allow_ns_STAR__orig_val__29118 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__29119 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__29119);\n\ntry{var G__29120 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29121 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nvar G__29122 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(G__29120,G__29121,G__29122) : cljs.analyzer.analyze.call(null,G__29120,G__29121,G__29122));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__29118);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29116);\n}})()\n:null);\nvar fn_var_QMARK_ = (((!((init_expr == null)))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204))));\nvar tag__$1 = ((fn_var_QMARK_)?(function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990).cljs$core$IFn$_invoke$arity$1(init_expr);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = tag;\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347).cljs$core$IFn$_invoke$arity$1(init_expr);\n}\n}\n})():(cljs.core.truth_(tag)?tag:(cljs.core.truth_(dynamic)?cljs.analyzer.ANY_SYM:new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr)\n)));\nvar export_as = (function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"export\",\"export\",214356590).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar export_val = temp__5735__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(true,export_val)){\nreturn var_name;\n} else {\nreturn export_val;\n}\n} else {\nreturn null;\n}\n})();\nvar doc = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(args);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\n}\n})();\nvar temp__5739__auto___30261 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null));\nif((temp__5739__auto___30261 == null)){\n} else {\nvar v_30262 = temp__5739__auto___30261;\nif(((cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1)))) && (((new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(v_30262) === true) && ((!(fn_var_QMARK_))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),env__$1,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-name\",\"ns-name\",-2077346323),ns_name,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym__$1], null));\n} else {\n}\n}\n\nif((((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null)) == null)) || (cljs.core.not(new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta))))){\nif(cljs.core.truth_(cljs.analyzer._STAR_file_defs_STAR_)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_file_defs_STAR_,cljs.core.conj,sym__$1);\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns_name,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym__$1], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name], null),(function (){var G__29123 = sym_meta;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__29123,new cljs.core.Keyword(null,\"test\",\"test\",577538877),true);\n} else {\nreturn G__29123;\n}\n})(),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(sym_meta,new cljs.core.Keyword(null,\"test\",\"test\",577538877)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"file\",\"file\",-1269645878)], null),(function (f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$1)),new cljs.core.Symbol(null,\"cljs.core\",\"cljs.core\",770546058,null))){\nreturn \"cljs/core.cljs\";\n} else {\nreturn f;\n}\n}))], null),(cljs.core.truth_(doc)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc], null):null),(cljs.core.truth_(const_QMARK_)?(function (){var const_expr = (function (){var _STAR_passes_STAR__orig_val__29124 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__29125 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__29125);\n\ntry{var G__29126 = env__$1;\nvar G__29127 = new cljs.core.Keyword(null,\"init\",\"init\",-1875481434).cljs$core$IFn$_invoke$arity$1(args);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29126,G__29127) : cljs.analyzer.analyze.call(null,G__29126,G__29127));\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__29124);\n}})();\nif(cljs.core.truth_(cljs.analyzer.constant_value_QMARK_(const_expr))){\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})():null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(var_name,env__$1),(cljs.core.truth_(protocol)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocol\",\"protocol\",652470118),protocol], null):null),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(sym__$1));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar protocol_symbol = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"protocol-symbol\",\"protocol-symbol\",1279552198),protocol_symbol,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"protocol-info\",\"protocol-info\",1471745843).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(protocol_symbol)),new cljs.core.Keyword(null,\"impls\",\"impls\",-1314014853),cljs.core.PersistentHashSet.EMPTY], null);\n} else {\nreturn null;\n}\n})(),((fn_var_QMARK_)?(function (){var params = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29115_SHARP_){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(p1__29115_SHARP_)));\n}),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),cljs.core.not(new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404).cljs$core$IFn$_invoke$arity$1(sym_meta)),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556).cljs$core$IFn$_invoke$arity$1(init_expr)], null),(function (){var temp__5737__auto__ = new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),params,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754),new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta),new cljs.core.Keyword(null,\"arglists-meta\",\"arglists-meta\",1944829838),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.meta,new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta)))], null);\n} else {\nvar top_fn_meta = temp__5737__auto__;\nreturn top_fn_meta;\n}\n})()], 0));\n})():null),(cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"declared\",\"declared\",92336021).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta);\n} else {\nreturn and__4174__auto__;\n}\n})())?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"declared\",\"declared\",92336021),true,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.second(new cljs.core.Keyword(null,\"arglists\",\"arglists\",1661989754).cljs$core$IFn$_invoke$arity$1(sym_meta))], null):null),((((fn_var_QMARK_) && ((!((tag__$1 == null))))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):(cljs.core.truth_(tag__$1)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null):null))], 0)));\n} else {\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"def\",\"def\",-1043430536),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns_name,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),var_name,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__29128 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)),new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377),true);\nvar G__29129 = sym__$1;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29128,G__29129) : cljs.analyzer.analyze.call(null,G__29128,G__29129));\n})(),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797)),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891),doc,new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516).cljs$core$IFn$_invoke$arity$1(sym_meta)], null),((new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env__$1) === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"var-ast\",\"var-ast\",1200379319),cljs.analyzer.var_ast(env__$1,sym__$1)], null):null),(function (){var temp__5739__auto__ = new cljs.core.Keyword(null,\"test\",\"test\",577538877).cljs$core$IFn$_invoke$arity$1(sym_meta);\nif((temp__5739__auto__ == null)){\nreturn null;\n} else {\nvar test = temp__5739__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"test\",\"test\",577538877),(function (){var G__29130 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29131 = test;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29130,G__29131) : cljs.analyzer.analyze.call(null,G__29130,G__29131));\n})()], null);\n}\n})(),(((!((tag__$1 == null))))?((fn_var_QMARK_)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag__$1], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1], null)):null),((dynamic === true)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),true], null):null),(((!((export_as == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"export\",\"export\",214356590),export_as], null):null),(((!((init_expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),init_expr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797)], null)], null))], 0));\n}));\ncljs.analyzer.analyze_fn_method_param = (function cljs$analyzer$analyze_fn_method_param(env){\nreturn (function (p__29132,p__29133){\nvar vec__29134 = p__29132;\nvar locals = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29134,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29134,(1),null);\nvar vec__29137 = p__29133;\nvar arg_id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29137,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29137,(1),null);\nif(cljs.core.truth_(cljs.core.namespace(name))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Can't use qualified name as parameter: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar line = cljs.analyzer.get_line(name,env);\nvar column = cljs.analyzer.get_col(name,env);\nvar nmeta = cljs.core.meta(name);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(nmeta);\nvar shadow__$1 = (((!((locals == null))))?cljs.analyzer.handle_symbol_local(name,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(name) : locals.call(null,name))):null);\nvar env__$1 = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column], null)], 0));\nvar param = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),env__$1,column,line,arg_id,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),tag,shadow__$1,new cljs.core.Keyword(null,\"arg\",\"arg\",-1747261837)]);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name,param),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(params,param)], null);\n});\n});\ncljs.analyzer.analyze_fn_method_body = (function cljs$analyzer$analyze_fn_method_body(env,form,recur_frames){\nvar _STAR_recur_frames_STAR__orig_val__29140 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29141 = recur_frames;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29141);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze.call(null,env,form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29140);\n}});\ncljs.analyzer.analyze_fn_method = (function cljs$analyzer$analyze_fn_method(env,locals,form,type,analyze_body_QMARK_){\nvar param_names = cljs.core.first(form);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar param_names__$1 = cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"&\",\"&\",-2144855648,null),\"null\"], null), null),param_names));\nvar body = cljs.core.next(form);\nvar step = cljs.analyzer.analyze_fn_method_param(env);\nvar step_init = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [locals,cljs.core.PersistentVector.EMPTY], null);\nvar vec__29142 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,step_init,cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(cljs.core.vector,param_names__$1));\nvar locals__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29142,(0),null);\nvar params = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29142,(1),null);\nvar params_SINGLEQUOTE_ = ((variadic === true)?cljs.core.butlast(params):params);\nvar fixed_arity = cljs.core.count(params_SINGLEQUOTE_);\nvar recur_frame = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(env),new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY)], null);\nvar recur_frames = cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_);\nvar body_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals__$1], 0));\nvar body_form = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),body)));\nvar expr = (cljs.core.truth_(analyze_body_QMARK_)?cljs.analyzer.analyze_fn_method_body(body_env,body_form,recur_frames):null);\nvar recurs = cljs.core.deref(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(recur_frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"fn-method\",\"fn-method\",236100839),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),variadic,new cljs.core.Keyword(null,\"params\",\"params\",710516235),params,new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),fixed_arity,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),type,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"recurs\",\"recurs\",-1959309309),recurs], null),(((!((expr == null))))?new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null):new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"params\",\"params\",710516235)], null)], null))], 0));\n});\ncljs.analyzer.fn_name_var = (function cljs$analyzer$fn_name_var(env,locals,name){\nif((!((name == null)))){\nvar ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get.cljs$core$IFn$_invoke$arity$2(locals,name));\nvar shadow__$2 = (((shadow__$1 == null))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-globals\",\"js-globals\",1670394727),name], null)):null);\nvar fn_scope = new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"fn-self-name\",\"fn-self-name\",1461143531),true,new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859),fn_scope,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$2], null)], null);\nvar tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nvar ret_tag = (((!((tag == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),tag], null):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([name_var,ret_tag], 0));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_fn_methods_pass2_STAR_ = (function cljs$analyzer$analyze_fn_methods_pass2_STAR_(menv,locals,type,meths){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29145_SHARP_){\nreturn cljs.analyzer.analyze_fn_method(menv,locals,p1__29145_SHARP_,type,true);\n}),meths);\n});\ncljs.analyzer.analyze_fn_methods_pass2 = (function cljs$analyzer$analyze_fn_methods_pass2(menv,locals,type,meths){\nreturn cljs.analyzer.analyze_fn_methods_pass2_STAR_(menv,locals,type,meths);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"fn*\",\"fn*\",-752876845,null),(function (op,env,p__29147,name,_){\nvar vec__29148 = p__29147;\nvar seq__29149 = cljs.core.seq(vec__29148);\nvar first__29150 = cljs.core.first(seq__29149);\nvar seq__29149__$1 = cljs.core.next(seq__29149);\nvar ___$1 = first__29150;\nvar args = seq__29149__$1;\nvar form = vec__29148;\nvar named_fn_QMARK_ = (cljs.core.first(args) instanceof cljs.core.Symbol);\nvar vec__29151 = ((named_fn_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(args),cljs.core.next(args)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,cljs.core.seq(args)], null));\nvar name__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29151,(0),null);\nvar meths = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29151,(1),null);\nvar meths__$1 = ((cljs.core.vector_QMARK_(cljs.core.first(meths)))?(new cljs.core.List(null,meths,null,(1),null)):meths);\nvar locals = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nvar name_var = cljs.analyzer.fn_name_var(env,locals,name__$1);\nvar env__$1 = (((!((name__$1 == null))))?cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn-scope\",\"fn-scope\",-865664859)], null),cljs.core.conj,name_var):env);\nvar locals__$1 = (((((!((locals == null)))) && (named_fn_QMARK_)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(locals,name__$1,name_var):locals);\nvar form_meta = cljs.core.meta(form);\nvar type = new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_impl = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar proto_inline = new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar menv = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((function (){var G__29154 = env__$1;\nif((cljs.core.count(meths__$1) > (1))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__29154,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\n} else {\nreturn G__29154;\n}\n})(),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246)),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),proto_impl,new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),proto_inline], null)], 0));\nvar methods$ = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29146_SHARP_){\nvar _STAR_allow_ns_STAR__orig_val__29155 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__29156 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__29156);\n\ntry{return cljs.analyzer.analyze_fn_method(menv,locals__$1,p1__29146_SHARP_,type,(name__$1 == null));\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__29155);\n}}),meths__$1);\nvar mfa = cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.map.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869)),cljs.core.max,(0),methods$);\nvar variadic = cljs.core.boolean$(cljs.core.some(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),methods$));\nvar locals__$2 = ((named_fn_QMARK_)?cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(locals__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name__$1], null),cljs.core.assoc,new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([variadic,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),mfa,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),methods$)], 0)):locals__$1);\nvar methods$__$1 = (((!((name__$1 == null))))?(function (){var _STAR_allow_ns_STAR__orig_val__29157 = cljs.analyzer._STAR_allow_ns_STAR_;\nvar _STAR_allow_ns_STAR__temp_val__29158 = false;\n(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__temp_val__29158);\n\ntry{return cljs.analyzer.analyze_fn_methods_pass2(menv,locals__$2,type,meths__$1);\n}finally {(cljs.analyzer._STAR_allow_ns_STAR_ = _STAR_allow_ns_STAR__orig_val__29157);\n}})():cljs.core.vec(methods$));\nvar form__$1 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(form,cljs.core.dissoc,new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-impl\",\"cljs.analyzer/protocol-impl\",-1523935409),new cljs.core.Keyword(\"cljs.analyzer\",\"protocol-inline\",\"cljs.analyzer/protocol-inline\",-1611519026),new cljs.core.Keyword(\"cljs.analyzer\",\"type\",\"cljs.analyzer/type\",478749742));\nvar js_doc = ((variadic === true)?\"@param {...*} var_args\":null);\nvar children = (((!((name_var == null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null):new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null));\nvar inferred_ret_tag = (function (){var inferred_tags = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.infer_tag,env__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),methods$__$1));\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._EQ_,inferred_tags))){\nreturn cljs.core.first(inferred_tags);\n} else {\nreturn null;\n}\n})();\nvar ast = cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"protocol-inline\",\"protocol-inline\",1550487556),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"loop-lets\",\"loop-lets\",2036794185),new cljs.core.Keyword(null,\"inferred-ret-tag\",\"inferred-ret-tag\",798934347),new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),new cljs.core.Keyword(null,\"recur-frames\",\"recur-frames\",-307205196),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),new cljs.core.Keyword(null,\"jsdoc\",\"jsdoc\",1745183516)],[children,proto_inline,name_var,cljs.analyzer._STAR_loop_lets_STAR_,inferred_ret_tag,proto_impl,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),env__$1,variadic,methods$__$1,cljs.analyzer._STAR_recur_frames_STAR_,mfa,form__$1,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246).cljs$core$IFn$_invoke$arity$1(env__$1),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_doc], null)]),(((!((name_var == null))))?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),name_var], null):null)], 0));\nvar variadic_methods_30396 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)),cljs.core.take.cljs$core$IFn$_invoke$arity$1((1))),methods$__$1);\nvar variadic_params_30397 = (((cljs.core.count(variadic_methods_30396) > (0)))?cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(variadic_methods_30396,(0)))):(0));\nvar param_counts_30398 = cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.count,new cljs.core.Keyword(null,\"params\",\"params\",710516235))),methods$__$1);\nif(((1) < cljs.core.count(variadic_methods_30396))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"multiple-variadic-overloads\",\"multiple-variadic-overloads\",1110059837),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif((!((((variadic_params_30397 === (0))) || ((variadic_params_30397 === ((1) + mfa))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"variadic-max-arity\",\"variadic-max-arity\",-14288402),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(param_counts_30398),param_counts_30398)){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"overload-arity\",\"overload-arity\",823206044),env__$1,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_var], null));\n} else {\n}\n\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(ast) : cljs.analyzer.analyze_wrap_meta.call(null,ast));\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"letfn*\",\"letfn*\",-110097810,null),(function (op,env,p__29159,name,_){\nvar vec__29160 = p__29159;\nvar seq__29161 = cljs.core.seq(vec__29160);\nvar first__29162 = cljs.core.first(seq__29161);\nvar seq__29161__$1 = cljs.core.next(seq__29161);\nvar ___$1 = first__29162;\nvar first__29162__$1 = cljs.core.first(seq__29161__$1);\nvar seq__29161__$2 = cljs.core.next(seq__29161__$1);\nvar bindings = first__29162__$1;\nvar exprs = seq__29161__$2;\nvar form = vec__29160;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"bindings must be vector of even number of elements\");\n}\n\nvar n__GT_fexpr = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.second),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings)));\nvar names = cljs.core.keys(n__GT_fexpr);\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar vec__29163 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__29169,n){\nvar vec__29170 = p__29169;\nvar map__29173 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29170,(0),null);\nvar map__29173__$1 = (((((!((map__29173 == null))))?(((((map__29173.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29173.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29173):map__29173);\nvar env__$1 = map__29173__$1;\nvar locals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29173__$1,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783));\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29170,(1),null);\nvar ret_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(n));\nvar fexpr = (function (){var _STAR_cljs_warnings_STAR__orig_val__29175 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29176 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29176);\n\ntry{var G__29177 = env__$1;\nvar G__29178 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(n) : n__GT_fexpr.call(null,n));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29177,G__29178) : cljs.analyzer.analyze.call(null,G__29177,G__29178));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29175);\n}})();\nvar be = (function (){var G__29179 = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[n,cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr)),new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),cljs.analyzer.get_col(n,env__$1),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),cljs.analyzer.get_line(n,env__$1),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),true,cljs.analyzer.handle_symbol_local(n,(locals.cljs$core$IFn$_invoke$arity$1 ? locals.cljs$core$IFn$_invoke$arity$1(n) : locals.call(null,n))),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354)]);\nif(cljs.core.truth_(ret_tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__29179,new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990),ret_tag);\n} else {\nreturn G__29179;\n}\n})();\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),n], null),be),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [env,cljs.core.PersistentVector.EMPTY], null),names);\nvar meth_env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29163,(0),null);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29163,(1),null);\nvar meth_env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar vec__29166 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__29180,p__29181){\nvar vec__29182 = p__29180;\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29182,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29182,(1),null);\nvar map__29185 = p__29181;\nvar map__29185__$1 = (((((!((map__29185 == null))))?(((((map__29185.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29185.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29185):map__29185);\nvar be = map__29185__$1;\nvar name__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29185__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar shadow__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29185__$1,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803));\nvar env__$1 = cljs.core.assoc_in(meth_env__$2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),shadow__$1);\nvar fexpr = (function (){var G__29187 = env__$1;\nvar G__29188 = (n__GT_fexpr.cljs$core$IFn$_invoke$arity$1 ? n__GT_fexpr.cljs$core$IFn$_invoke$arity$1(name__$1) : n__GT_fexpr.call(null,name__$1));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29187,G__29188) : cljs.analyzer.analyze.call(null,G__29187,G__29188));\n})();\nvar be_SINGLEQUOTE_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(be,new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),fexpr,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(fexpr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(fexpr))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.assoc_in(env__$1,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name__$1], null),be_SINGLEQUOTE_),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes__$1,be_SINGLEQUOTE_)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [meth_env__$1,cljs.core.PersistentVector.EMPTY], null),bes);\nvar meth_env__$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29166,(0),null);\nvar bes__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29166,(1),null);\nvar expr = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((function (){var G__29189 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(meth_env__$2,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__29190 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29189,G__29190) : cljs.analyzer.analyze.call(null,G__29189,G__29190));\n})(),new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"letfn\",\"letfn\",-2121022354),new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes__$1,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),expr,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null)], null);\n}));\ncljs.analyzer.analyze_do_statements_STAR_ = (function cljs$analyzer$analyze_do_statements_STAR_(env,exprs){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29191_SHARP_){\nvar G__29192 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863));\nvar G__29193 = p1__29191_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29192,G__29193) : cljs.analyzer.analyze.call(null,G__29192,G__29193));\n}),cljs.core.butlast(exprs));\n});\ncljs.analyzer.analyze_do_statements = (function cljs$analyzer$analyze_do_statements(env,exprs){\nvar _STAR_recur_frames_STAR__orig_val__29194 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29195 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29195);\n\ntry{return cljs.analyzer.analyze_do_statements_STAR_(env,exprs);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29194);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),(function (op,env,p__29196,_,___$1){\nvar vec__29197 = p__29196;\nvar seq__29198 = cljs.core.seq(vec__29197);\nvar first__29199 = cljs.core.first(seq__29198);\nvar seq__29198__$1 = cljs.core.next(seq__29198);\nvar ___$2 = first__29199;\nvar exprs = seq__29198__$1;\nvar form = vec__29197;\nvar statements = cljs.analyzer.analyze_do_statements(env,exprs);\nif((cljs.core.count(exprs) <= (1))){\nvar ret = (function (){var G__29200 = env;\nvar G__29201 = cljs.core.first(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29200,G__29201) : cljs.analyzer.analyze.call(null,G__29200,G__29201));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n} else {\nvar ret_env = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863),new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"statement\",\"statement\",-32780863)):cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"return\",\"return\",-1891502105)));\nvar ret = (function (){var G__29202 = ret_env;\nvar G__29203 = cljs.core.last(exprs);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29202,G__29203) : cljs.analyzer.analyze.call(null,G__29202,G__29203));\n})();\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814)], null);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"statements\",\"statements\",600349855),statements,new cljs.core.Keyword(null,\"ret\",\"ret\",-468222814),ret,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\n}));\ncljs.analyzer.analyze_let_binding_init = (function cljs$analyzer$analyze_let_binding_init(env,init,loop_lets){\nvar _STAR_loop_lets_STAR__orig_val__29204 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_loop_lets_STAR__temp_val__29205 = loop_lets;\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__29205);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,init) : cljs.analyzer.analyze.call(null,env,init));\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__29204);\n}});\ncljs.analyzer.get_let_tag = (function cljs$analyzer$get_let_tag(name,init_expr){\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name));\nif((temp__5737__auto__ == null)){\nvar temp__5737__auto____$1 = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(init_expr);\nif((temp__5737__auto____$1 == null)){\nreturn new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(init_expr));\n} else {\nvar tag = temp__5737__auto____$1;\nreturn tag;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.analyze_let_bindings_STAR_ = (function cljs$analyzer$analyze_let_bindings_STAR_(encl_env,bindings,op){\nvar bes = cljs.core.PersistentVector.EMPTY;\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(encl_env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar bindings__$1 = cljs.core.seq(cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings));\nwhile(true){\nvar temp__5737__auto__ = cljs.core.first(bindings__$1);\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [bes,env], null);\n} else {\nvar vec__29210 = temp__5737__auto__;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29210,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29210,(1),null);\nif((((!((cljs.core.namespace(name) == null)))) || (goog.string.contains(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\".\")))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,[\"Invalid local name: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(''));\n} else {\n}\n\nvar init_expr = cljs.analyzer.analyze_let_binding_init(env,init,cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_));\nvar line = cljs.analyzer.get_line(name,env);\nvar col = cljs.analyzer.get_col(name,env);\nvar shadow__$1 = cljs.analyzer.handle_symbol_local(name,cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null)));\nvar be = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"init\",\"init\",-1875481434),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"binding-form?\",\"binding-form?\",1728940169),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[init_expr,name,true,new cljs.core.Keyword(null,\"binding\",\"binding\",539932593),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"line\",\"line\",212345235),line,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col], null),col,line,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name,new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),shadow__$1], null),cljs.analyzer.get_let_tag(name,init_expr),shadow__$1,op]);\nvar be__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(init_expr)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([be,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730),true,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__29210,name,init,temp__5737__auto__){\nreturn (function (p1__29206_SHARP_){\nreturn cljs.core.select_keys(p1__29206_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null));\n});})(bes,env,bindings__$1,init_expr,line,col,shadow__$1,be,vec__29210,name,init,temp__5737__auto__))\n,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543),new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543).cljs$core$IFn$_invoke$arity$1(init_expr),new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179),cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"params\",\"params\",710516235),new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(init_expr))], null)], 0)):be);\nvar G__30480 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(bes,be__$1);\nvar G__30481 = cljs.core.assoc_in(env,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),name], null),be__$1);\nvar G__30482 = cljs.core.next(bindings__$1);\nbes = G__30480;\nenv = G__30481;\nbindings__$1 = G__30482;\ncontinue;\n}\nbreak;\n}\n});\ncljs.analyzer.analyze_let_bindings = (function cljs$analyzer$analyze_let_bindings(encl_env,bindings,op){\nvar _STAR_recur_frames_STAR__orig_val__29213 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29214 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29214);\n\ntry{return cljs.analyzer.analyze_let_bindings_STAR_(encl_env,bindings,op);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29213);\n}});\ncljs.analyzer.analyze_let_body_STAR_ = (function cljs$analyzer$analyze_let_body_STAR_(env,context,exprs){\nvar G__29215 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),context))?new cljs.core.Keyword(null,\"return\",\"return\",-1891502105):context));\nvar G__29216 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),exprs)));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29215,G__29216) : cljs.analyzer.analyze.call(null,G__29215,G__29216));\n});\ncljs.analyzer.analyze_let_body = (function cljs$analyzer$analyze_let_body(env,context,exprs,recur_frames,loop_lets){\nvar _STAR_recur_frames_STAR__orig_val__29217 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_loop_lets_STAR__orig_val__29218 = cljs.analyzer._STAR_loop_lets_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29219 = recur_frames;\nvar _STAR_loop_lets_STAR__temp_val__29220 = loop_lets;\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29219);\n\n(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__temp_val__29220);\n\ntry{return cljs.analyzer.analyze_let_body_STAR_(env,context,exprs);\n}finally {(cljs.analyzer._STAR_loop_lets_STAR_ = _STAR_loop_lets_STAR__orig_val__29218);\n\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29217);\n}});\ncljs.analyzer.analyze_let = (function cljs$analyzer$analyze_let(encl_env,p__29221,is_loop,widened_tags){\nwhile(true){\nvar vec__29222 = p__29221;\nvar seq__29223 = cljs.core.seq(vec__29222);\nvar first__29224 = cljs.core.first(seq__29223);\nvar seq__29223__$1 = cljs.core.next(seq__29223);\nvar _ = first__29224;\nvar first__29224__$1 = cljs.core.first(seq__29223__$1);\nvar seq__29223__$2 = cljs.core.next(seq__29223__$1);\nvar bindings = first__29224__$1;\nvar exprs = seq__29223__$2;\nvar form = vec__29222;\nif(((cljs.core.vector_QMARK_(bindings)) && (cljs.core.even_QMARK_(cljs.core.count(bindings))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(encl_env,\"bindings must be vector of even number of elements\");\n}\n\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(encl_env);\nvar op = ((is_loop === true)?new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849):new cljs.core.Keyword(null,\"let\",\"let\",-1282412701));\nvar bindings__$1 = (cljs.core.truth_(widened_tags)?cljs.core.vec(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(((function (encl_env,p__29221,is_loop,widened_tags,context,op,vec__29222,seq__29223,first__29224,seq__29223__$1,_,first__29224__$1,seq__29223__$2,bindings,exprs,form){\nreturn (function (p__29228,widened_tag){\nvar vec__29229 = p__29228;\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29229,(0),null);\nvar init = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29229,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(name,cljs.core.assoc,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),widened_tag),init], null);\n});})(encl_env,p__29221,is_loop,widened_tags,context,op,vec__29222,seq__29223,first__29224,seq__29223__$1,_,first__29224__$1,seq__29223__$2,bindings,exprs,form))\n,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),bindings),widened_tags], 0))):bindings);\nvar vec__29225 = cljs.analyzer.analyze_let_bindings((function (){var G__29232 = encl_env;\nif(is_loop === true){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__29232,new cljs.core.Keyword(null,\"in-loop\",\"in-loop\",-187298246),true);\n} else {\nreturn G__29232;\n}\n})(),bindings__$1,op);\nvar bes = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29225,(0),null);\nvar env = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29225,(1),null);\nvar recur_frame = ((is_loop === true)?new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes,new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null),new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),bes))], null):null);\nvar recur_frames = (cljs.core.truth_(recur_frame)?cljs.core.cons(recur_frame,cljs.analyzer._STAR_recur_frames_STAR_):cljs.analyzer._STAR_recur_frames_STAR_);\nvar loop_lets = ((is_loop === true)?cljs.analyzer._STAR_loop_lets_STAR_:(((!((cljs.analyzer._STAR_loop_lets_STAR_ == null))))?cljs.core.cons(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"params\",\"params\",710516235),bes], null),cljs.analyzer._STAR_loop_lets_STAR_):null));\nvar warn_acc = (cljs.core.truth_((function (){var and__4174__auto__ = is_loop;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(widened_tags);\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY):null);\nvar expr = (cljs.core.truth_(warn_acc)?(function (){var _STAR_cljs_warning_handlers_STAR__orig_val__29233 = cljs.analyzer._STAR_cljs_warning_handlers_STAR_;\nvar _STAR_cljs_warning_handlers_STAR__temp_val__29234 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.accumulating_warning_handler(warn_acc)], null);\n(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__temp_val__29234);\n\ntry{return cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets);\n}finally {(cljs.analyzer._STAR_cljs_warning_handlers_STAR_ = _STAR_cljs_warning_handlers_STAR__orig_val__29233);\n}})():cljs.analyzer.analyze_let_body(env,context,exprs,recur_frames,loop_lets));\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null);\nvar nil__GT_any = cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.identity,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(cljs.core.truth_((function (){var and__4174__auto__ = is_loop;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn ((cljs.core.not(widened_tags)) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(nil__GT_any,cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame))),cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(nil__GT_any,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),bes))));\n} else {\nreturn and__4174__auto__;\n}\n})())){\nvar G__30512 = encl_env;\nvar G__30513 = form;\nvar G__30514 = is_loop;\nvar G__30515 = cljs.core.deref(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(recur_frame));\nencl_env = G__30512;\np__29221 = G__30513;\nis_loop = G__30514;\nwidened_tags = G__30515;\ncontinue;\n} else {\nif(cljs.core.truth_(warn_acc)){\ncljs.analyzer.replay_accumulated_warnings(warn_acc);\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),op,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),encl_env,new cljs.core.Keyword(null,\"bindings\",\"bindings\",1271397192),bes,new cljs.core.Keyword(null,\"body\",\"body\",-2049205669),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(expr,new cljs.core.Keyword(null,\"body?\",\"body?\",-1333761917),true),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children], null);\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"let*\",\"let*\",1920721458,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,false,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"loop*\",\"loop*\",615029416,null),(function (op,encl_env,form,_,___$1){\nreturn cljs.analyzer.analyze_let(encl_env,form,true,null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"recur\",\"recur\",1202958259,null),(function (op,env,p__29236,_,___$1){\nvar vec__29237 = p__29236;\nvar seq__29238 = cljs.core.seq(vec__29237);\nvar first__29239 = cljs.core.first(seq__29238);\nvar seq__29238__$1 = cljs.core.next(seq__29238);\nvar ___$2 = first__29239;\nvar exprs = seq__29238__$1;\nvar form = vec__29237;\nvar context = new cljs.core.Keyword(null,\"context\",\"context\",-830191113).cljs$core$IFn$_invoke$arity$1(env);\nvar frame = cljs.core.first(cljs.analyzer._STAR_recur_frames_STAR_);\nvar add_implicit_target_object_QMARK_ = (function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs),(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)) - (1)));\n} else {\nreturn and__4174__auto__;\n}\n})();\nvar exprs__$1 = (function (){var G__29240 = exprs;\nif(cljs.core.truth_(add_implicit_target_object_QMARK_)){\nreturn cljs.core.cons(null,G__29240);\n} else {\nreturn G__29240;\n}\n})();\nvar exprs__$2 = (function (){var _STAR_recur_frames_STAR__orig_val__29241 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29242 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29242);\n\ntry{return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29235_SHARP_){\nvar G__29243 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29244 = p1__29235_SHARP_;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29243,G__29244) : cljs.analyzer.analyze.call(null,G__29243,G__29244));\n}),exprs__$1));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29241);\n}})();\nif(cljs.core.truth_(frame)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't recur here\");\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(exprs__$2),cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"recur argument count mismatch, expected: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(new cljs.core.Keyword(null,\"params\",\"params\",710516235).cljs$core$IFn$_invoke$arity$1(frame))),\" args, got: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.count(exprs__$2))].join(''));\n}\n\nif(cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"protocol-impl\",\"protocol-impl\",2101328365).cljs$core$IFn$_invoke$arity$1(frame);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(add_implicit_target_object_QMARK_);\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"protocol-impl-recur-with-target\",\"protocol-impl-recur-with-target\",-1648321574),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(cljs.core.first(exprs__$2))], null));\n} else {\n}\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\"flag\",\"flag\",1088647881).cljs$core$IFn$_invoke$arity$1(frame),true);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tags\",\"tags\",1771418977).cljs$core$IFn$_invoke$arity$1(frame),(function (tags){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((function (tag,expr){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"loop\",\"loop\",-395552849),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724).cljs$core$IFn$_invoke$arity$1(expr))){\nreturn new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null);\n} else {\nreturn cljs.analyzer.add_types.cljs$core$IFn$_invoke$arity$2(tag,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr));\n}\n}),tags,exprs__$2);\n}));\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"recur\",\"recur\",-437573268),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),frame,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094),exprs__$2,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"exprs\",\"exprs\",1795829094)], null)], 0));\n}));\ncljs.analyzer.analyze_const = (function cljs$analyzer$analyze_const(env,form){\nvar map__29245 = (function (){var G__29246 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621),true);\nvar G__29247 = form;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29246,G__29247) : cljs.analyzer.analyze.call(null,G__29246,G__29247));\n})();\nvar map__29245__$1 = (((((!((map__29245 == null))))?(((((map__29245.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29245.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29245):map__29245);\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29245__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"literal?\",\"literal?\",352485871),true,new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),(function (_,env,p__29249,___$1,___$2){\nvar vec__29250 = p__29249;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29250,(0),null);\nvar x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29250,(1),null);\nvar form = vec__29250;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(form))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Wrong number of args to quote\");\n} else {\n}\n\nvar expr = cljs.analyzer.analyze_const(env,x);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"quote\",\"quote\",-262615245),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"new\",\"new\",-444906321,null),(function (_,env,p__29254,___$1,___$2){\nvar vec__29255 = p__29254;\nvar seq__29256 = cljs.core.seq(vec__29255);\nvar first__29257 = cljs.core.first(seq__29256);\nvar seq__29256__$1 = cljs.core.next(seq__29256);\nvar ___$3 = first__29257;\nvar first__29257__$1 = cljs.core.first(seq__29256__$1);\nvar seq__29256__$2 = cljs.core.next(seq__29256__$1);\nvar ctor = first__29257__$1;\nvar args = seq__29256__$2;\nvar form = vec__29255;\nvar _STAR_recur_frames_STAR__orig_val__29258 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29259 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29259);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ctorexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,ctor) : cljs.analyzer.analyze.call(null,enve,ctor));\nvar ctor_var = (cljs.core.truth_((function (){var G__29261 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ctorexpr);\nvar fexpr__29260 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"var\",\"var\",-769682797),null,new cljs.core.Keyword(null,\"js-var\",\"js-var\",-1177899142),null,new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),null], null), null);\nreturn (fexpr__29260.cljs$core$IFn$_invoke$arity$1 ? fexpr__29260.cljs$core$IFn$_invoke$arity$1(G__29261) : fexpr__29260.call(null,G__29261));\n})())?cljs.analyzer.resolve_existing_var(env,ctor):null);\nvar record_args = (cljs.core.truth_((function (){var and__4174__auto__ = new cljs.core.Keyword(null,\"record\",\"record\",-779106859).cljs$core$IFn$_invoke$arity$1(ctor_var);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)));\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((3),(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,null) : cljs.analyzer.analyze.call(null,enve,null))):null);\nvar argexprs = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29253_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__29253_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__29253_SHARP_));\n}),args)),record_args);\nvar known_num_fields = new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024).cljs$core$IFn$_invoke$arity$1(ctor_var);\nvar argc = cljs.core.count(args);\nif(((cljs.core.not(new cljs.core.Keyword(null,\"internal-ctor\",\"internal-ctor\",937392560).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(ctor)))) && ((!((known_num_fields == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(known_num_fields,argc)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"ctor\",\"ctor\",1750864802),ctor], null));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"new\",\"new\",-2085437848),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),ctorexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"class\",\"class\",-2030961996),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),(function (){var name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(ctorexpr));\nvar or__4185__auto__ = (function (){var fexpr__29263 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(\"js\",\"Object\",\"js/Object\",61215323,null),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null),new cljs.core.Symbol(\"js\",\"String\",\"js/String\",-2070054036,null),new cljs.core.Symbol(null,\"string\",\"string\",-349010059,null),new cljs.core.Symbol(\"js\",\"Array\",\"js/Array\",-423508366,null),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),new cljs.core.Symbol(\"js\",\"Number\",\"js/Number\",-508133572,null),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Symbol(\"js\",\"Function\",\"js/Function\",-749892063,null),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Symbol(\"js\",\"Boolean\",\"js/Boolean\",1661145260,null),new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null)], null);\nreturn (fexpr__29263.cljs$core$IFn$_invoke$arity$1 ? fexpr__29263.cljs$core$IFn$_invoke$arity$1(name) : fexpr__29263.call(null,name));\n})();\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn name;\n}\n})()], null);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29258);\n}}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"set!\",\"set!\",250714521,null),(function (_,env,p__29264,___$1,___$2){\nvar vec__29265 = p__29264;\nvar ___$3 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29265,(0),null);\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29265,(1),null);\nvar val = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29265,(2),null);\nvar alt = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29265,(3),null);\nvar form = vec__29265;\nvar vec__29268 = (cljs.core.truth_(alt)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),null,(1),null)),(new cljs.core.List(null,target,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,val,null,(1),null))], 0)))),alt], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,val], null));\nvar target__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29268,(0),null);\nvar val__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29268,(1),null);\nvar _STAR_recur_frames_STAR__orig_val__29271 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29272 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29272);\n\ntry{var _STAR_private_var_access_nowarn_STAR__orig_val__29273 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__29274 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__29274);\n\ntry{var enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar texpr = (((target__$1 instanceof cljs.core.Symbol))?(function (){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null))) && (((val__$1 === true) || (val__$1 === false))))){\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(target__$1,new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null))) && (((val__$1 === true) || (val__$1 === false))))){\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer._STAR_cljs_warnings_STAR_,new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),val__$1));\n} else {\n}\n}\n}\n\nif((!((new cljs.core.Keyword(null,\"const\",\"const\",1709929842).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),target__$1)) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! a constant\");\n} else {\n}\n\nvar local_30568 = cljs.analyzer.handle_symbol_local(target__$1,(function (){var G__29275 = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env);\nreturn (target__$1.cljs$core$IFn$_invoke$arity$1 ? target__$1.cljs$core$IFn$_invoke$arity$1(G__29275) : target__$1.call(null,G__29275));\n})());\nif(cljs.core.truth_((function (){var or__4185__auto__ = (local_30568 == null);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar and__4174__auto__ = new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(local_30568);\nif(cljs.core.truth_(and__4174__auto__)){\nvar or__4185__auto____$1 = new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(local_30568);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nvar or__4185__auto____$2 = new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(local_30568);\nif(cljs.core.truth_(or__4185__auto____$2)){\nreturn or__4185__auto____$2;\n} else {\nreturn new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(local_30568);\n}\n}\n} else {\nreturn and__4174__auto__;\n}\n}\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Can't set! local var or non-mutable field\");\n}\n\nreturn (cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_symbol.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze_symbol.call(null,enve,target__$1));\n})()\n:((cljs.core.seq_QMARK_(target__$1))?(function (){var texpr = (cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3(enve,target__$1,null) : cljs.analyzer.analyze_seq.call(null,enve,target__$1,null));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"field\",\"field\",-1302436500).cljs$core$IFn$_invoke$arity$1(texpr))){\nreturn texpr;\n} else {\nreturn null;\n}\n})():null)\n);\nvar vexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,val__$1) : cljs.analyzer.analyze.call(null,enve,val__$1));\nif(cljs.core.seq_QMARK_(target__$1)){\nvar sym_30571 = (function (){var G__29276 = target__$1;\nif((G__29276 == null)){\nreturn null;\n} else {\nreturn cljs.core.second(G__29276);\n}\n})();\nvar meta_30572 = cljs.core.meta(sym_30571);\nvar temp__5735__auto___30573 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(vexpr)))?new cljs.core.Keyword(null,\"top-fn\",\"top-fn\",-2056129173).cljs$core$IFn$_invoke$arity$1(meta_30572):false);\nif(cljs.core.truth_(temp__5735__auto___30573)){\nvar info_30574 = temp__5735__auto___30573;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym_30571,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,cljs.core.PersistentVector.EMPTY),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(info_30574,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fixed-arity\",\"fixed-arity\",1586445869),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762)], null)),cljs.core.select_keys(cljs.core.first(new cljs.core.Keyword(null,\"methods\",\"methods\",453930866).cljs$core$IFn$_invoke$arity$1(vexpr)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0))], 0));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(texpr)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"set! target must be a field or a symbol naming a var\");\n}\n\nif(((cljs.core.not(new cljs.core.Keyword(null,\"def-emits-var\",\"def-emits-var\",-1551927320).cljs$core$IFn$_invoke$arity$1(env))) && ((!(((function (){var fexpr__29278 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Symbol(null,\"*warn-on-infer*\",\"*warn-on-infer*\",1890277318,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-arrays*\",\"*unchecked-arrays*\",-381849911,null),\"null\",new cljs.core.Symbol(null,\"*unchecked-if*\",\"*unchecked-if*\",1542408350,null),\"null\"], null), null);\nreturn (fexpr__29278.cljs$core$IFn$_invoke$arity$1 ? fexpr__29278.cljs$core$IFn$_invoke$arity$1(target__$1) : fexpr__29278.call(null,target__$1));\n})() == null)))))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"no-op\",\"no-op\",-93046065)], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set!\",\"set!\",-1389817006),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),texpr,new cljs.core.Keyword(null,\"val\",\"val\",128701612),vexpr,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"val\",\"val\",128701612)], null)], null);\n\n}\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__29273);\n}}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29271);\n}}));\ncljs.analyzer.foreign_dep_QMARK_ = (function cljs$analyzer$foreign_dep_QMARK_(dep){\nvar js_index = new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_));\nvar temp__5737__auto__ = cljs.core.find(js_index,cljs.core.name(dep));\nif((temp__5737__auto__ == null)){\nreturn false;\n} else {\nvar vec__29279 = temp__5737__auto__;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29279,(0),null);\nvar map__29282 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29279,(1),null);\nvar map__29282__$1 = (((((!((map__29282 == null))))?(((((map__29282.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29282.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29282):map__29282);\nvar foreign = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29282__$1,new cljs.core.Keyword(null,\"foreign\",\"foreign\",990521149));\nreturn foreign;\n}\n});\n/**\n * Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n * and opts, compiler options - analyze all of the dependencies. Required to\n * correctly analyze usage of other namespaces.\n */\ncljs.analyzer.analyze_deps = (function cljs$analyzer$analyze_deps(var_args){\nvar G__29286 = arguments.length;\nswitch (G__29286) {\ncase 3:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$3 = (function (lib,deps,env){\nreturn cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4(lib,deps,env,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_deps.cljs$core$IFn$_invoke$arity$4 = (function (lib,deps,env,opts){\nvar compiler = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar _STAR_cljs_dep_set_STAR__orig_val__29287 = cljs.analyzer._STAR_cljs_dep_set_STAR_;\nvar _STAR_cljs_dep_set_STAR__temp_val__29288 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_cljs_dep_set_STAR_,lib),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558)], null),cljs.core.conj,lib);\n(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__temp_val__29288);\n\ntry{if(cljs.core.every_QMARK_((function (p1__29284_SHARP_){\nreturn (!(cljs.core.contains_QMARK_(cljs.analyzer._STAR_cljs_dep_set_STAR_,p1__29284_SHARP_)));\n}),deps)){\n} else {\nthrow (new Error([\"Assert failed: \",[\"Circular dependency detected, \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\" -> \",cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"dep-path\",\"dep-path\",723826558).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(cljs.analyzer._STAR_cljs_dep_set_STAR_)),cljs.core.some(cljs.analyzer._STAR_cljs_dep_set_STAR_,deps)))))].join(''),\"\\n\",\"(every? (fn* [p1__29284#] (not (contains? *cljs-dep-set* p1__29284#))) deps)\"].join('')));\n}\n\nvar seq__29289 = cljs.core.seq(deps);\nvar chunk__29290 = null;\nvar count__29291 = (0);\nvar i__29292 = (0);\nwhile(true){\nif((i__29292 < count__29291)){\nvar dep = chunk__29290.cljs$core$IIndexed$_nth$arity$2(null,i__29292);\nif(cljs.core.truth_((function (){var or__4185__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4185__auto____$1){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep))){\nvar dep_name_30578 = cljs.core.name(dep);\nif(clojure.string.starts_with_QMARK_(dep_name_30578,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null)));\n}\n}\n\n\nvar G__30580 = seq__29289;\nvar G__30581 = chunk__29290;\nvar G__30582 = count__29291;\nvar G__30583 = (i__29292 + (1));\nseq__29289 = G__30580;\nchunk__29290 = G__30581;\ncount__29291 = G__30582;\ni__29292 = G__30583;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__29289);\nif(temp__5735__auto__){\nvar seq__29289__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__29289__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__29289__$1);\nvar G__30585 = cljs.core.chunk_rest(seq__29289__$1);\nvar G__30586 = c__4609__auto__;\nvar G__30587 = cljs.core.count(c__4609__auto__);\nvar G__30588 = (0);\nseq__29289 = G__30585;\nchunk__29290 = G__30586;\ncount__29291 = G__30587;\ni__29292 = G__30588;\ncontinue;\n} else {\nvar dep = cljs.core.first(seq__29289__$1);\nif(cljs.core.truth_((function (){var or__4185__auto__ = (!((cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(compiler,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),dep,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null)) == null)));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.analyzer.node_module_dep_QMARK_(dep);\nif(or__4185__auto____$1){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.js_module_exists_QMARK_(cljs.core.name(dep));\n}\n}\n})())){\n} else {\nif(cljs.core.contains_QMARK_(new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131).cljs$core$IFn$_invoke$arity$1(compiler),cljs.core.name(dep))){\nvar dep_name_30591 = cljs.core.name(dep);\nif(clojure.string.starts_with_QMARK_(dep_name_30591,\"goog.\")){\n} else {\n}\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns\",\"undeclared-ns\",-1589012812),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns-sym\",\"ns-sym\",-1696101605),dep,new cljs.core.Keyword(null,\"js-provide\",\"js-provide\",1052912493),cljs.core.name(dep)], null)));\n}\n}\n\n\nvar G__30593 = cljs.core.next(seq__29289__$1);\nvar G__30594 = null;\nvar G__30595 = (0);\nvar G__30596 = (0);\nseq__29289 = G__30593;\nchunk__29290 = G__30594;\ncount__29291 = G__30595;\ni__29292 = G__30596;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {(cljs.analyzer._STAR_cljs_dep_set_STAR_ = _STAR_cljs_dep_set_STAR__orig_val__29287);\n}}));\n\n(cljs.analyzer.analyze_deps.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.missing_use_QMARK_ = (function cljs$analyzer$missing_use_QMARK_(lib,sym,cenv){\nvar js_lib = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cenv,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"js-dependency-index\",\"js-dependency-index\",-1887042131),cljs.core.name(lib)], null));\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(cenv,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),lib,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),sym], null),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150)),new cljs.core.Keyword(\"cljs.analyzer\",\"not-found\",\"cljs.analyzer/not-found\",427220150))) && ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"group\",\"group\",582596132)),new cljs.core.Keyword(null,\"goog\",\"goog\",-1711135452))))) && (cljs.core.not(cljs.core.get.cljs$core$IFn$_invoke$arity$2(js_lib,new cljs.core.Keyword(null,\"closure-lib\",\"closure-lib\",2105917916)))) && ((!(cljs.analyzer.node_module_dep_QMARK_(lib)))) && ((!(cljs.analyzer.dep_has_global_exports_QMARK_(lib)))));\n});\ncljs.analyzer.missing_rename_QMARK_ = (function cljs$analyzer$missing_rename_QMARK_(sym,cenv){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym__$1,cenv);\n});\ncljs.analyzer.missing_use_macro_QMARK_ = (function cljs$analyzer$missing_use_macro_QMARK_(lib,sym){\nif((lib instanceof cljs.core.Symbol)){\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym) == null)));\n} else {\nreturn null;\n}\n});\ncljs.analyzer.missing_rename_macro_QMARK_ = (function cljs$analyzer$missing_rename_macro_QMARK_(sym){\nvar lib = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym));\nvar the_ns = cljs.core.find_macros_ns(lib);\nreturn (((the_ns == null)) || ((the_ns.findInternedVar(sym__$1) == null)));\n});\ncljs.analyzer.missing_uses = (function cljs$analyzer$missing_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__29293){\nvar vec__29294 = p__29293;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29294,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29294,(1),null);\nreturn cljs.analyzer.missing_use_QMARK_(lib,sym,cenv);\n}),uses));\n});\ncljs.analyzer.missing_renames = (function cljs$analyzer$missing_renames(renames,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__29297){\nvar vec__29298 = p__29297;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29298,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29298,(1),null);\nreturn cljs.analyzer.missing_rename_QMARK_(qualified_sym,cenv);\n}),renames));\n});\ncljs.analyzer.missing_use_macros = (function cljs$analyzer$missing_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__29301){\nvar vec__29302 = p__29301;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29302,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29302,(1),null);\nreturn cljs.analyzer.missing_use_macro_QMARK_(lib,sym);\n}),use_macros));\n});\ncljs.analyzer.inferred_use_macros = (function cljs$analyzer$inferred_use_macros(use_macros,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__29305){\nvar vec__29306 = p__29305;\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29306,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29306,(1),null);\nreturn cljs.core.not(cljs.analyzer.missing_use_macro_QMARK_(lib,sym));\n}),use_macros));\n});\ncljs.analyzer.inferred_rename_macros = (function cljs$analyzer$inferred_rename_macros(rename_macros,env){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p__29309){\nvar vec__29310 = p__29309;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29310,(0),null);\nvar qualified_sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29310,(1),null);\nreturn (!(cljs.analyzer.missing_rename_macro_QMARK_(qualified_sym)));\n}),rename_macros));\n});\ncljs.analyzer.check_uses = (function cljs$analyzer$check_uses(uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__29313 = cljs.core.seq(uses);\nvar chunk__29314 = null;\nvar count__29315 = (0);\nvar i__29316 = (0);\nwhile(true){\nif((i__29316 < count__29315)){\nvar vec__29323 = chunk__29314.cljs$core$IIndexed$_nth$arity$2(null,i__29316);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29323,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29323,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__30625 = seq__29313;\nvar G__30626 = chunk__29314;\nvar G__30627 = count__29315;\nvar G__30628 = (i__29316 + (1));\nseq__29313 = G__30625;\nchunk__29314 = G__30626;\ncount__29315 = G__30627;\ni__29316 = G__30628;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__29313);\nif(temp__5735__auto__){\nvar seq__29313__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__29313__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__29313__$1);\nvar G__30629 = cljs.core.chunk_rest(seq__29313__$1);\nvar G__30630 = c__4609__auto__;\nvar G__30631 = cljs.core.count(c__4609__auto__);\nvar G__30632 = (0);\nseq__29313 = G__30629;\nchunk__29314 = G__30630;\ncount__29315 = G__30631;\ni__29316 = G__30632;\ncontinue;\n} else {\nvar vec__29326 = cljs.core.first(seq__29313__$1);\nvar sym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29326,(0),null);\nvar lib = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29326,(1),null);\nif(cljs.analyzer.missing_use_QMARK_(lib,sym,cenv)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"var\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym], null)));\n} else {\n}\n\n\nvar G__30640 = cljs.core.next(seq__29313__$1);\nvar G__30641 = null;\nvar G__30642 = (0);\nvar G__30643 = (0);\nseq__29313 = G__30640;\nchunk__29314 = G__30641;\ncount__29315 = G__30642;\ni__29316 = G__30643;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.check_use_macros = (function cljs$analyzer$check_use_macros(var_args){\nvar G__29330 = arguments.length;\nswitch (G__29330) {\ncase 2:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$2 = (function (use_macros,env){\nreturn cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,null,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3 = (function (use_macros,missing_uses,env){\nvar cenv = cljs.core.deref(cljs.env._STAR_compiler_STAR_);\nvar seq__29331_30655 = cljs.core.seq(use_macros);\nvar chunk__29332_30656 = null;\nvar count__29333_30657 = (0);\nvar i__29334_30658 = (0);\nwhile(true){\nif((i__29334_30658 < count__29333_30657)){\nvar vec__29341_30664 = chunk__29332_30656.cljs$core$IIndexed$_nth$arity$2(null,i__29334_30658);\nvar sym_30665 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29341_30664,(0),null);\nvar lib_30666 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29341_30664,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_30666,sym_30665))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_30666,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_30665], null)));\n} else {\n}\n\n\nvar G__30673 = seq__29331_30655;\nvar G__30674 = chunk__29332_30656;\nvar G__30675 = count__29333_30657;\nvar G__30676 = (i__29334_30658 + (1));\nseq__29331_30655 = G__30673;\nchunk__29332_30656 = G__30674;\ncount__29333_30657 = G__30675;\ni__29334_30658 = G__30676;\ncontinue;\n} else {\nvar temp__5735__auto___30677 = cljs.core.seq(seq__29331_30655);\nif(temp__5735__auto___30677){\nvar seq__29331_30678__$1 = temp__5735__auto___30677;\nif(cljs.core.chunked_seq_QMARK_(seq__29331_30678__$1)){\nvar c__4609__auto___30681 = cljs.core.chunk_first(seq__29331_30678__$1);\nvar G__30682 = cljs.core.chunk_rest(seq__29331_30678__$1);\nvar G__30683 = c__4609__auto___30681;\nvar G__30684 = cljs.core.count(c__4609__auto___30681);\nvar G__30685 = (0);\nseq__29331_30655 = G__30682;\nchunk__29332_30656 = G__30683;\ncount__29333_30657 = G__30684;\ni__29334_30658 = G__30685;\ncontinue;\n} else {\nvar vec__29344_30686 = cljs.core.first(seq__29331_30678__$1);\nvar sym_30687 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29344_30686,(0),null);\nvar lib_30688 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29344_30686,(1),null);\nif(cljs.core.truth_(cljs.analyzer.missing_use_macro_QMARK_(lib_30688,sym_30687))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"undeclared-ns-form\",\"undeclared-ns-form\",-248024137),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"type\",\"type\",1174270348),\"macro\",new cljs.core.Keyword(null,\"lib\",\"lib\",191808726),lib_30688,new cljs.core.Keyword(null,\"sym\",\"sym\",-1444860305),sym_30687], null)));\n} else {\n}\n\n\nvar G__30701 = cljs.core.next(seq__29331_30678__$1);\nvar G__30702 = null;\nvar G__30703 = (0);\nvar G__30704 = (0);\nseq__29331_30655 = G__30701;\nchunk__29332_30656 = G__30702;\ncount__29333_30657 = G__30703;\ni__29334_30658 = G__30704;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.analyzer.check_uses(cljs.analyzer.missing_use_macros(missing_uses,env),env);\n\nreturn cljs.analyzer.inferred_use_macros(missing_uses,env);\n}));\n\n(cljs.analyzer.check_use_macros.cljs$lang$maxFixedArity = 3);\n\ncljs.analyzer.check_use_macros_inferring_missing = (function cljs$analyzer$check_use_macros_inferring_missing(p__29350,env){\nvar map__29351 = p__29350;\nvar map__29351__$1 = (((((!((map__29351 == null))))?(((((map__29351.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29351.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29351):map__29351);\nvar ast = map__29351__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29351__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29351__$1,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29351__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar missing_uses = (cljs.core.truth_((function (){var and__4174__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.seq(uses);\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.analyzer.missing_uses(uses,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,uses,cljs.core.keys(missing_uses));\nvar remove_missing_uses = (function (p1__29347_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__29347_SHARP_,cljs.core.keys(missing_uses));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),(function (p1__29348_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__29348_SHARP_,cljs.analyzer.check_use_macros.cljs$core$IFn$_invoke$arity$3(use_macros,missing_uses,env)], 0)),cljs.analyzer.inferred_use_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__29349_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__29349_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393)], null),cljs.core.merge,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),remove_missing_uses);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.check_rename_macros_inferring_missing = (function cljs$analyzer$check_rename_macros_inferring_missing(p__29356,env){\nvar map__29357 = p__29356;\nvar map__29357__$1 = (((((!((map__29357 == null))))?(((((map__29357.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29357.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29357):map__29357);\nvar ast = map__29357__$1;\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29357__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29357__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar missing_renames = (cljs.core.truth_((function (){var and__4174__auto__ = cljs.analyzer._STAR_analyze_deps_STAR_;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.seq(renames);\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.analyzer.missing_renames(renames,env):null);\nvar maybe_macros = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,renames,cljs.core.keys(missing_renames));\nvar missing_rename_macros = cljs.analyzer.inferred_rename_macros(missing_renames,env);\nvar remove_missing_renames = (function (p1__29353_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,p1__29353_SHARP_,cljs.core.keys(missing_renames));\n});\nvar ast_SINGLEQUOTE_ = cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),(function (p1__29354_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__29354_SHARP_,missing_rename_macros], 0)),cljs.analyzer.inferred_rename_macros(maybe_macros,env)], 0));\n})),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.env._STAR_compiler_STAR_,(function (p1__29355_SHARP_){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(p1__29355_SHARP_,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null),cljs.core.merge,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512).cljs$core$IFn$_invoke$arity$1(ast_SINGLEQUOTE_)),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),remove_missing_renames);\n}));\n\nreturn ast_SINGLEQUOTE_;\n});\ncljs.analyzer.parse_ns_error_msg = (function cljs$analyzer$parse_ns_error_msg(spec,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\"; offending spec: \",cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([spec], 0))].join('');\n});\ncljs.analyzer.basic_validate_ns_spec = (function cljs$analyzer$basic_validate_ns_spec(env,macros_QMARK_,spec){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string') || (cljs.core.sequential_QMARK_(spec)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"));\n}\n\nif(cljs.core.sequential_QMARK_(spec)){\nif((((cljs.core.first(spec) instanceof cljs.core.Symbol)) || (typeof cljs.core.first(spec) === 'string'))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Library name must be specified as a symbol in :require / :require-macros\"));\n}\n\nif(cljs.core.odd_QMARK_(cljs.core.count(spec))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"));\n}\n\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"as\",\"as\",1148689641),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),cljs.core.next(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only :as, :refer and :rename options supported in :require / :require-macros\"));\n}\n\nif((function (){var fs = cljs.core.frequencies(cljs.core.next(spec));\nreturn ((((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0)) : fs.call(null,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),(0))) <= (1))) && (((fs.cljs$core$IFn$_invoke$arity$2 ? fs.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0)) : fs.call(null,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),(0))) <= (1))));\n})()){\nreturn null;\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :as and :refer options may only be specified once in :require / :require-macros\"));\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.parse_ns_excludes = (function cljs$analyzer$parse_ns_excludes(env,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,p__29360){\nvar vec__29361 = p__29360;\nvar seq__29362 = cljs.core.seq(vec__29361);\nvar first__29363 = cljs.core.first(seq__29362);\nvar seq__29362__$1 = cljs.core.next(seq__29362);\nvar k = first__29363;\nvar filters = seq__29362__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440))){\nif(cljs.core.seq(new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945).cljs$core$IFn$_invoke$arity$1(s))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only one :refer-clojure form is allowed per namespace definition\");\n} else {\n}\n\nvar valid_kws = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334),null,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null);\nvar xs = (function (){var fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null);\nvar err = (!(cljs.core.even_QMARK_(cljs.core.count(filters))));\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\");\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nif(cljs.core.truth_((valid_kws.cljs$core$IFn$_invoke$arity$1 ? valid_kws.cljs$core$IFn$_invoke$arity$1(kw) : valid_kws.call(null,kw)))){\nvar refs = cljs.core.second(fs);\nif((!(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,valid_kws,vec__29361,seq__29362,first__29363,seq__29362__$1,k,filters){\nreturn (function (p1__29359_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__29359_SHARP_);\n});})(fs,ret,err,refs,kw,valid_kws,vec__29361,seq__29362,first__29363,seq__29362__$1,k,filters))\n,refs)))))))){\nvar G__30781 = fs;\nvar G__30782 = ret;\nvar G__30783 = true;\nfs = G__30781;\nret = G__30782;\nerr = G__30783;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"exclude\",\"exclude\",-1230250334))){\nvar G__30784 = cljs.core.nnext(fs);\nvar G__30785 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945)], null),cljs.core.into,refs);\nvar G__30786 = false;\nfs = G__30784;\nret = G__30785;\nerr = G__30786;\ncontinue;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))){\nvar G__30787 = cljs.core.nnext(fs);\nvar G__30788 = cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(ret,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"renames\",\"renames\",343278368)], null),cljs.core.merge,refs);\nvar G__30789 = false;\nfs = G__30787;\nret = G__30788;\nerr = G__30789;\ncontinue;\n} else {\nreturn null;\n}\n}\n}\n} else {\nvar G__30790 = fs;\nvar G__30791 = ret;\nvar G__30792 = true;\nfs = G__30790;\nret = G__30791;\nerr = G__30792;\ncontinue;\n}\n} else {\nreturn ret;\n\n}\n}\nbreak;\n}\n})();\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.into,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s,xs], 0));\n} else {\nreturn s;\n}\n}),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),cljs.core.PersistentArrayMap.EMPTY], null),args);\n});\ncljs.analyzer.use__GT_require = (function cljs$analyzer$use__GT_require(env,p__29365){\nvar vec__29366 = p__29365;\nvar seq__29367 = cljs.core.seq(vec__29366);\nvar first__29368 = cljs.core.first(seq__29367);\nvar seq__29367__$1 = cljs.core.next(seq__29367);\nvar lib = first__29368;\nvar filters = seq__29367__$1;\nvar spec = vec__29366;\nif((((lib instanceof cljs.core.Symbol)) && (cljs.core.odd_QMARK_(cljs.core.count(spec))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n}\n\nvar fs = cljs.core.seq(filters);\nvar ret = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib], null);\nvar err = false;\nwhile(true){\nif(err === true){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"));\n} else {\nif((!((fs == null)))){\nvar kw = cljs.core.first(fs);\nvar only_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"only\",\"only\",1907811652));\nif(((only_QMARK_) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))))){\nif((!((cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw)]),ret) == null)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Each of :only and :rename options may only be specified once in :use / :use-macros\"));\n} else {\nvar refs = cljs.core.second(fs);\nif((!(((((only_QMARK_) && (cljs.core.sequential_QMARK_(refs)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,refs)))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(kw,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613))) && (cljs.core.map_QMARK_(refs)) && (cljs.core.every_QMARK_(((function (fs,ret,err,refs,kw,only_QMARK_,vec__29366,seq__29367,first__29368,seq__29367__$1,lib,filters,spec){\nreturn (function (p1__29364_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,p1__29364_SHARP_);\n});})(fs,ret,err,refs,kw,only_QMARK_,vec__29366,seq__29367,first__29368,seq__29367__$1,lib,filters,spec))\n,refs)))))))){\nvar G__30796 = fs;\nvar G__30797 = ret;\nvar G__30798 = true;\nfs = G__30796;\nret = G__30797;\nerr = G__30798;\ncontinue;\n} else {\nvar G__30799 = cljs.core.nnext(fs);\nvar G__30800 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(ret,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((only_QMARK_)?new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553):kw),refs], null));\nvar G__30801 = false;\nfs = G__30799;\nret = G__30800;\nerr = G__30801;\ncontinue;\n}\n}\n} else {\nvar G__30802 = fs;\nvar G__30803 = ret;\nvar G__30804 = true;\nfs = G__30802;\nret = G__30803;\nerr = G__30804;\ncontinue;\n}\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),ret) == null)))){\nreturn ret;\n} else {\nvar G__30806 = fs;\nvar G__30807 = ret;\nvar G__30808 = true;\nfs = G__30806;\nret = G__30807;\nerr = G__30808;\ncontinue;\n}\n\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse_require_spec = (function cljs$analyzer$parse_require_spec(env,macros_QMARK_,deps,aliases,spec){\nwhile(true){\nif((((spec instanceof cljs.core.Symbol)) || (typeof spec === 'string'))){\nvar G__30809 = env;\nvar G__30810 = macros_QMARK_;\nvar G__30811 = deps;\nvar G__30812 = aliases;\nvar G__30813 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\nenv = G__30809;\nmacros_QMARK_ = G__30810;\ndeps = G__30811;\naliases = G__30812;\nspec = G__30813;\ncontinue;\n} else {\ncljs.analyzer.basic_validate_ns_spec(env,macros_QMARK_,spec);\n\nvar vec__29369 = spec;\nvar seq__29370 = cljs.core.seq(vec__29369);\nvar first__29371 = cljs.core.first(seq__29370);\nvar seq__29370__$1 = cljs.core.next(seq__29370);\nvar lib = first__29371;\nvar opts = seq__29370__$1;\nvar vec__29372 = (function (){var temp__5737__auto__ = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"js-module-index\",\"js-module-index\",2072061931),cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib),new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nif((temp__5737__auto__ == null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [lib,null], null);\n} else {\nvar js_module_name = temp__5737__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(js_module_name),lib], null);\n}\n})();\nvar lib__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29372,(0),null);\nvar js_module_provides = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29372,(1),null);\nvar map__29375 = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,opts);\nvar map__29375__$1 = (((((!((map__29375 == null))))?(((((map__29375.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29375.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29375):map__29375);\nvar alias = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__29375__$1,new cljs.core.Keyword(null,\"as\",\"as\",1148689641),((typeof lib__$1 === 'string')?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.munge(lib__$1)):lib__$1));\nvar referred = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29375__$1,new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553));\nvar renamed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29375__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar referred_without_renamed = cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(renamed)),referred));\nvar vec__29376 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613)], null));\nvar rk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29376,(0),null);\nvar uk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29376,(1),null);\nvar renk = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29376,(2),null);\nif((((alias instanceof cljs.core.Symbol)) || ((alias == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as must be followed by a symbol in :require / :require-macros\"));\n}\n\nif((!((alias == null)))){\nvar alias_type_30816 = (cljs.core.truth_(macros_QMARK_)?new cljs.core.Keyword(null,\"macros\",\"macros\",811339431):new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786));\nvar lib_SINGLEQUOTE__30817 = (function (){var fexpr__29380 = alias_type_30816.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(aliases));\nreturn (fexpr__29380.cljs$core$IFn$_invoke$arity$1 ? fexpr__29380.cljs$core$IFn$_invoke$arity$1(alias) : fexpr__29380.call(null,alias));\n})();\nif((((!((lib_SINGLEQUOTE__30817 == null)))) && (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(lib__$1,lib_SINGLEQUOTE__30817)))){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":as alias must be unique\"));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(aliases,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias_type_30816], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [alias,lib__$1], null),(cljs.core.truth_(js_module_provides)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [js_module_provides,lib__$1], null):null)], 0));\n} else {\n}\n\nif(((((cljs.core.sequential_QMARK_(referred)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,referred)))) || ((referred == null)))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\":refer must be followed by a sequence of symbols in :require / :require-macros\"));\n}\n\nif(cljs.core.truth_(macros_QMARK_)){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,lib__$1);\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((!((alias == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([rk,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.createAsIfByAssoc([alias,lib__$1]),cljs.core.PersistentArrayMap.createAsIfByAssoc([lib__$1,lib__$1]),(cljs.core.truth_(js_module_provides)?cljs.core.PersistentArrayMap.createAsIfByAssoc([js_module_provides,lib__$1]):null)], 0))]):null),(((!((referred_without_renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([uk,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(referred_without_renamed,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(lib__$1)))]):null),(((!((renamed == null))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([renk,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (env,macros_QMARK_,deps,aliases,spec,vec__29369,seq__29370,first__29371,seq__29370__$1,lib,opts,vec__29372,lib__$1,js_module_provides,map__29375,map__29375__$1,alias,referred,renamed,referred_without_renamed,vec__29376,rk,uk,renk){\nreturn (function (m,p__29381){\nvar vec__29382 = p__29381;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29382,(0),null);\nvar renamed__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29382,(1),null);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([original]),referred))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Renamed symbol \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original),\" not referred\"].join(''));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed__$1,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n});})(env,macros_QMARK_,deps,aliases,spec,vec__29369,seq__29370,first__29371,seq__29370__$1,lib,opts,vec__29372,lib__$1,js_module_provides,map__29375,map__29375__$1,alias,referred,renamed,referred_without_renamed,vec__29376,rk,uk,renk))\n,cljs.core.PersistentArrayMap.EMPTY,renamed)]):null)], 0));\n}\nbreak;\n}\n});\ncljs.analyzer.parse_import_spec = (function cljs$analyzer$parse_import_spec(env,deps,spec){\nif(((((cljs.core.sequential_QMARK_(spec)) && (cljs.core.every_QMARK_(cljs.core.symbol_QMARK_,spec)))) || ((((spec instanceof cljs.core.Symbol)) && ((cljs.core.namespace(spec) == null)))))){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,cljs.analyzer.parse_ns_error_msg(spec,\"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"));\n}\n\nvar import_map = ((cljs.core.sequential_QMARK_(spec))?cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29385_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__29385_SHARP_,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(spec)),\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(p1__29385_SHARP_)].join(''))],null));\n}),cljs.core.rest(spec))):cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(spec),/\\./))),spec]));\nvar seq__29386_30838 = cljs.core.seq(import_map);\nvar chunk__29387_30839 = null;\nvar count__29388_30840 = (0);\nvar i__29389_30841 = (0);\nwhile(true){\nif((i__29389_30841 < count__29388_30840)){\nvar vec__29396_30843 = chunk__29387_30839.cljs$core$IIndexed$_nth$arity$2(null,i__29389_30841);\nvar __30844 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29396_30843,(0),null);\nvar spec_30845__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29396_30843,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_30845__$1);\n\n\nvar G__30848 = seq__29386_30838;\nvar G__30849 = chunk__29387_30839;\nvar G__30850 = count__29388_30840;\nvar G__30851 = (i__29389_30841 + (1));\nseq__29386_30838 = G__30848;\nchunk__29387_30839 = G__30849;\ncount__29388_30840 = G__30850;\ni__29389_30841 = G__30851;\ncontinue;\n} else {\nvar temp__5735__auto___30853 = cljs.core.seq(seq__29386_30838);\nif(temp__5735__auto___30853){\nvar seq__29386_30854__$1 = temp__5735__auto___30853;\nif(cljs.core.chunked_seq_QMARK_(seq__29386_30854__$1)){\nvar c__4609__auto___30855 = cljs.core.chunk_first(seq__29386_30854__$1);\nvar G__30858 = cljs.core.chunk_rest(seq__29386_30854__$1);\nvar G__30859 = c__4609__auto___30855;\nvar G__30860 = cljs.core.count(c__4609__auto___30855);\nvar G__30861 = (0);\nseq__29386_30838 = G__30858;\nchunk__29387_30839 = G__30859;\ncount__29388_30840 = G__30860;\ni__29389_30841 = G__30861;\ncontinue;\n} else {\nvar vec__29399_30863 = cljs.core.first(seq__29386_30854__$1);\nvar __30864 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29399_30863,(0),null);\nvar spec_30865__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29399_30863,(1),null);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(deps,cljs.core.conj,spec_30865__$1);\n\n\nvar G__30866 = cljs.core.next(seq__29386_30854__$1);\nvar G__30867 = null;\nvar G__30868 = (0);\nvar G__30869 = (0);\nseq__29386_30838 = G__30866;\nchunk__29387_30839 = G__30867;\ncount__29388_30840 = G__30868;\ni__29389_30841 = G__30869;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),import_map,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),import_map], null);\n});\n/**\n * Given a spec form check whether the spec namespace requires a macro file\n * of the same name. If so return true.\n */\ncljs.analyzer.macro_autoload_ns_QMARK_ = (function cljs$analyzer$macro_autoload_ns_QMARK_(form){\nif(cljs.core.truth_(cljs.analyzer._STAR_macro_infer_STAR_)){\nvar ns = ((cljs.core.sequential_QMARK_(form))?cljs.core.first(form):form);\nvar map__29402 = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null));\nvar map__29402__$1 = (((((!((map__29402 == null))))?(((((map__29402.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29402.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29402):map__29402);\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29402__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29402__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar or__4185__auto__ = cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(use_macros));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([ns]),cljs.core.vals(require_macros));\n}\n} else {\nreturn null;\n}\n});\n/**\n * Given a symbol that starts with clojure as the first segment return the\n * same symbol with the first segment replaced with cljs\n */\ncljs.analyzer.clj_ns__GT_cljs_ns = (function cljs$analyzer$clj_ns__GT_cljs_ns(sym){\nvar segs = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(sym),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"clojure\",cljs.core.first(segs))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.cons(\"cljs\",cljs.core.next(segs))));\n} else {\nreturn sym;\n}\n});\ncljs.analyzer.canonicalize_specs = (function cljs$analyzer$canonicalize_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nvar spec = cljs.core.second(quoted_spec_or_kw);\nif(((cljs.core.vector_QMARK_(spec)) || (cljs.core.map_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [spec], null);\n}\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\ncljs.analyzer.canonicalize_import_specs = (function cljs$analyzer$canonicalize_import_specs(specs){\nvar canonicalize = (function cljs$analyzer$canonicalize_import_specs_$_canonicalize(quoted_spec_or_kw){\nif((quoted_spec_or_kw instanceof cljs.core.Keyword)){\nreturn quoted_spec_or_kw;\n} else {\nreturn cljs.core.second(quoted_spec_or_kw);\n}\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(canonicalize,specs);\n});\n/**\n * Given an original set of ns specs desugar :include-macros and :refer-macros\n * usage into only primitive spec forms - :use, :require, :use-macros,\n * :require-macros. If a library includes a macro file of with the same name\n * as the namespace will also be desugared.\n */\ncljs.analyzer.desugar_ns_specs = (function cljs$analyzer$desugar_ns_specs(args){\nvar map__29405 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__29406){\nvar vec__29407 = p__29406;\nvar seq__29408 = cljs.core.seq(vec__29407);\nvar first__29409 = cljs.core.first(seq__29408);\nvar seq__29408__$1 = cljs.core.next(seq__29408);\nvar k = first__29409;\nvar specs = seq__29408__$1;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,specs)], null);\n}),args));\nvar map__29405__$1 = (((((!((map__29405 == null))))?(((((map__29405.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29405.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29405):map__29405);\nvar indexed = map__29405__$1;\nvar require = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29405__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar sugar_keys = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953),null], null), null);\nvar remove_from_spec = (function (pred,spec){\nwhile(true){\nif(cljs.core.not(((cljs.core.sequential_QMARK_(spec))?cljs.core.some(pred,spec):false))){\nreturn spec;\n} else {\nvar vec__29411 = cljs.core.split_with(cljs.core.complement(pred),spec);\nvar l = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29411,(0),null);\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29411,(1),null);\nvar G__30900 = pred;\nvar G__30901 = cljs.core.concat.cljs$core$IFn$_invoke$arity$2(l,cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),r));\npred = G__30900;\nspec = G__30901;\ncontinue;\n}\nbreak;\n}\n});\nvar replace_refer_macros = (function (spec){\nif((!(cljs.core.sequential_QMARK_(spec)))){\nreturn spec;\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\"refer-macros\",\"refer-macros\",-1906841953))){\nreturn new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553);\n} else {\nreturn x;\n}\n}),spec);\n}\n});\nvar reload_spec_QMARK_ = (function (p1__29404_SHARP_){\nvar fexpr__29414 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null);\nreturn (fexpr__29414.cljs$core$IFn$_invoke$arity$1 ? fexpr__29414.cljs$core$IFn$_invoke$arity$1(p1__29404_SHARP_) : fexpr__29414.call(null,p1__29404_SHARP_));\n});\nvar to_macro_specs = (function (specs){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nreturn replace_refer_macros(remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"refer\",\"refer\",-964295553),null], null), null),remove_from_spec(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"include-macros\",\"include-macros\",1228110289),null], null), null),x))));\n} else {\nreturn x;\n}\n}),cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (x){\nvar or__4185__auto__ = ((cljs.core.sequential_QMARK_(x))?cljs.core.some(sugar_keys,x):false);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = reload_spec_QMARK_(x);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.analyzer.macro_autoload_ns_QMARK_(x);\n}\n}\n}),specs));\n});\nvar remove_sugar = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(remove_from_spec,sugar_keys);\nvar temp__5737__auto__ = cljs.core.seq(to_macro_specs(require));\nif((temp__5737__auto__ == null)){\nreturn args;\n} else {\nvar require_specs = temp__5737__auto__;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nif(cljs.core.not(reload_spec_QMARK_(x))){\nvar vec__29415 = x;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29415,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29415,(1),null);\nreturn cljs.core.cons(k,cljs.core.map.cljs$core$IFn$_invoke$arity$2(remove_sugar,v));\n} else {\nreturn x;\n}\n}),cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(indexed,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,cljs.core.PersistentVector.EMPTY),require_specs));\n}\n});\ncljs.analyzer.find_def_clash = (function cljs$analyzer$find_def_clash(env,ns,segments){\nvar to_check = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xs){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",cljs.core.butlast(xs))),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.last(xs))], null);\n}),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.PersistentVector.EMPTY,segments)));\nvar seq__29418 = cljs.core.seq(to_check);\nvar chunk__29419 = null;\nvar count__29420 = (0);\nvar i__29421 = (0);\nwhile(true){\nif((i__29421 < count__29420)){\nvar vec__29428 = chunk__29419.cljs$core$IIndexed$_nth$arity$2(null,i__29421);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29428,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29428,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__30920 = seq__29418;\nvar G__30921 = chunk__29419;\nvar G__30922 = count__29420;\nvar G__30923 = (i__29421 + (1));\nseq__29418 = G__30920;\nchunk__29419 = G__30921;\ncount__29420 = G__30922;\ni__29421 = G__30923;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__29418);\nif(temp__5735__auto__){\nvar seq__29418__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__29418__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__29418__$1);\nvar G__30925 = cljs.core.chunk_rest(seq__29418__$1);\nvar G__30926 = c__4609__auto__;\nvar G__30927 = cljs.core.count(c__4609__auto__);\nvar G__30928 = (0);\nseq__29418 = G__30925;\nchunk__29419 = G__30926;\ncount__29420 = G__30927;\ni__29421 = G__30928;\ncontinue;\n} else {\nvar vec__29431 = cljs.core.first(seq__29418__$1);\nvar clash_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29431,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29431,(1),null);\nif(cljs.core.truth_(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),clash_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),name], null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"ns-var-clash\",\"ns-var-clash\",-280494668),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),ns,new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(clash_ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null));\n} else {\n}\n\n\nvar G__30934 = cljs.core.next(seq__29418__$1);\nvar G__30935 = null;\nvar G__30936 = (0);\nvar G__30937 = (0);\nseq__29418 = G__30934;\nchunk__29419 = G__30935;\ncount__29420 = G__30936;\ni__29421 = G__30937;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.macro_ns_name = (function cljs$analyzer$macro_ns_name(name){\nvar name_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif(cljs.core.not(goog.string.endsWith(name_str,\"$macros\"))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([name_str,\"$macros\"].join(''));\n} else {\nreturn name;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),(function (_,env,p__29436,___$1,opts){\nvar vec__29437 = p__29436;\nvar seq__29438 = cljs.core.seq(vec__29437);\nvar first__29439 = cljs.core.first(seq__29438);\nvar seq__29438__$1 = cljs.core.next(seq__29438);\nvar ___$2 = first__29439;\nvar first__29439__$1 = cljs.core.first(seq__29438__$1);\nvar seq__29438__$2 = cljs.core.next(seq__29438__$1);\nvar name = first__29439__$1;\nvar args = seq__29438__$2;\nvar form = vec__29437;\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespace declarations must appear at the top-level.\");\n}\n\nif((name instanceof cljs.core.Symbol)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Namespaces must be named by a symbol.\");\n}\n\nvar name__$1 = (function (){var G__29440 = name;\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.analyzer.macro_ns_name(G__29440);\n} else {\nreturn G__29440;\n}\n})();\nvar segments_30946 = clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.name(name__$1),/\\./);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(segments_30946))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"single-segment-namespace\",\"single-segment-namespace\",-491924469),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\nvar segment_30948 = cljs.core.some(cljs.analyzer.js_reserved,segments_30946);\nif((!((segment_30948 == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"munged-namespace\",\"munged-namespace\",-101986199),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name__$1], null));\n} else {\n}\n\ncljs.analyzer.find_def_clash(env,name__$1,segments_30946);\n\nvar docstring = ((typeof cljs.core.first(args) === 'string')?cljs.core.first(args):null);\nvar mdocstr = new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(name__$1));\nvar args__$1 = (((!((docstring == null))))?cljs.core.next(args):args);\nvar metadata = ((cljs.core.map_QMARK_(cljs.core.first(args__$1)))?cljs.core.first(args__$1):null);\nvar args__$2 = cljs.analyzer.desugar_ns_specs((((!((metadata == null))))?cljs.core.next(args__$1):args__$1));\nvar name__$2 = cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(name__$1,cljs.core.merge,metadata);\nvar map__29441 = cljs.analyzer.parse_ns_excludes(env,args__$2);\nvar map__29441__$1 = (((((!((map__29441 == null))))?(((((map__29441.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29441.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29441):map__29441);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29441__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29441__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__29447){\nvar vec__29448 = p__29447;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29448,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29448,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar valid_forms = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null));\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__29442 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__29451){\nvar vec__29452 = p__29451;\nvar seq__29453 = cljs.core.seq(vec__29452);\nvar first__29454 = cljs.core.first(seq__29453);\nvar seq__29453__$1 = cljs.core.next(seq__29453);\nvar k = first__29454;\nvar libs = seq__29453__$1;\nvar libspec = vec__29452;\nif(cljs.core.truth_((function (){var fexpr__29455 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),null], null), null);\nreturn (fexpr__29455.cljs$core$IFn$_invoke$arity$1 ? fexpr__29455.cljs$core$IFn$_invoke$arity$1(k) : fexpr__29455.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(libspec),\" instead.\"].join(''));\n}\n\nif(cljs.core.truth_((function (){var fexpr__29456 = cljs.core.deref(valid_forms);\nreturn (fexpr__29456.cljs$core$IFn$_invoke$arity$1 ? fexpr__29456.cljs$core$IFn$_invoke$arity$1(k) : fexpr__29456.call(null,k));\n})())){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Only one \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\" form is allowed per namespace definition\"].join(''));\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(valid_forms,cljs.core.disj,k);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5735__auto___30971 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__29434_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__29434_SHARP_));\n}),libs));\nif(temp__5735__auto___30971){\nvar xs_30972 = temp__5735__auto___30971;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_30972),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29435_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__29435_SHARP_));\n}),xs_30972)));\n} else {\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__29457){\nvar vec__29458 = p__29457;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29458,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args__$2));\nvar map__29442__$1 = (((((!((map__29442 == null))))?(((((map__29442.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29442.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29442):map__29442);\nvar params = map__29442__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29442__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\nvar vec__29443 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (spec_map){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"macros-ns\",\"macros-ns\",1626844933).cljs$core$IFn$_invoke$arity$1(opts))){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2),(0),(((cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$2)).length) - (7))));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__29462){\nvar vec__29463 = p__29462;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29463,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29463,(1),null);\nvar G__29466 = m;\nif((!(cljs.core.symbol_identical_QMARK_(v,ns)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__29466,k,v);\n} else {\nreturn G__29466;\n}\n}),cljs.core.PersistentArrayMap.EMPTY,spec_map);\n} else {\nreturn spec_map;\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [require_macros,use_macros], null));\nvar require_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29443,(0),null);\nvar use_macros__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29443,(1),null);\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name__$2);\n\nvar ns_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"doc\",\"doc\",1913296891)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros__$1,excludes,name__$2,imports,requires,uses,require_macros__$1,(function (){var or__4185__auto__ = docstring;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn mdocstr;\n}\n})()]);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name__$2], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__29467 = ns_info;\nvar G__29467__$1 = (cljs.core.truth_((function (){var fexpr__29468 = cljs.core.deref(reload);\nreturn (fexpr__29468.cljs$core$IFn$_invoke$arity$1 ? fexpr__29468.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__29468.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__29467,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__29469 = cljs.core.deref(reload);\nreturn (fexpr__29469.cljs$core$IFn$_invoke$arity$1 ? fexpr__29469.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__29469.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__29467);\nif(cljs.core.truth_((function (){var fexpr__29470 = cljs.core.deref(reload);\nreturn (fexpr__29470.cljs$core$IFn$_invoke$arity$1 ? fexpr__29470.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__29470.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__29467__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__29471 = cljs.core.deref(reload);\nreturn (fexpr__29471.cljs$core$IFn$_invoke$arity$1 ? fexpr__29471.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__29471.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__29467__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.check_duplicate_aliases = (function cljs$analyzer$check_duplicate_aliases(env,old,new$){\nvar ns_name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(old);\nvar seq__29472 = cljs.core.seq(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)], null));\nvar chunk__29473 = null;\nvar count__29474 = (0);\nvar i__29475 = (0);\nwhile(true){\nif((i__29475 < count__29474)){\nvar k = chunk__29473.cljs$core$IIndexed$_nth$arity$2(null,i__29475);\nvar old_aliases_31008 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_31009 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5739__auto___31011 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_31009)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__29472,chunk__29473,count__29474,i__29475,old_aliases_31008,new_aliases_31009,k,ns_name){\nreturn (function (p__29484){\nvar vec__29485 = p__29484;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29485,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29485,(1),null);\nvar entry = vec__29485;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_31009,k__$1))));\n});})(seq__29472,chunk__29473,count__29474,i__29475,old_aliases_31008,new_aliases_31009,k,ns_name))\n,old_aliases_31008)));\nif((temp__5739__auto___31011 == null)){\n} else {\nvar alias_31017 = temp__5739__auto___31011;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_31017),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_31008,alias_31017))].join(''));\n}\n\n\nvar G__31019 = seq__29472;\nvar G__31020 = chunk__29473;\nvar G__31021 = count__29474;\nvar G__31022 = (i__29475 + (1));\nseq__29472 = G__31019;\nchunk__29473 = G__31020;\ncount__29474 = G__31021;\ni__29475 = G__31022;\ncontinue;\n} else {\nvar temp__5735__auto__ = cljs.core.seq(seq__29472);\nif(temp__5735__auto__){\nvar seq__29472__$1 = temp__5735__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__29472__$1)){\nvar c__4609__auto__ = cljs.core.chunk_first(seq__29472__$1);\nvar G__31023 = cljs.core.chunk_rest(seq__29472__$1);\nvar G__31024 = c__4609__auto__;\nvar G__31025 = cljs.core.count(c__4609__auto__);\nvar G__31026 = (0);\nseq__29472 = G__31023;\nchunk__29473 = G__31024;\ncount__29474 = G__31025;\ni__29475 = G__31026;\ncontinue;\n} else {\nvar k = cljs.core.first(seq__29472__$1);\nvar old_aliases_31027 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(old,k);\nvar new_aliases_31028 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(new$,k);\nvar temp__5739__auto___31031 = cljs.core.some(cljs.core.set(cljs.core.keys(new_aliases_31028)),cljs.core.keys(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(((function (seq__29472,chunk__29473,count__29474,i__29475,old_aliases_31027,new_aliases_31028,k,seq__29472__$1,temp__5735__auto__,ns_name){\nreturn (function (p__29488){\nvar vec__29489 = p__29488;\nvar k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29489,(0),null);\nvar v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29489,(1),null);\nvar entry = vec__29489;\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k__$1,v)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.find(new_aliases_31028,k__$1))));\n});})(seq__29472,chunk__29473,count__29474,i__29475,old_aliases_31027,new_aliases_31028,k,seq__29472__$1,temp__5735__auto__,ns_name))\n,old_aliases_31027)));\nif((temp__5739__auto___31031 == null)){\n} else {\nvar alias_31032 = temp__5739__auto___31031;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Alias \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(alias_31032),\" already exists in namespace \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns_name),\", aliasing \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(old_aliases_31027,alias_31032))].join(''));\n}\n\n\nvar G__31040 = cljs.core.next(seq__29472__$1);\nvar G__31041 = null;\nvar G__31042 = (0);\nvar G__31043 = (0);\nseq__29472 = G__31040;\nchunk__29473 = G__31041;\ncount__29474 = G__31042;\ni__29475 = G__31043;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"ns*\",\"ns*\",1840949383,null),(function (_,env,p__29495,___$1,opts){\nvar vec__29496 = p__29495;\nvar ___$2 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29496,(0),null);\nvar quoted_specs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29496,(1),null);\nvar form = vec__29496;\nvar temp__5735__auto___31049 = cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__29492_SHARP_){\nreturn ((cljs.core.seq_QMARK_(p1__29492_SHARP_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),cljs.core.first(p1__29492_SHARP_))));\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.keyword_QMARK_,quoted_specs)));\nif(cljs.core.truth_(temp__5735__auto___31049)){\nvar not_quoted_31051 = temp__5735__auto___31049;\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Arguments to \",cljs.core.name(cljs.core.first(quoted_specs)),\" must be quoted. Offending spec: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(not_quoted_31051)].join(''));\n} else {\n}\n\nif(cljs.core.truth_(cljs.analyzer._STAR_allow_ns_STAR_)){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,[\"Calls to `\",cljs.core.name(cljs.core.first(quoted_specs)),\"` must appear at the top-level.\"].join(''));\n}\n\nvar specs = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.first(quoted_specs)))?cljs.analyzer.canonicalize_import_specs(quoted_specs):cljs.analyzer.canonicalize_specs(quoted_specs));\nvar name = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar args = cljs.analyzer.desugar_ns_specs((new cljs.core.List(null,specs,null,(1),null)));\nvar map__29499 = cljs.analyzer.parse_ns_excludes(env,args);\nvar map__29499__$1 = (((((!((map__29499 == null))))?(((((map__29499.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29499.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29499):map__29499);\nvar excludes = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29499__$1,new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945));\nvar core_renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29499__$1,new cljs.core.Keyword(null,\"renames\",\"renames\",343278368));\nvar core_renames__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__29502){\nvar vec__29503 = p__29502;\nvar original = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29503,(0),null);\nvar renamed = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29503,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,renamed,cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(original)));\n}),cljs.core.PersistentArrayMap.EMPTY,core_renames);\nvar deps = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\nvar aliases = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"fns\",\"fns\",1185138786),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"macros\",\"macros\",811339431),cljs.core.PersistentArrayMap.EMPTY], null));\nvar spec_parsers = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"require\",\"require\",-468001333),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,false,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(cljs.analyzer.parse_require_spec,env,true,deps,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([aliases], 0)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.use__GT_require,env)),new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.parse_import_spec,env,deps)], null);\nvar reload = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"use\",\"use\",-1846382424),null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333),null,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),null,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),null], null));\nvar reloads = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar map__29500 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__29506){\nvar vec__29507 = p__29506;\nvar seq__29508 = cljs.core.seq(vec__29507);\nvar first__29509 = cljs.core.first(seq__29508);\nvar seq__29508__$1 = cljs.core.next(seq__29508);\nvar k = first__29509;\nvar libs = seq__29508__$1;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"import\",\"import\",-1399500709),k)){\n} else {\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload\",\"reload\",863702807));\n} else {\n}\n\nif((!((cljs.core.some(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs) == null)))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reload,cljs.core.assoc,k,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200));\n} else {\n}\n}\n\nvar temp__5739__auto___31071 = cljs.core.seq(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__29493_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__29493_SHARP_));\n}),libs));\nif((temp__5739__auto___31071 == null)){\n} else {\nvar xs_31072 = temp__5739__auto___31071;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reloads,cljs.core.assoc,k,cljs.core.zipmap(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,xs_31072),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29494_SHARP_){\nreturn new cljs.core.Keyword(null,\"reload\",\"reload\",863702807).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(p1__29494_SHARP_));\n}),xs_31072)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.merge_with,cljs.core.merge,m,cljs.core.map.cljs$core$IFn$_invoke$arity$2((spec_parsers.cljs$core$IFn$_invoke$arity$1 ? spec_parsers.cljs$core$IFn$_invoke$arity$1(k) : spec_parsers.call(null,k)),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),null,new cljs.core.Keyword(null,\"reload-all\",\"reload-all\",761570200),null], null), null),libs)));\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p__29510){\nvar vec__29511 = p__29510;\nvar r = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29511,(0),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(r,new cljs.core.Keyword(null,\"refer-clojure\",\"refer-clojure\",813784440));\n}),args));\nvar map__29500__$1 = (((((!((map__29500 == null))))?(((((map__29500.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29500.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29500):map__29500);\nvar params = map__29500__$1;\nvar uses = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424));\nvar requires = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"require\",\"require\",-468001333));\nvar renames = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"rename\",\"rename\",1508157613));\nvar use_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393));\nvar require_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416));\nvar rename_macros = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512));\nvar imports = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29500__$1,new cljs.core.Keyword(null,\"import\",\"import\",-1399500709));\n(cljs.analyzer._STAR_cljs_ns_STAR_ = name);\n\nvar require_info = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416)],[rename_macros,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([renames,core_renames__$1], 0)),use_macros,excludes,name,imports,requires,uses,require_macros]);\nvar ns_info = (function (){var ns_info_SINGLEQUOTE_ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null));\nif((cljs.core.count(ns_info_SINGLEQUOTE_) > (0))){\nvar merge_keys = new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),new cljs.core.Keyword(null,\"uses\",\"uses\",232664692),new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927),new cljs.core.Keyword(null,\"renames\",\"renames\",343278368),new cljs.core.Keyword(null,\"imports\",\"imports\",-1249933394)], null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info_SINGLEQUOTE_,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),excludes], null),cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(ns_info_SINGLEQUOTE_,merge_keys),cljs.core.select_keys(require_info,merge_keys)], 0))], 0));\n} else {\nreturn require_info;\n}\n})();\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),name], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ns_info], 0));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"ns*\",\"ns*\",200417856),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"deps\",\"deps\",1883360319),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(deps))),new cljs.core.Keyword(null,\"reload\",\"reload\",863702807),cljs.core.deref(reload),new cljs.core.Keyword(null,\"reloads\",\"reloads\",610698522),cljs.core.deref(reloads)], null),(function (){var G__29515 = require_info;\nvar G__29515__$1 = (cljs.core.truth_((function (){var fexpr__29516 = cljs.core.deref(reload);\nreturn (fexpr__29516.cljs$core$IFn$_invoke$arity$1 ? fexpr__29516.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__29516.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})())?cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__29515,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"uses\",\"uses\",232664692)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__29517 = cljs.core.deref(reload);\nreturn (fexpr__29517.cljs$core$IFn$_invoke$arity$1 ? fexpr__29517.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)) : fexpr__29517.call(null,new cljs.core.Keyword(null,\"use\",\"use\",-1846382424)));\n})(),true]));\n})):G__29515);\nif(cljs.core.truth_((function (){var fexpr__29518 = cljs.core.deref(reload);\nreturn (fexpr__29518.cljs$core$IFn$_invoke$arity$1 ? fexpr__29518.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__29518.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})())){\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(G__29515__$1,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"requires\",\"requires\",-1201390927)], null),(function (m){\nreturn cljs.core.with_meta(m,cljs.core.PersistentArrayMap.createAsIfByAssoc([(function (){var fexpr__29519 = cljs.core.deref(reload);\nreturn (fexpr__29519.cljs$core$IFn$_invoke$arity$1 ? fexpr__29519.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"require\",\"require\",-468001333)) : fexpr__29519.call(null,new cljs.core.Keyword(null,\"require\",\"require\",-468001333)));\n})(),true]));\n}));\n} else {\nreturn G__29515__$1;\n}\n})()], 0));\n}));\ncljs.analyzer.parse_type = (function cljs$analyzer$parse_type(op,env,p__29520){\nvar vec__29521 = p__29520;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29521,(0),null);\nvar tsym = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29521,(1),null);\nvar fields = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29521,(2),null);\nvar pmasks = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29521,(3),null);\nvar body = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29521,(4),null);\nvar form = vec__29521;\nvar t = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783)),tsym));\nvar locals = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,fld){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,fld,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950),new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411),new cljs.core.Keyword(null,\"shadow\",\"shadow\",873231803),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724)],[fld,true,cljs.analyzer.get_col(fld,env),new cljs.core.Keyword(null,\"unsynchronized-mutable\",\"unsynchronized-mutable\",-164143950).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),cljs.analyzer.get_line(fld,env),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),new cljs.core.Keyword(null,\"volatile-mutable\",\"volatile-mutable\",1731728411).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(fld)),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(fld) : m.call(null,fld)),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500)]));\n}),cljs.core.PersistentArrayMap.EMPTY,((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op))?cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fields,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"__meta\",\"__meta\",-946752628,null),new cljs.core.Symbol(null,\"__extmap\",\"__extmap\",-1435580931,null),cljs.core.with_meta(new cljs.core.Symbol(null,\"__hash\",\"__hash\",-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null))], null)):fields));\nvar protocols = new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tsym));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),tsym], null),(function (m){\nvar m__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((function (){var or__4185__auto__ = m;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),t,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),new cljs.core.Keyword(null,\"type\",\"type\",1174270348),true,new cljs.core.Keyword(null,\"num-fields\",\"num-fields\",1529154024),cljs.core.count(fields),new cljs.core.Keyword(null,\"record\",\"record\",-779106859),cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),op)], 0));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m__$1,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.meta(tsym),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),protocols], null),cljs.analyzer.source_info.cljs$core$IFn$_invoke$arity$2(tsym,env)], 0));\n}));\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"pmasks\",\"pmasks\",-871416698),new cljs.core.Keyword(null,\"protocols\",\"protocols\",-5615896),new cljs.core.Keyword(null,\"fields\",\"fields\",-1932066230),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"t\",\"t\",-1397832519),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)],[new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"body\",\"body\",-2049205669)], null),pmasks,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(protocols,new cljs.core.Symbol(\"cljs.core\",\"Object\",\"cljs.core/Object\",-345545431,null)),fields,op,env,t,form,new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),(function (){var G__29524 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),locals);\nvar G__29525 = body;\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29524,G__29525) : cljs.analyzer.analyze.call(null,G__29524,G__29525));\n})()]);\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"deftype*\",\"deftype*\",962659890,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"deftype\",\"deftype\",340294561),env,form);\n}));\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"defrecord*\",\"defrecord*\",-1936366207,null),(function (_,env,form,___$1,___$2){\nreturn cljs.analyzer.parse_type(new cljs.core.Keyword(null,\"defrecord\",\"defrecord\",-1367493418),env,form);\n}));\ncljs.analyzer.property_symbol_QMARK_ = (function cljs$analyzer$property_symbol_QMARK_(p1__29526_SHARP_){\nreturn cljs.core.boolean$((((p1__29526_SHARP_ instanceof cljs.core.Symbol))?cljs.core.re_matches(/^-.*/,cljs.core.name(p1__29526_SHARP_)):false));\n});\ncljs.analyzer.classify_dot_form = (function cljs$analyzer$classify_dot_form(p__29527){\nvar vec__29528 = p__29527;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29528,(0),null);\nvar member = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29528,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29528,(2),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(((target == null))?new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642):new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n),((cljs.analyzer.property_symbol_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886):(((member instanceof cljs.core.Symbol))?new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902):((cljs.core.seq_QMARK_(member))?new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923):new cljs.core.Keyword(\"cljs.analyzer\",\"error\",\"cljs.analyzer/error\",-65289642)\n))),(((args == null))?cljs.core.List.EMPTY:new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)\n)], null);\n});\nif((typeof cljs !== 'undefined') && (typeof cljs.analyzer !== 'undefined') && (typeof cljs.analyzer.build_dot_form !== 'undefined')){\n} else {\ncljs.analyzer.build_dot_form = (function (){var method_table__4672__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__4673__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__4674__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__4675__auto__ = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__4676__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"hierarchy\",\"hierarchy\",-1053470341),(function (){var fexpr__29532 = cljs.core.get_global_hierarchy;\nreturn (fexpr__29532.cljs$core$IFn$_invoke$arity$0 ? fexpr__29532.cljs$core$IFn$_invoke$arity$0() : fexpr__29532.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.analyzer\",\"build-dot-form\"),(function (p1__29531_SHARP_){\nreturn cljs.analyzer.classify_dot_form(p1__29531_SHARP_);\n}),new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),hierarchy__4676__auto__,method_table__4672__auto__,prefer_table__4673__auto__,method_cache__4674__auto__,cached_hierarchy__4675__auto__));\n})();\n}\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),cljs.core.List.EMPTY], null),(function (p__29533){\nvar vec__29534 = p__29533;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29534,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29534,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29534,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"access\",\"cljs.analyzer/access\",-1639036494),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(prop).substring((1)))], null);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"property\",\"cljs.analyzer/property\",1113330886),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923)], null),(function (p__29537){\nvar vec__29538 = p__29537;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29538,(0),null);\nvar prop = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29538,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29538,(2),null);\nthrow (new Error([\"Cannot provide arguments \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(args),\" on property access \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop)].join('')));\n}));\n/**\n * Builds the intermediate method call map used to reason about the parsed form during\n *   compilation.\n */\ncljs.analyzer.build_method_call = (function cljs$analyzer$build_method_call(target,meth,args){\nif((meth instanceof cljs.core.Symbol)){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),meth,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601),new cljs.core.Keyword(\"cljs.analyzer\",\"call\",\"cljs.analyzer/call\",964149800),new cljs.core.Keyword(null,\"target\",\"target\",253001721),target,new cljs.core.Keyword(null,\"method\",\"method\",55703592),cljs.core.first(meth),new cljs.core.Keyword(null,\"args\",\"args\",1315556576),args], null);\n}\n});\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889)], null),(function (p__29541){\nvar vec__29542 = p__29541;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29542,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29542,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29542,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"symbol\",\"cljs.analyzer/symbol\",933248902),cljs.core.List.EMPTY], null),(function (p__29545){\nvar vec__29546 = p__29545;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29546,(0),null);\nvar meth = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29546,(1),null);\nvar args = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29546,(2),null);\nreturn cljs.analyzer.build_method_call(target,meth,args);\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"expr\",\"cljs.analyzer/expr\",1708655889),new cljs.core.Keyword(\"cljs.analyzer\",\"list\",\"cljs.analyzer/list\",-539585923),cljs.core.List.EMPTY], null),(function (p__29549){\nvar vec__29550 = p__29549;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29550,(0),null);\nvar meth_expr = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29550,(1),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29550,(2),null);\nreturn cljs.analyzer.build_method_call(target,cljs.core.first(meth_expr),cljs.core.rest(meth_expr));\n}));\ncljs.analyzer.build_dot_form.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\"default\",\"default\",-1987822328),(function (dot_form){\nthrow (new Error([\"Unknown dot form of \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\".\",\".\",1975675962,null),dot_form)),\" with classification \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.analyzer.classify_dot_form(dot_form))].join('')));\n}));\ncljs.analyzer.analyze_dot = (function cljs$analyzer$analyze_dot(env,target,field,member_PLUS_,form){\nvar v = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [target,field,member_PLUS_], null);\nvar map__29554 = cljs.analyzer.build_dot_form.cljs$core$IFn$_invoke$arity$1(v);\nvar map__29554__$1 = (((((!((map__29554 == null))))?(((((map__29554.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29554.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29554):map__29554);\nvar dot_action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29554__$1,new cljs.core.Keyword(null,\"dot-action\",\"dot-action\",-1460119601));\nvar target__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29554__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29554__$1,new cljs.core.Keyword(null,\"method\",\"method\",55703592));\nvar field__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29554__$1,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29554__$1,new cljs.core.Keyword(null,\"args\",\"args\",1315556576));\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar targetexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,target__$1) : cljs.analyzer.analyze.call(null,enve,target__$1));\nvar form_meta = cljs.core.meta(form);\nvar target_tag = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(targetexpr);\nvar prop = (function (){var or__4185__auto__ = field__$1;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn method;\n}\n})();\nvar tag = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = ((cljs.analyzer.js_tag_QMARK_(target_tag))?cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(cljs.analyzer.normalize_js_tag(target_tag),cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465)], null),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.conj,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null)], null)),prop):false);\nif(cljs.core.truth_(or__4185__auto____$1)){\nreturn or__4185__auto____$1;\n} else {\nreturn null;\n}\n}\n})();\nif(((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"constructor\",\"constructor\",-313397284,null),prop)) && ((!(clojure.string.starts_with_QMARK_(cljs.core.str.cljs$core$IFn$_invoke$arity$1(prop),\"cljs$\")))))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"Object\",\"Object\",61210754,null),cljs.core.first(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"object\",\"object\",1474613949),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null),target_tag)){\nif(cljs.core.truth_((function (){var or__4185__auto__ = (target_tag == null);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar fexpr__29557 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\"], null), null);\nreturn (fexpr__29557.cljs$core$IFn$_invoke$arity$1 ? fexpr__29557.cljs$core$IFn$_invoke$arity$1(target_tag) : fexpr__29557.call(null,target_tag));\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null));\n} else {\n}\n\nvar vec__29558_31093 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast,cljs.core.identity)(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)));\nvar pre_SINGLEQUOTE__31094 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29558_31093,(0),null);\nvar pre_31095 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29558_31093,(1),null);\nif(cljs.core.truth_((function (){var and__4174__auto__ = cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_SINGLEQUOTE__31094);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.not(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_31095));\n} else {\nreturn and__4174__auto__;\n}\n})())){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"infer-warning\",\"infer-warning\",-1600671410),env,new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"warn-type\",\"warn-type\",-790105219),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"type\",\"type\",1174270348),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"js\",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\".\",(function (){var G__29561 = pre_SINGLEQUOTE__31094;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"prototype\",\"prototype\",519166522,null),cljs.core.last(pre_SINGLEQUOTE__31094))){\nreturn cljs.core.butlast(G__29561);\n} else {\nreturn G__29561;\n}\n})())),new cljs.core.Keyword(null,\"property\",\"property\",-1114278232),prop], null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nif(cljs.analyzer.js_tag_QMARK_(tag)){\nvar pre_31096 = new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag));\nif(cljs.core.truth_(cljs.analyzer.has_extern_QMARK_.cljs$core$IFn$_invoke$arity$1(pre_31096))){\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env)),new cljs.core.Keyword(null,\"externs\",\"externs\",221720677)], null),pre_31096),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.PersistentArrayMap.EMPTY], 0));\n}\n} else {\n}\n\nvar G__29562 = dot_action;\nvar G__29562__$1 = (((G__29562 instanceof cljs.core.Keyword))?G__29562.fqn:null);\nswitch (G__29562__$1) {\ncase \"cljs.analyzer/access\":\nvar children = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn tag;\n}\n})():tag)], null);\n\nbreak;\ncase \"cljs.analyzer/call\":\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29553_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__29553_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__29553_SHARP_));\n}),args);\nvar children = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null);\nreturn new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-call\",\"host-call\",1059629755),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"target\",\"target\",253001721),targetexpr,new cljs.core.Keyword(null,\"method\",\"method\",55703592),method,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),children,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),((cljs.analyzer.js_tag_QMARK_(tag))?(function (){var or__4185__auto__ = cljs.analyzer.js_tag.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"prefix\",\"prefix\",-265908465).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(tag)),new cljs.core.Keyword(null,\"ret-tag\",\"ret-tag\",1705919990));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null);\n}\n})():tag)], null);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__29562__$1)].join('')));\n\n}\n});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(function (_,env,p__29563,___$1,___$2){\nvar vec__29564 = p__29563;\nvar seq__29565 = cljs.core.seq(vec__29564);\nvar first__29566 = cljs.core.first(seq__29565);\nvar seq__29565__$1 = cljs.core.next(seq__29565);\nvar ___$3 = first__29566;\nvar first__29566__$1 = cljs.core.first(seq__29565__$1);\nvar seq__29565__$2 = cljs.core.next(seq__29565__$1);\nvar target = first__29566__$1;\nvar vec__29567 = seq__29565__$2;\nvar seq__29568 = cljs.core.seq(vec__29567);\nvar first__29569 = cljs.core.first(seq__29568);\nvar seq__29568__$1 = cljs.core.next(seq__29568);\nvar field = first__29569;\nvar member_PLUS_ = seq__29568__$1;\nvar form = vec__29564;\nvar _STAR_recur_frames_STAR__orig_val__29570 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29571 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29571);\n\ntry{return cljs.analyzer.analyze_dot(env,target,field,member_PLUS_,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29570);\n}}));\ncljs.analyzer.get_js_tag = (function cljs$analyzer$get_js_tag(form){\nvar form_meta = cljs.core.meta(form);\nvar temp__5737__auto__ = new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(form_meta);\nif((temp__5737__auto__ == null)){\nif(new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta) === true){\nreturn new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null);\n} else {\nreturn null;\n}\n} else {\nvar tag = temp__5737__auto__;\nreturn tag;\n}\n});\ncljs.analyzer.js_star_interp = (function cljs$analyzer$js_star_interp(env,s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nvar inner = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(cljs.analyzer.resolve_existing_var(env,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,((2) + idx),end))));\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),cljs.core.cons(inner,(function (){var G__29572 = env;\nvar G__29573 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.js_star_interp.cljs$core$IFn$_invoke$arity$2(G__29572,G__29573) : cljs.analyzer.js_star_interp.call(null,G__29572,G__29573));\n})()));\n}),null,null));\n}\n});\ncljs.analyzer.js_star_seg = (function cljs$analyzer$js_star_seg(s){\nvar idx = s.indexOf(\"~{\");\nif(((-1) === idx)){\nreturn (new cljs.core.List(null,s,null,(1),null));\n} else {\nvar end = s.indexOf(\"}\",idx);\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx),(function (){var G__29574 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(end + (1)));\nreturn (cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.js_star_seg.cljs$core$IFn$_invoke$arity$1(G__29574) : cljs.analyzer.js_star_seg.call(null,G__29574));\n})());\n}),null,null));\n}\n});\ncljs.analyzer.NUMERIC_SET = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),\"null\",new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null),\"null\",new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null),\"null\",new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),\"null\"], null), null);\ncljs.analyzer.numeric_type_QMARK_ = (function cljs$analyzer$numeric_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif((((t instanceof cljs.core.Symbol)) && ((!((cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.NUMERIC_SET,t) == null)))))){\nreturn true;\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(t)){\nreturn ((cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"long\",\"long\",1469079434,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"double\",\"double\",-1769548886,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null))) || (cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null))));\n} else {\nreturn null;\n}\n}\n\n}\n}\n}\n});\ncljs.analyzer.array_types = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Symbol(null,\"boolean\",\"boolean\",-278886877,null),\"null\",new cljs.core.Symbol(null,\"floats\",\"floats\",513591110,null),\"null\",new cljs.core.Symbol(null,\"longs\",\"longs\",-1017696020,null),\"null\",new cljs.core.Symbol(null,\"objects\",\"objects\",-554722035,null),\"null\",new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null),\"null\",new cljs.core.Symbol(null,\"doubles\",\"doubles\",-1517872169,null),\"null\",new cljs.core.Symbol(null,\"chars\",\"chars\",545901210,null),\"null\",new cljs.core.Symbol(null,\"ints\",\"ints\",-1761239845,null),\"null\",new cljs.core.Symbol(null,\"shorts\",\"shorts\",107738238,null),\"null\",new cljs.core.Symbol(null,\"bytes\",\"bytes\",-1478569089,null),\"null\"], null), null);\ncljs.analyzer.array_type_QMARK_ = (function cljs$analyzer$array_type_QMARK_(t){\nif((t == null)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"clj-nil\",\"clj-nil\",1321798654,null),t)){\nreturn true;\n} else {\nif(cljs.analyzer.js_tag_QMARK_(t)){\nreturn true;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null),t)){\nreturn true;\n} else {\nif(cljs.core.contains_QMARK_(cljs.analyzer.array_types,t)){\nreturn true;\n} else {\nreturn cljs.core.boolean$(((cljs.analyzer.cljs_set_QMARK_(t))?(function (){var or__4185__auto__ = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"any\",\"any\",-948528346,null));\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar or__4185__auto____$1 = cljs.core.contains_QMARK_(t,new cljs.core.Symbol(null,\"js\",\"js\",-886355190,null));\nif(or__4185__auto____$1){\nreturn or__4185__auto____$1;\n} else {\nreturn cljs.core.some(cljs.analyzer.array_types,t);\n}\n}\n})():null));\n\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_js_star_args = (function cljs$analyzer$analyze_js_star_args(js_op,env,args){\nreturn cljs.core.first(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__29575,arg){\nvar vec__29576 = p__29575;\nvar argexprs = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29576,(0),null);\nvar env__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29576,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(argexprs,(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env__$1,arg) : cljs.analyzer.analyze.call(null,env__$1,arg))),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(js_op,new cljs.core.Symbol(\"cljs.core\",\"and\",\"cljs.core/and\",-6692549,null)))?cljs.analyzer.set_test_induced_tags(env__$1,arg):env__$1)], null);\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,env], null),args));\n});\ncljs.analyzer.analyze_js_star_STAR_ = (function cljs$analyzer$analyze_js_star_STAR_(env,jsform,args,form){\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar form_meta = cljs.core.meta(form);\nvar segs = cljs.analyzer.js_star_seg(jsform);\nvar tag = cljs.analyzer.get_js_tag(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar argexprs = cljs.analyzer.analyze_js_star_args(js_op,enve,args);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar validate = (function (warning_type,valid_types_QMARK_){\nvar types = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29579_SHARP_){\nreturn cljs.analyzer.infer_tag(env,p1__29579_SHARP_);\n}),argexprs);\nif(cljs.core.truth_((valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1 ? valid_types_QMARK_.cljs$core$IFn$_invoke$arity$1(types) : valid_types_QMARK_.call(null,types)))){\nreturn null;\n} else {\nreturn cljs.analyzer.warning(warning_type,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"types\",\"types\",590030639),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,types)], null));\n}\n});\nvar op_match_QMARK_ = (function (sym){\nreturn cljs.core.symbol_identical_QMARK_(sym,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta));\n});\nif(numeric === true){\nvalidate(new cljs.core.Keyword(null,\"invalid-arithmetic\",\"invalid-arithmetic\",1917075065),(function (p1__29580_SHARP_){\nreturn cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,p1__29580_SHARP_);\n}));\n} else {\n}\n\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"args\",\"args\",1315556576),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),new cljs.core.Keyword(null,\"segs\",\"segs\",-1940299576),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)],[argexprs,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null),numeric,segs,new cljs.core.Keyword(null,\"js\",\"js\",1768080579),env,js_op,form,tag]);\n});\ncljs.analyzer.analyze_js_star = (function cljs$analyzer$analyze_js_star(env,jsform,args,form){\nvar _STAR_recur_frames_STAR__orig_val__29581 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29582 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29582);\n\ntry{return cljs.analyzer.analyze_js_star_STAR_(env,jsform,args,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29581);\n}});\ncljs.analyzer.parse.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Symbol(null,\"js*\",\"js*\",-1134233646,null),(function (op,env,p__29583,_,___$1){\nvar vec__29584 = p__29583;\nvar seq__29585 = cljs.core.seq(vec__29584);\nvar first__29586 = cljs.core.first(seq__29585);\nvar seq__29585__$1 = cljs.core.next(seq__29585);\nvar ___$2 = first__29586;\nvar first__29586__$1 = cljs.core.first(seq__29585__$1);\nvar seq__29585__$2 = cljs.core.next(seq__29585__$1);\nvar jsform = first__29586__$1;\nvar args = seq__29585__$2;\nvar form = vec__29584;\nif(typeof jsform === 'string'){\n} else {\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env,\"Invalid js* form\");\n}\n\nif((!((args == null)))){\nreturn cljs.analyzer.analyze_js_star(env,jsform,args,form);\n} else {\nvar code = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.analyzer.js_star_interp(env,jsform));\nvar tag = cljs.analyzer.get_js_tag(form);\nvar form_meta = cljs.core.meta(form);\nvar js_op = new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897).cljs$core$IFn$_invoke$arity$1(form_meta);\nvar numeric = new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714).cljs$core$IFn$_invoke$arity$1(form_meta);\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js\",\"js\",1768080579),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"code\",\"code\",1586293142),code,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag,new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),numeric], null);\n}\n}));\ncljs.analyzer.unsorted_map_QMARK_ = (function cljs$analyzer$unsorted_map_QMARK_(x){\nreturn ((cljs.core.map_QMARK_(x)) && ((!(cljs.core.sorted_QMARK_(x)))));\n});\n/**\n * Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n *   warnings that will have been caught by a first compiler pass.\n */\ncljs.analyzer.analyzed = (function cljs$analyzer$analyzed(x){\nif(cljs.analyzer.unsorted_map_QMARK_(x)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(x,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n} else {\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(x,cljs.core.assoc,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162),true);\n\n}\n});\n/**\n * Returns boolean if the form has already been marked as analyzed.\n */\ncljs.analyzer.analyzed_QMARK_ = (function cljs$analyzer$analyzed_QMARK_(x){\nreturn cljs.core.boolean$(((cljs.analyzer.unsorted_map_QMARK_(x))?new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(x):new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(x))\n));\n});\ncljs.analyzer.all_values_QMARK_ = (function cljs$analyzer$all_values_QMARK_(exprs){\nreturn cljs.core.every_QMARK_((function (p1__29587_SHARP_){\nreturn (((p1__29587_SHARP_ == null)) || ((p1__29587_SHARP_ instanceof cljs.core.Symbol)) || (typeof p1__29587_SHARP_ === 'string') || (typeof p1__29587_SHARP_ === 'number') || (p1__29587_SHARP_ === true) || (p1__29587_SHARP_ === false));\n}),exprs);\n});\ncljs.analyzer.valid_arity_QMARK_ = (function cljs$analyzer$valid_arity_QMARK_(argc,method_params){\nreturn (((method_params == null)) || (cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([argc]),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,method_params)))));\n});\ncljs.analyzer.record_tag_QMARK_ = (function cljs$analyzer$record_tag_QMARK_(tag){\nreturn cljs.core.boolean$((((tag instanceof cljs.core.Symbol))?(((!((cljs.core.namespace(tag) == null))))?cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(tag)),new cljs.core.Keyword(null,\"record\",\"record\",-779106859)], null)):false):false));\n});\ncljs.analyzer.record_basis = (function cljs$analyzer$record_basis(tag){\nvar positional_factory = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\"->\",cljs.core.name(tag)].join(''));\nvar fields = cljs.core.first(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(tag)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),positional_factory,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179)], null)));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashSet.EMPTY,fields);\n});\ncljs.analyzer.record_with_field_QMARK_ = (function cljs$analyzer$record_with_field_QMARK_(tag,field){\nreturn ((cljs.analyzer.record_tag_QMARK_(tag)) && (cljs.core.contains_QMARK_(cljs.analyzer.record_basis(tag),field)));\n});\ncljs.analyzer.invalid_arity_QMARK_ = (function cljs$analyzer$invalid_arity_QMARK_(argc,method_params,variadic,max_fixed_arity){\nif((!(cljs.analyzer.valid_arity_QMARK_(argc,method_params)))){\nvar or__4185__auto__ = cljs.core.not(variadic);\nif(or__4185__auto__){\nreturn or__4185__auto__;\n} else {\nvar and__4174__auto__ = variadic;\nif(cljs.core.truth_(and__4174__auto__)){\nreturn (argc < max_fixed_arity);\n} else {\nreturn and__4174__auto__;\n}\n}\n} else {\nreturn false;\n}\n});\ncljs.analyzer.parse_invoke_STAR_ = (function cljs$analyzer$parse_invoke_STAR_(env,p__29589){\nvar vec__29590 = p__29589;\nvar seq__29591 = cljs.core.seq(vec__29590);\nvar first__29592 = cljs.core.first(seq__29591);\nvar seq__29591__$1 = cljs.core.next(seq__29591);\nvar f = first__29592;\nvar args = seq__29591__$1;\nvar form = vec__29590;\nvar enve = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar fexpr = (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,f) : cljs.analyzer.analyze.call(null,enve,f));\nvar argc = cljs.core.count(args);\nvar fn_var_QMARK_ = (function (){var or__4185__auto__ = new cljs.core.Keyword(null,\"fn-var\",\"fn-var\",1086204730).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\"js-fn-var\",\"js-fn-var\",-565665358).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\n}\n})();\nvar kw_QMARK_ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"cljs.core\",\"Keyword\",\"cljs.core/Keyword\",-451434488,null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar cur_ns = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env));\nvar HO_invoke_QMARK_ = ((cljs.core.boolean$(cljs.analyzer._STAR_cljs_static_fns_STAR_)) && (cljs.core.not(fn_var_QMARK_)) && ((!(cljs.analyzer.js_tag_QMARK_(f)))) && ((!(kw_QMARK_))) && ((!(cljs.analyzer.analyzed_QMARK_(f)))));\nvar bind_f_expr_QMARK_ = ((HO_invoke_QMARK_) && ((!((f instanceof cljs.core.Symbol)))));\nvar bind_args_QMARK_ = ((HO_invoke_QMARK_) && ((!(cljs.analyzer.all_values_QMARK_(args)))));\nif(fn_var_QMARK_){\nvar map__29593_31126 = new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr);\nvar map__29593_31127__$1 = (((((!((map__29593_31126 == null))))?(((((map__29593_31126.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29593_31126.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29593_31126):map__29593_31126);\nvar variadic_31128 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29593_31127__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity_31129 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29593_31127__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params_31130 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29593_31127__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar name_31131 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29593_31127__$1,new cljs.core.Keyword(null,\"name\",\"name\",1843675177));\nvar ns_31132 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29593_31127__$1,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760));\nvar macro_31133 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29593_31127__$1,new cljs.core.Keyword(null,\"macro\",\"macro\",-867863404));\nif(cljs.core.truth_(((cljs.core.not((function (){var and__4174__auto__ = goog.string.endsWith(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cur_ns),\"$macros\");\nif(cljs.core.truth_(and__4174__auto__)){\nreturn ((cljs.core.symbol_identical_QMARK_(cur_ns,ns_31132)) && (macro_31133 === true));\n} else {\nreturn and__4174__auto__;\n}\n})()))?cljs.analyzer.invalid_arity_QMARK_(argc,method_params_31130,variadic_31128,max_fixed_arity_31129):false))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_31131,new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n} else {\n}\n\nif(((kw_QMARK_) && ((!(((((1) === argc)) || (((2) === argc)))))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),cljs.core.first(form),new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc], null));\n} else {\n}\n\nvar deprecated_QMARK__31138 = new cljs.core.Keyword(null,\"deprecated\",\"deprecated\",1498275348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr));\nvar no_warn_QMARK__31139 = new cljs.core.Keyword(null,\"deprecation-nowarn\",\"deprecation-nowarn\",-1762828044).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nif(((cljs.core.boolean$(deprecated_QMARK__31138)) && ((!(cljs.core.boolean$(no_warn_QMARK__31139)))))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"fn-deprecated\",\"fn-deprecated\",626877647),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif((!((new cljs.core.Keyword(null,\"type\",\"type\",1174270348).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(fexpr)) == null)))){\ncljs.analyzer.warning(new cljs.core.Keyword(null,\"invoke-ctor\",\"invoke-ctor\",-756052704),env,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"fexpr\",\"fexpr\",-122857150),fexpr], null));\n} else {\n}\n\nif(((bind_args_QMARK_) || (bind_f_expr_QMARK_))){\nvar arg_syms = ((bind_args_QMARK_)?cljs.core.take.cljs$core$IFn$_invoke$arity$2(argc,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym)):null);\nvar f_sym = ((bind_f_expr_QMARK_)?cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\"fexpr__\"):null);\nvar bindings = (function (){var G__29595 = cljs.core.PersistentVector.EMPTY;\nvar G__29595__$1 = ((bind_args_QMARK_)?cljs.core.into.cljs$core$IFn$_invoke$arity$2(G__29595,cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arg_syms,args)):G__29595);\nif(bind_f_expr_QMARK_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(G__29595__$1,f_sym,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.analyzer.analyzed(f)], 0));\n} else {\nreturn G__29595__$1;\n}\n})();\nvar G__29596 = env;\nvar G__29597 = cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(bindings)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,cljs.analyzer.analyzed(((bind_f_expr_QMARK_)?f_sym:f)),null,(1),null)),((bind_args_QMARK_)?arg_syms:args)))),null,(1),null))], 0))));\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29596,G__29597) : cljs.analyzer.analyze.call(null,G__29596,G__29597));\n} else {\nvar ana_expr = (function (p1__29588_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(enve,p1__29588_SHARP_) : cljs.analyzer.analyze.call(null,enve,p1__29588_SHARP_));\n});\nvar argexprs = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(ana_expr,args);\nif((((((f instanceof cljs.core.Keyword)) && ((cljs.core.namespace(f) == null)))) && (((1) === cljs.core.count(args))) && (cljs.analyzer.record_with_field_QMARK_(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(cljs.core.first(argexprs)),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(f)))))){\nvar field_access_form = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([\".-\",cljs.core.name(f)].join('')),args);\nvar _STAR_cljs_warnings_STAR__orig_val__29598 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29599 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29599);\n\ntry{return (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(env,field_access_form) : cljs.analyzer.analyze.call(null,env,field_access_form));\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29598);\n}} else {\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),fexpr,new cljs.core.Keyword(null,\"args\",\"args\",1315556576),argexprs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"args\",\"args\",1315556576)], null)], null);\n}\n}\n});\ncljs.analyzer.parse_invoke = (function cljs$analyzer$parse_invoke(env,form){\nvar _STAR_recur_frames_STAR__orig_val__29600 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29601 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29601);\n\ntry{return cljs.analyzer.parse_invoke_STAR_(env,form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29600);\n}});\ncljs.analyzer.desugar_dotted_expr = (function cljs$analyzer$desugar_dotted_expr(p__29602){\nvar map__29603 = p__29602;\nvar map__29603__$1 = (((((!((map__29603 == null))))?(((((map__29603.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29603.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29603):map__29603);\nvar expr = map__29603__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29603__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nvar G__29605 = op;\nvar G__29605__$1 = (((G__29605 instanceof cljs.core.Keyword))?G__29605.fqn:null);\nswitch (G__29605__$1) {\ncase \"var\":\ncase \"local\":\nif(cljs.analyzer.dotted_symbol_QMARK_(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr))))){\nvar s = cljs.core.name(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr));\nvar idx = s.lastIndexOf(\".\");\nvar _ = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((idx + (1)),((s).length)))?null:(function(){throw (new Error(\"Assert failed: (not= (inc idx) (count s))\"))})());\nvar prefix = cljs.core.with_meta(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(expr)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),idx)),cljs.core.meta(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr)));\nvar field = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(idx + (1))));\nif(cljs.core.not(new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(expr))){\n} else {\nthrow (new Error(\"Assert failed: (not (:const-expr expr))\"));\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"host-field\",\"host-field\",-72662140),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),(new cljs.core.List(null,new cljs.core.Symbol(null,\".\",\".\",1975675962,null),(new cljs.core.List(null,prefix,(new cljs.core.List(null,field,null,(1),null)),(2),null)),(3),null)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(function (){var G__29606 = cljs.core.assoc_in(cljs.core.assoc_in(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(expr,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),prefix,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),prefix], 0)),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"info\",\"info\",-317069002),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)], null),prefix),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nreturn (cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.desugar_dotted_expr.cljs$core$IFn$_invoke$arity$1(G__29606) : cljs.analyzer.desugar_dotted_expr.call(null,G__29606));\n})(),new cljs.core.Keyword(null,\"field\",\"field\",-1302436500),field,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223).cljs$core$IFn$_invoke$arity$1(expr),new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"target\",\"target\",253001721)], null)], null);\n} else {\nreturn expr;\n}\n\nbreak;\ndefault:\nreturn expr;\n\n}\n});\n/**\n * Finds the var associated with sym\n */\ncljs.analyzer.analyze_symbol = (function cljs$analyzer$analyze_symbol(env,sym){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\ncljs.analyzer.register_constant_BANG_.cljs$core$IFn$_invoke$arity$2(env,sym);\n\nvar G__29607 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),sym,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"Symbol\",\"cljs.core/Symbol\",292989338,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__29607) : cljs.analyzer.analyze_wrap_meta.call(null,G__29607));\n} else {\nvar map__29608 = cljs.core.meta(sym);\nvar map__29608__$1 = (((((!((map__29608 == null))))?(((((map__29608.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29608.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29608):map__29608);\nvar line = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29608__$1,new cljs.core.Keyword(null,\"line\",\"line\",212345235));\nvar column = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29608__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095));\nvar env__$1 = (((!((line == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line):env);\nvar env__$2 = (((!((column == null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"column\",\"column\",2078222095),column):env__$1);\nvar ret = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env__$2,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),sym], null);\nvar lcls = new cljs.core.Keyword(null,\"locals\",\"locals\",535295783).cljs$core$IFn$_invoke$arity$1(env__$2);\nvar temp__5737__auto__ = cljs.analyzer.handle_symbol_local(sym,cljs.core.get.cljs$core$IFn$_invoke$arity$2(lcls,sym));\nif((temp__5737__auto__ == null)){\nvar sym_meta = cljs.core.meta(sym);\nvar sym_ns = cljs.core.namespace(sym);\nvar cur_ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(env__$2)));\nvar sym__$1 = (cljs.core.truth_((function (){var and__4174__auto__ = sym_ns;\nif(cljs.core.truth_(and__4174__auto__)){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,\"cljs.core\")){\nvar and__4174__auto____$1 = goog.string.endsWith(cur_ns,\"$macros\");\nif(cljs.core.truth_(and__4174__auto____$1)){\nreturn ((cljs.core.not(goog.string.endsWith(sym_ns,\"$macros\"))) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(sym_ns,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cur_ns,(0),(((cur_ns).length) - (7))))));\n} else {\nreturn and__4174__auto____$1;\n}\n} else {\nreturn false;\n}\n} else {\nreturn and__4174__auto__;\n}\n})())?cljs.core.symbol.cljs$core$IFn$_invoke$arity$2([sym_ns,\"$macros\"].join(''),cljs.core.name(sym)):sym);\nvar info = (((!(cljs.core.contains_QMARK_(sym_meta,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162)))))?cljs.analyzer.resolve_existing_var(env__$2,sym__$1):cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info))){\n} else {\nthrow (new Error([\"Assert failed: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(info)),\"\\n\",\"(:op info)\"].join('')));\n}\n\nreturn cljs.analyzer.desugar_dotted_expr((((!(new cljs.core.Keyword(null,\"def-var\",\"def-var\",-698214377).cljs$core$IFn$_invoke$arity$1(env__$2) === true)))?cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info),cljs.core.select_keys(info,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null)),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292).cljs$core$IFn$_invoke$arity$1(info);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar const_expr = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),const_expr], null);\n} else {\nreturn null;\n}\n})()], 0)):(function (){var info__$1 = cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(env__$2,sym__$1);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"var\",\"var\",-769682797),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),info__$1], 0)),cljs.core.select_keys(info__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223)], null))], 0));\n})()));\n} else {\nvar lb = temp__5737__auto__;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(ret,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"info\",\"info\",-317069002),lb], 0)),((cljs.core.map_QMARK_(lb))?cljs.core.select_keys(lb,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),new cljs.core.Keyword(null,\"local\",\"local\",-1497766724),new cljs.core.Keyword(null,\"arg-id\",\"arg-id\",-767177868),new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762),new cljs.core.Keyword(null,\"init\",\"init\",-1875481434)], null)):null)], 0));\n}\n}\n});\ncljs.analyzer.excluded_QMARK_ = (function cljs$analyzer$excluded_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"excludes\",\"excludes\",-1791725945),sym) == null)))));\n});\ncljs.analyzer.used_QMARK_ = (function cljs$analyzer$used_QMARK_(env,sym){\nreturn (((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))) || ((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$5(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"name\",\"name\",1843675177)),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym) == null)))));\n});\ncljs.analyzer.get_expander_ns = (function cljs$analyzer$get_expander_ns(env,nstr){\nvar res = (function (){var or__4185__auto__ = cljs.analyzer.resolve_macro_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.analyzer.resolve_ns_alias.cljs$core$IFn$_invoke$arity$3(env,nstr,null);\n}\n})();\nvar nstr__$1 = (((!((res == null))))?cljs.core.str.cljs$core$IFn$_invoke$arity$1(res):nstr);\nif((\"clojure.core\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM);\n} else {\nif((\"clojure.repl\" === nstr__$1)){\nreturn cljs.core.find_macros_ns(new cljs.core.Symbol(null,\"cljs.repl\",\"cljs.repl\",1767065658,null));\n} else {\nif(cljs.core.truth_(goog.string.contains(nstr__$1,\".\"))){\nreturn cljs.core.find_macros_ns(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1));\n} else {\nvar G__29610 = env;\nvar G__29610__$1 = (((G__29610 == null))?null:new cljs.core.Keyword(null,\"ns\",\"ns\",441598760).cljs$core$IFn$_invoke$arity$1(G__29610));\nvar G__29610__$2 = (((G__29610__$1 == null))?null:new cljs.core.Keyword(null,\"require-macros\",\"require-macros\",707947416).cljs$core$IFn$_invoke$arity$1(G__29610__$1));\nvar G__29610__$3 = (((G__29610__$2 == null))?null:cljs.core.get.cljs$core$IFn$_invoke$arity$2(G__29610__$2,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(nstr__$1)));\nif((G__29610__$3 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_macros_ns(G__29610__$3);\n}\n\n}\n}\n}\n});\ncljs.analyzer.get_expander_STAR_ = (function cljs$analyzer$get_expander_STAR_(sym,env){\nif((((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"locals\",\"locals\",535295783),sym) == null)))) || (((cljs.analyzer.excluded_QMARK_(env,sym)) && ((!(cljs.analyzer.used_QMARK_(env,sym)))))))){\nreturn null;\n} else {\nvar nstr = cljs.core.namespace(sym);\nif((!((nstr == null)))){\nvar ns = cljs.analyzer.get_expander_ns(env,nstr);\nif((!((ns == null)))){\nreturn ns.findInternedVar(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym)));\n} else {\nreturn null;\n}\n} else {\nif((!((cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym) == null)))){\nvar qualified_symbol = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"rename-macros\",\"rename-macros\",1076432512),sym);\nvar nsym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(qualified_symbol));\nvar sym__$1 = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(qualified_symbol));\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym__$1);\n} else {\nvar nsym = cljs.analyzer.gets.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),new cljs.core.Keyword(null,\"use-macros\",\"use-macros\",-905638393),sym);\nif((((!((nsym == null)))) && ((nsym instanceof cljs.core.Symbol)))){\nreturn cljs.core.find_macros_ns(nsym).findInternedVar(sym);\n} else {\nreturn cljs.core.find_macros_ns(cljs.analyzer.CLJS_CORE_MACROS_SYM).findInternedVar(sym);\n}\n\n}\n}\n}\n});\n/**\n * Given a sym, a symbol identifying a macro, and env, an analysis environment\n * return the corresponding Clojure macroexpander.\n */\ncljs.analyzer.get_expander = (function cljs$analyzer$get_expander(sym,env){\nvar mvar = cljs.analyzer.get_expander_STAR_(sym,env);\nif((((!((mvar == null)))) && (mvar.isMacro()))){\nreturn mvar;\n} else {\nreturn null;\n}\n});\nvar cached_var_31176 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)),new cljs.core.Symbol(null,\"macroexpand-check\",\"macroexpand-check\",699092091,null));\n}),null));\ncljs.analyzer.get_macroexpand_check_var = (function cljs$analyzer$get_macroexpand_check_var(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha\",\"cljs.spec.alpha\",505122844,null)) == null)))){\nreturn cljs.core.deref(cached_var_31176);\n} else {\nreturn null;\n}\n});\ncljs.analyzer.var__GT_sym = (function cljs$analyzer$var__GT_sym(var$){\nreturn var$.sym;\n});\ncljs.analyzer.do_macroexpand_check = (function cljs$analyzer$do_macroexpand_check(env,form,mac_var){\nif(cljs.core.not(new cljs.core.Keyword(null,\"spec-skip-macros\",\"spec-skip-macros\",-645015958).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_))))){\nvar mchk = cljs.analyzer.get_macroexpand_check_var();\nif((!((mchk == null)))){\ntry{var G__29612 = mac_var;\nvar G__29613 = cljs.core.next(form);\nreturn (mchk.cljs$core$IFn$_invoke$arity$2 ? mchk.cljs$core$IFn$_invoke$arity$2(G__29612,G__29613) : mchk.call(null,G__29612,G__29613));\n}catch (e29611){var e = e29611;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macro-syntax-check\",\"macro-syntax-check\",2072602373),cljs.analyzer.var__GT_sym(mac_var)),e);\n}} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.check_macro_arity = (function cljs$analyzer$check_macro_arity(mac_var,form){\nvar mac_sym = mac_var.sym;\nvar temp__5735__auto__ = cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_sym)),new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_sym))], null));\nif(cljs.core.truth_(temp__5735__auto__)){\nvar map__29615 = temp__5735__auto__;\nvar map__29615__$1 = (((((!((map__29615 == null))))?(((((map__29615.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29615.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29615):map__29615);\nvar variadic_QMARK_ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29615__$1,new cljs.core.Keyword(null,\"variadic?\",\"variadic?\",584179762));\nvar max_fixed_arity = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29615__$1,new cljs.core.Keyword(null,\"max-fixed-arity\",\"max-fixed-arity\",-690205543));\nvar method_params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29615__$1,new cljs.core.Keyword(null,\"method-params\",\"method-params\",-980792179));\nvar argc = cljs.core.count(cljs.core.rest(form));\nvar offset = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"&form\",\"&form\",1482799337,null),cljs.core.ffirst(method_params)))?(2):(0));\nif(cljs.core.truth_(cljs.analyzer.invalid_arity_QMARK_(argc,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__29614_SHARP_){\nreturn cljs.core.nthrest(p1__29614_SHARP_,offset);\n}),method_params),variadic_QMARK_,(cljs.core.truth_(max_fixed_arity)?(max_fixed_arity - offset):null)))){\nthrow (new Error(cljs.analyzer.error_message.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn-arity\",\"fn-arity\",-403576501),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"argc\",\"argc\",-1452839519),argc,new cljs.core.Keyword(null,\"name\",\"name\",1843675177),mac_sym], null))));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.macroexpand_1_STAR_ = (function cljs$analyzer$macroexpand_1_STAR_(env,form){\nvar op = cljs.core.first(form);\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"ns\",\"ns\",2082130287,null),op)){\ncljs.analyzer.do_macroexpand_check(env,form,cljs.analyzer.get_expander(new cljs.core.Symbol(\"cljs.core\",\"ns-special-form\",\"cljs.core/ns-special-form\",1585185745,null),env));\n} else {\n}\n\nreturn form;\n} else {\nvar temp__5737__auto__ = (((op instanceof cljs.core.Symbol))?cljs.analyzer.get_expander(op,env):null);\nif((temp__5737__auto__ == null)){\nif((op instanceof cljs.core.Symbol)){\nvar opname = cljs.core.str.cljs$core$IFn$_invoke$arity$1(op);\nif((\".\" === opname.charAt((0)))){\nvar vec__29617 = cljs.core.next(form);\nvar seq__29618 = cljs.core.seq(vec__29617);\nvar first__29619 = cljs.core.first(seq__29618);\nvar seq__29618__$1 = cljs.core.next(seq__29618);\nvar target = first__29619;\nvar args = seq__29618__$1;\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.analyzer.DOT_SYM,target,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(opname,(1))),args),cljs.core.meta(form));\n} else {\nif((\".\" === opname.charAt((opname.length - (1))))){\nreturn cljs.core.with_meta(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.NEW_SYM,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(opname,(0),(((opname).length) - (1)))),cljs.core.next(form)),cljs.core.meta(form));\n} else {\nreturn form;\n\n}\n}\n} else {\nreturn form;\n}\n} else {\nvar mac_var = temp__5737__auto__;\ncljs.analyzer.do_macroexpand_check(env,form,mac_var);\n\nvar form_SINGLEQUOTE_ = (function (){try{cljs.analyzer.check_macro_arity(mac_var,form);\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(mac_var),form,env,cljs.core.rest(form));\n}catch (e29620){var e = e29620;\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"macroexpansion\",\"macroexpansion\",706274075),cljs.analyzer.var__GT_sym(mac_var)),e);\n}})();\nif(cljs.analyzer.cljs_seq_QMARK_(form_SINGLEQUOTE_)){\nvar sym_SINGLEQUOTE_ = cljs.core.first(form_SINGLEQUOTE_);\nvar sym = cljs.core.first(form);\nif(cljs.core.symbol_identical_QMARK_(sym_SINGLEQUOTE_,cljs.analyzer.JS_STAR_SYM)){\nvar sym__$1 = (((!((cljs.core.namespace(sym) == null))))?sym:cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\"cljs.core\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym)));\nvar js_op = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"js-op\",\"js-op\",-1046277897),sym__$1], null);\nvar numeric = (function (){var mac_var_ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(mac_var.sym));\nvar mac_var_name = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(mac_var.sym));\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),mac_var_ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),mac_var_name,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(\"cljs.analyzer\",\"numeric\",\"cljs.analyzer/numeric\",1415704188)], null));\n})();\nvar js_op__$1 = ((numeric === true)?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(js_op,new cljs.core.Keyword(null,\"numeric\",\"numeric\",-1495594714),true):js_op);\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(form_SINGLEQUOTE_,cljs.core.merge,js_op__$1);\n} else {\nreturn form_SINGLEQUOTE_;\n}\n} else {\nreturn form_SINGLEQUOTE_;\n}\n}\n}\n});\n/**\n * Given a env, an analysis environment, and form, a ClojureScript form,\n * macroexpand the form once.\n */\ncljs.analyzer.macroexpand_1 = (function cljs$analyzer$macroexpand_1(env,form){\ntry{return cljs.analyzer.macroexpand_1_STAR_(env,form);\n}catch (e29621){var err__28742__auto__ = e29621;\nif(cljs.analyzer.has_error_data_QMARK_(err__28742__auto__)){\nthrow err__28742__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__28742__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__28742__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__28742__auto__.message,err__28742__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq_STAR_ = (function cljs$analyzer$analyze_seq_STAR_(op,env,form,name,opts){\nif(cljs.core.contains_QMARK_(cljs.analyzer.specials,op)){\nreturn cljs.analyzer.parse.cljs$core$IFn$_invoke$arity$5(op,env,form,name,opts);\n} else {\nreturn cljs.analyzer.parse_invoke(env,form);\n}\n});\ncljs.analyzer.analyze_seq_STAR__wrap = (function cljs$analyzer$analyze_seq_STAR__wrap(op,env,form,name,opts){\ntry{return cljs.analyzer.analyze_seq_STAR_(op,env,form,name,opts);\n}catch (e29622){var err__28742__auto__ = e29622;\nif(cljs.analyzer.has_error_data_QMARK_(err__28742__auto__)){\nthrow err__28742__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__28742__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__28742__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__28742__auto__.message,err__28742__auto__));\n\n}\n}\n}});\ncljs.analyzer.analyze_seq = (function cljs$analyzer$analyze_seq(var_args){\nvar G__29624 = arguments.length;\nswitch (G__29624) {\ncase 3:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\nif(new cljs.core.Keyword(null,\"quoted?\",\"quoted?\",1464649621).cljs$core$IFn$_invoke$arity$1(env)){\nreturn (cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze_list.cljs$core$IFn$_invoke$arity$2(env,form) : cljs.analyzer.analyze_list.call(null,env,form));\n} else {\nvar line = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar line__$1 = (((line == null))?new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(env):line);\nvar col = new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(form));\nvar col__$1 = (((col == null))?new cljs.core.Keyword(null,\"column\",\"column\",2078222095).cljs$core$IFn$_invoke$arity$1(env):col);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(env,new cljs.core.Keyword(null,\"line\",\"line\",212345235),line__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"column\",\"column\",2078222095),col__$1], 0));\nvar op = cljs.core.first(form);\nif((op == null)){\nthrow cljs.analyzer.error.cljs$core$IFn$_invoke$arity$2(env__$1,\"Can't call nil\");\n} else {\n}\n\nvar mform = cljs.analyzer.macroexpand_1(env__$1,form);\nif((form === mform)){\nreturn cljs.analyzer.analyze_seq_STAR__wrap(op,env__$1,form,name,opts);\n} else {\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,mform,name,opts) : cljs.analyzer.analyze.call(null,env__$1,mform,name,opts));\n}\n}\n}));\n\n(cljs.analyzer.analyze_seq.cljs$lang$maxFixedArity = 4);\n\ncljs.analyzer.analyze_map = (function cljs$analyzer$analyze_map(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar ks = (function (){var _STAR_recur_frames_STAR__orig_val__29627 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29628 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29628);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29625_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29625_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29625_SHARP_));\n}),cljs.core.keys(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29627);\n}})();\nvar vs = (function (){var _STAR_recur_frames_STAR__orig_val__29629 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29630 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29630);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29626_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29626_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29626_SHARP_));\n}),cljs.core.vals(form));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29629);\n}})();\nvar G__29631 = new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"map\",\"map\",1371690461),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),ks,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vs,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IMap\",\"cljs.core/IMap\",1407777598,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__29631) : cljs.analyzer.analyze_wrap_meta.call(null,G__29631));\n});\ncljs.analyzer.analyze_list = (function cljs$analyzer$analyze_list(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__29633 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29634 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29634);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29632_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29632_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29632_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29633);\n}})();\nvar G__29635 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"list\",\"list\",765357683),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__29635) : cljs.analyzer.analyze_wrap_meta.call(null,G__29635));\n});\ncljs.analyzer.analyze_vector = (function cljs$analyzer$analyze_vector(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__29637 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29638 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29638);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29636_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29636_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29636_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29637);\n}})();\nvar G__29639 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"vector\",\"vector\",1902966158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"IVector\",\"cljs.core/IVector\",1711112835,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__29639) : cljs.analyzer.analyze_wrap_meta.call(null,G__29639));\n});\ncljs.analyzer.analyze_set = (function cljs$analyzer$analyze_set(env,form){\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__29641 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29642 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29642);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29640_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29640_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29640_SHARP_));\n}),form);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29641);\n}})();\nvar G__29643 = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"set\",\"set\",304602554),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(\"cljs.core\",\"ISet\",\"cljs.core/ISet\",2003412810,null)], null);\nreturn (cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1 ? cljs.analyzer.analyze_wrap_meta.cljs$core$IFn$_invoke$arity$1(G__29643) : cljs.analyzer.analyze_wrap_meta.call(null,G__29643));\n});\ncljs.analyzer.analyze_js_value = (function cljs$analyzer$analyze_js_value(env,form){\nvar val = form.val;\nvar expr_env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nif(cljs.core.map_QMARK_(val)){\nvar keys = cljs.core.vec(cljs.core.keys(val));\nvar vals = (function (){var _STAR_recur_frames_STAR__orig_val__29646 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29647 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29647);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29644_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29644_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29644_SHARP_));\n}),cljs.core.vals(val));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29646);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-object\",\"js-object\",1830199158),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"keys\",\"keys\",1068423698),keys,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),vals,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"object\",\"object\",-1179821820,null)], null);\n} else {\nvar items = (function (){var _STAR_recur_frames_STAR__orig_val__29648 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29649 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29649);\n\ntry{return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p1__29645_SHARP_){\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(expr_env,p1__29645_SHARP_) : cljs.analyzer.analyze.call(null,expr_env,p1__29645_SHARP_));\n}),val);\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29648);\n}})();\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"js-array\",\"js-array\",-1210185421),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"items\",\"items\",1031954938),items,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"items\",\"items\",1031954938)], null),new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"array\",\"array\",-440182315,null)], null);\n}\n});\ncljs.analyzer.record_ns_PLUS_name = (function cljs$analyzer$record_ns_PLUS_name(x){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.symbol,clojure.string.split.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.type(x)], 0)),/\\//));\n});\ncljs.analyzer.analyze_record = (function cljs$analyzer$analyze_record(env,x){\nvar _items_ = (function (){var _STAR_recur_frames_STAR__orig_val__29654 = cljs.analyzer._STAR_recur_frames_STAR_;\nvar _STAR_recur_frames_STAR__temp_val__29655 = cljs.core.cons(null,cljs.analyzer._STAR_recur_frames_STAR_);\n(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__temp_val__29655);\n\ntry{var G__29656 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar G__29657 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,x);\nreturn (cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 ? cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(G__29656,G__29657) : cljs.analyzer.analyze.call(null,G__29656,G__29657));\n}finally {(cljs.analyzer._STAR_recur_frames_STAR_ = _STAR_recur_frames_STAR__orig_val__29654);\n}})();\nvar vec__29651 = cljs.analyzer.record_ns_PLUS_name(x);\nvar ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29651,(0),null);\nvar name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29651,(1),null);\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),x,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),x,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name))], null);\n});\ncljs.analyzer.elide_reader_meta = (function cljs$analyzer$elide_reader_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(m,new cljs.core.Keyword(null,\"file\",\"file\",-1269645878),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"line\",\"line\",212345235),new cljs.core.Keyword(null,\"column\",\"column\",2078222095),new cljs.core.Keyword(null,\"end-column\",\"end-column\",1425389514),new cljs.core.Keyword(null,\"end-line\",\"end-line\",1837326455),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)], 0));\n});\ncljs.analyzer.elide_analyzer_meta = (function cljs$analyzer$elide_analyzer_meta(m){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,new cljs.core.Keyword(\"cljs.analyzer\",\"analyzed\",\"cljs.analyzer/analyzed\",-735094162));\n});\ncljs.analyzer.elide_irrelevant_meta = (function cljs$analyzer$elide_irrelevant_meta(m){\nreturn cljs.analyzer.elide_analyzer_meta(cljs.analyzer.elide_reader_meta(m));\n});\ncljs.analyzer.analyze_wrap_meta = (function cljs$analyzer$analyze_wrap_meta(expr){\nvar form = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(expr);\nvar m = cljs.analyzer.elide_irrelevant_meta(cljs.core.meta(form));\nif((!((cljs.core.seq(m) == null)))){\nvar env = new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr);\nvar expr__$1 = cljs.core.assoc_in(expr,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),new cljs.core.Keyword(null,\"context\",\"context\",-830191113)], null),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291));\nvar meta_expr = cljs.analyzer.analyze_map(new cljs.core.Keyword(null,\"env\",\"env\",-1815813235).cljs$core$IFn$_invoke$arity$1(expr__$1),m);\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"with-meta\",\"with-meta\",-1566856820),new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form,new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),meta_expr,new cljs.core.Keyword(null,\"expr\",\"expr\",745722291),expr__$1,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"meta\",\"meta\",1499536964),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)], null);\n} else {\nreturn expr;\n}\n});\ncljs.analyzer.infer_type = (function cljs$analyzer$infer_type(env,p__29659,_){\nvar map__29660 = p__29659;\nvar map__29660__$1 = (((((!((map__29660 == null))))?(((((map__29660.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29660.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29660):map__29660);\nvar ast = map__29660__$1;\nvar tag = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29660__$1,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223));\nif((((tag == null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(null,\"function\",\"function\",-486723946,null),tag)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"methods\",\"methods\",453930866),(function (ms){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__29658_SHARP_){\nreturn (cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3 ? cljs.analyzer.infer_type.cljs$core$IFn$_invoke$arity$3(env,p1__29658_SHARP_,_) : cljs.analyzer.infer_type.call(null,env,p1__29658_SHARP_,_));\n})),ms);\n}));\n} else {\nvar temp__5737__auto__ = cljs.analyzer.infer_tag(env,ast);\nif((temp__5737__auto__ == null)){\nreturn ast;\n} else {\nvar tag__$1 = temp__5737__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ast,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag__$1);\n}\n}\n} else {\nreturn ast;\n}\n});\ncljs.analyzer.repl_self_require_QMARK_ = (function cljs$analyzer$repl_self_require_QMARK_(env,deps){\nvar and__4174__auto__ = new cljs.core.Keyword(null,\"repl-env\",\"repl-env\",-1976503928).cljs$core$IFn$_invoke$arity$1(env);\nif(cljs.core.truth_(and__4174__auto__)){\nreturn cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.analyzer._STAR_cljs_ns_STAR_]),deps);\n} else {\nreturn and__4174__auto__;\n}\n});\ncljs.analyzer.invoke_arg_type_validators = (function (){var aget_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__29662_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__29662_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.rest(p1__29662_SHARP_))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nvar aset_validator = new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379),(function (p1__29663_SHARP_){\nreturn ((cljs.analyzer.array_type_QMARK_(cljs.core.first(p1__29663_SHARP_))) && (cljs.core.every_QMARK_(cljs.analyzer.numeric_type_QMARK_,cljs.core.butlast(cljs.core.rest(p1__29663_SHARP_)))));\n}),new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595),new cljs.core.Keyword(null,\"invalid-array-access\",\"invalid-array-access\",-1747132236)], null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Symbol(\"cljs.core\",\"checked-aget\",\"cljs.core/checked-aget\",24024561,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset\",\"cljs.core/checked-aset\",-2080232353,null),aset_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aget'\",\"cljs.core/checked-aget'\",1960922245,null),aget_validator,new cljs.core.Symbol(\"cljs.core\",\"checked-aset'\",\"cljs.core/checked-aset'\",163859714,null),aset_validator], null);\n})();\ncljs.analyzer.check_invoke_arg_types = (function cljs$analyzer$check_invoke_arg_types(env,p__29664,opts){\nvar map__29665 = p__29664;\nvar map__29665__$1 = (((((!((map__29665 == null))))?(((((map__29665.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29665.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29665):map__29665);\nvar ast = map__29665__$1;\nvar op = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29665__$1,new cljs.core.Keyword(null,\"op\",\"op\",-1882987955));\nif((((!(cljs.analyzer.analyzed_QMARK_(ast)))) && (cljs.core.keyword_identical_QMARK_(new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),op)))){\nvar temp__5739__auto___31215 = cljs.core.find(cljs.analyzer.invoke_arg_type_validators,new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"info\",\"info\",-317069002).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\"fn\",\"fn\",-1175266204).cljs$core$IFn$_invoke$arity$1(ast))));\nif((temp__5739__auto___31215 == null)){\n} else {\nvar vec__29667_31216 = temp__5739__auto___31215;\nvar name_31217 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29667_31216,(0),null);\nvar map__29670_31218 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29667_31216,(1),null);\nvar map__29670_31219__$1 = (((((!((map__29670_31218 == null))))?(((((map__29670_31218.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29670_31218.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29670_31218):map__29670_31218);\nvar valid_QMARK__31220 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29670_31219__$1,new cljs.core.Keyword(null,\"valid?\",\"valid?\",-212412379));\nvar warning_type_31221 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29670_31219__$1,new cljs.core.Keyword(null,\"warning-type\",\"warning-type\",1711103595));\nvar types_31222 = cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Keyword(null,\"args\",\"args\",1315556576).cljs$core$IFn$_invoke$arity$1(ast));\nif(cljs.core.truth_((valid_QMARK__31220.cljs$core$IFn$_invoke$arity$1 ? valid_QMARK__31220.cljs$core$IFn$_invoke$arity$1(types_31222) : valid_QMARK__31220.call(null,types_31222)))){\n} else {\ncljs.analyzer.warning(warning_type_31221,env,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name_31217,new cljs.core.Keyword(null,\"types\",\"types\",590030639),types_31222], null));\n}\n}\n} else {\n}\n\nreturn cljs.analyzer.analyzed(ast);\n});\ncljs.analyzer.analyze_form = (function cljs$analyzer$analyze_form(env,form,name,opts){\nif((form instanceof cljs.core.Symbol)){\nreturn cljs.analyzer.analyze_symbol(env,form);\n} else {\nif(((cljs.analyzer.cljs_seq_QMARK_(form)) && ((!((cljs.core.seq(form) == null)))))){\nreturn cljs.analyzer.analyze_seq.cljs$core$IFn$_invoke$arity$4(env,form,name,opts);\n} else {\nif(cljs.core.record_QMARK_(form)){\nreturn cljs.analyzer.analyze_record(env,form);\n} else {\nif(cljs.analyzer.cljs_map_QMARK_(form)){\nreturn cljs.analyzer.analyze_map(env,form);\n} else {\nif(cljs.analyzer.cljs_vector_QMARK_(form)){\nreturn cljs.analyzer.analyze_vector(env,form);\n} else {\nif(cljs.analyzer.cljs_set_QMARK_(form)){\nreturn cljs.analyzer.analyze_set(env,form);\n} else {\nif((form instanceof cljs.core.Keyword)){\nreturn cljs.analyzer.analyze_keyword(env,form);\n} else {\nif((form instanceof cljs.tagged_literals.JSValue)){\nreturn cljs.analyzer.analyze_js_value(env,form);\n} else {\nvar tag = (((form == null))?cljs.analyzer.CLJ_NIL_SYM:((typeof form === 'number')?cljs.analyzer.NUMBER_SYM:((typeof form === 'string')?cljs.analyzer.STRING_SYM:((form === true)?cljs.analyzer.BOOLEAN_SYM:((form === false)?cljs.analyzer.BOOLEAN_SYM:((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.List.EMPTY,form))?new cljs.core.Symbol(\"cljs.core\",\"IList\",\"cljs.core/IList\",1015168964,null):null))))));\nvar G__29672 = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"const\",\"const\",1709929842),new cljs.core.Keyword(null,\"val\",\"val\",128701612),form,new cljs.core.Keyword(null,\"env\",\"env\",-1815813235),env,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),form], null);\nif(cljs.core.truth_(tag)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__29672,new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),tag);\n} else {\nreturn G__29672;\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.analyzer.analyze_STAR_ = (function cljs$analyzer$analyze_STAR_(env,form,name,opts){\nvar passes = cljs.analyzer._STAR_passes_STAR_;\nvar passes__$1 = (((passes == null))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.analyzer.infer_type,cljs.analyzer.check_invoke_arg_types], null):passes);\nvar form__$1 = (((form instanceof cljs.core.LazySeq))?((cljs.core.seq(form))?form:cljs.core.List.EMPTY):form);\nvar ast = cljs.analyzer.analyze_form(env,form__$1,name,opts);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ast__$1,pass){\nreturn (pass.cljs$core$IFn$_invoke$arity$3 ? pass.cljs$core$IFn$_invoke$arity$3(env,ast__$1,opts) : pass.call(null,env,ast__$1,opts));\n}),ast,passes__$1);\n});\n/**\n * Given an environment, a map containing {:locals (mapping of names to bindings), :context\n *   (one of :statement, :expr, :return), :ns (a symbol naming the\n *   compilation ns)}, and form, returns an expression object (a map\n *   containing at least :form, :op and :env keys). If expr has any (immediately)\n *   nested exprs, must have a :children entry. This must be a vector of keywords naming\n *   the immediately nested fields mapped to an expr or vector of exprs. This will\n *   facilitate code walking without knowing the details of the op set.\n */\ncljs.analyzer.analyze = (function cljs$analyzer$analyze(var_args){\nvar G__29674 = arguments.length;\nswitch (G__29674) {\ncase 2:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2 = (function (env,form){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3(env,form,null);\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$3 = (function (env,form,name){\nreturn cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env,form,name,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4 = (function (env,form,name,opts){\ntry{if(cljs.analyzer.analyzed_QMARK_(form)){\nvar _STAR_cljs_warnings_STAR__orig_val__29676 = cljs.analyzer._STAR_cljs_warnings_STAR_;\nvar _STAR_cljs_warnings_STAR__temp_val__29677 = cljs.core.zipmap(cljs.core.keys(cljs.analyzer._STAR_cljs_warnings_STAR_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(false));\n(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__temp_val__29677);\n\ntry{return cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}finally {(cljs.analyzer._STAR_cljs_warnings_STAR_ = _STAR_cljs_warnings_STAR__orig_val__29676);\n}} else {\nreturn cljs.analyzer.analyze_STAR_(env,form,name,opts);\n}\n}catch (e29675){var err__28742__auto__ = e29675;\nif(cljs.analyzer.has_error_data_QMARK_(err__28742__auto__)){\nthrow err__28742__auto__;\n} else {\nif(cljs.analyzer.analysis_error_QMARK_(err__28742__auto__)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),err__28742__auto__);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(null,cljs.analyzer.error_data.cljs$core$IFn$_invoke$arity$2(env,new cljs.core.Keyword(null,\"compilation\",\"compilation\",-1328774561)),cljs.analyzer.error.cljs$core$IFn$_invoke$arity$3(env,err__28742__auto__.message,err__28742__auto__));\n\n}\n}\n}}));\n\n(cljs.analyzer.analyze.cljs$lang$maxFixedArity = 4);\n\n/**\n * Given a compiler state and a map from fully qualified symbols to constant\n *   EDN values, update the compiler state marking these vars as const to support\n *   direct substitution of these vars in source.\n */\ncljs.analyzer.add_consts = (function cljs$analyzer$add_consts(compiler_state,constants_map){\nreturn cljs.core.reduce_kv((function (compiler_state__$1,sym,value){\nvar ns = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.namespace(sym));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(compiler_state__$1,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(sym))], null),cljs.core.merge,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"const-expr\",\"const-expr\",-1379382292),(function (){var _STAR_passes_STAR__orig_val__29678 = cljs.analyzer._STAR_passes_STAR_;\nvar _STAR_passes_STAR__temp_val__29679 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.analyzer._STAR_passes_STAR_,cljs.analyzer.replace_env_pass(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"context\",\"context\",-830191113),new cljs.core.Keyword(null,\"expr\",\"expr\",745722291)], null)));\n(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__temp_val__29679);\n\ntry{return cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$2(cljs.analyzer.empty_env(),value);\n}finally {(cljs.analyzer._STAR_passes_STAR_ = _STAR_passes_STAR__orig_val__29678);\n}})()], null));\n}),compiler_state,constants_map);\n});\ncljs.analyzer.resolve_symbol = (function cljs$analyzer$resolve_symbol(sym){\nif(((cljs.core.not(cljs.core.namespace(sym))) && (cljs.analyzer.dotted_symbol_QMARK_(sym)))){\nreturn sym;\n} else {\nreturn new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1((function (){var _STAR_private_var_access_nowarn_STAR__orig_val__29680 = cljs.analyzer._STAR_private_var_access_nowarn_STAR_;\nvar _STAR_private_var_access_nowarn_STAR__temp_val__29681 = true;\n(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__temp_val__29681);\n\ntry{return cljs.analyzer.resolve_var.cljs$core$IFn$_invoke$arity$2(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.env._STAR_compiler_STAR_),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_)),sym);\n}finally {(cljs.analyzer._STAR_private_var_access_nowarn_STAR_ = _STAR_private_var_access_nowarn_STAR__orig_val__29680);\n}})());\n}\n});\nvar registry_ref_31226 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"registry-ref\",\"registry-ref\",1975823941,null));\n}),null));\nvar speced_vars_31227 = (new cljs.core.Delay((function (){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.ns_interns_STAR_(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)),new cljs.core.Symbol(null,\"-speced-vars\",\"-speced-vars\",1758723085,null));\n}),null));\ncljs.analyzer.get_spec_vars = (function cljs$analyzer$get_spec_vars(){\nif((!((cljs.core.find_ns_obj(new cljs.core.Symbol(null,\"cljs.spec.alpha$macros\",\"cljs.spec.alpha$macros\",-896343615,null)) == null)))){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414),cljs.core.deref(registry_ref_31226),new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988),cljs.core.deref(speced_vars_31227)], null);\n} else {\nreturn null;\n}\n});\n/**\n * Dumps registered speced vars for a given namespace into the compiler\n *   environment.\n */\ncljs.analyzer.dump_specs = (function cljs$analyzer$dump_specs(ns){\nvar spec_vars = cljs.analyzer.get_spec_vars();\nvar ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns], null),cljs.core.merge,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar registry_ref = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p__29682){\nvar vec__29683 = p__29682;\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29683,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__29683,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(k));\n})),cljs.core.deref(cljs.core.deref(registry_ref)))], null);\n} else {\nreturn null;\n}\n})(),(function (){var temp__5735__auto__ = new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988).cljs$core$IFn$_invoke$arity$1(spec_vars);\nif(cljs.core.truth_(temp__5735__auto__)){\nvar speced_vars = temp__5735__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387),cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentVector.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (v){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns_str,cljs.core.namespace(v))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns,new cljs.core.Keyword(null,\"fdef-ns\",\"fdef-ns\",-1602124254).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v)))));\n})),cljs.core.deref(cljs.core.deref(speced_vars)))], null);\n} else {\nreturn null;\n}\n})()], 0));\n});\n/**\n * Registers speced vars found in a namespace analysis cache.\n */\ncljs.analyzer.register_specs = (function cljs$analyzer$register_specs(cached_ns){\nvar map__29686 = cljs.analyzer.get_spec_vars();\nvar map__29686__$1 = (((((!((map__29686 == null))))?(((((map__29686.cljs$lang$protocol_mask$partition0$ & (64))) || ((cljs.core.PROTOCOL_SENTINEL === map__29686.cljs$core$ISeq$))))?true:false):false))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__29686):map__29686);\nvar registry_ref = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29686__$1,new cljs.core.Keyword(null,\"registry-ref\",\"registry-ref\",335292414));\nvar speced_vars = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29686__$1,new cljs.core.Keyword(null,\"speced-vars\",\"speced-vars\",-1813125988));\nvar temp__5735__auto___31232 = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"registry-ref\",\"cljs.spec/registry-ref\",-71711915).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5735__auto___31232){\nvar registry_31233 = temp__5735__auto___31232;\nif(cljs.core.truth_(registry_ref)){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(registry_ref),cljs.core.into,registry_31233);\n} else {\n}\n} else {\n}\n\nvar temp__5735__auto__ = cljs.core.seq(new cljs.core.Keyword(\"cljs.spec\",\"speced-vars\",\"cljs.spec/speced-vars\",1010010387).cljs$core$IFn$_invoke$arity$1(cached_ns));\nif(temp__5735__auto__){\nvar vars = temp__5735__auto__;\nif(cljs.core.truth_(speced_vars)){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(speced_vars),cljs.core.into,vars);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ncljs.analyzer.analyze_form_seq = (function cljs$analyzer$analyze_form_seq(var_args){\nvar G__29689 = arguments.length;\nswitch (G__29689) {\ncase 1:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$1 = (function (forms){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2(forms,(cljs.core.truth_(cljs.env._STAR_compiler_STAR_)?new cljs.core.Keyword(null,\"options\",\"options\",99638489).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.env._STAR_compiler_STAR_)):null));\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$2 = (function (forms,opts){\nreturn cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3(forms,opts,false);\n}));\n\n(cljs.analyzer.analyze_form_seq.cljs$core$IFn$_invoke$arity$3 = (function (forms,opts,return_last_QMARK_){\nvar env = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.analyzer.empty_env(),new cljs.core.Keyword(null,\"build-options\",\"build-options\",1183685779),opts);\nvar _STAR_file_defs_STAR__orig_val__29690 = cljs.analyzer._STAR_file_defs_STAR_;\nvar _STAR_cljs_ns_STAR__orig_val__29691 = cljs.analyzer._STAR_cljs_ns_STAR_;\nvar _STAR_cljs_file_STAR__orig_val__29692 = cljs.analyzer._STAR_cljs_file_STAR_;\nvar _STAR_alias_map_STAR__orig_val__29693 = cljs.tools.reader._STAR_alias_map_STAR_;\nvar _STAR_file_defs_STAR__temp_val__29694 = null;\nvar _STAR_cljs_ns_STAR__temp_val__29695 = new cljs.core.Symbol(null,\"cljs.user\",\"cljs.user\",877795071,null);\nvar _STAR_cljs_file_STAR__temp_val__29696 = null;\nvar _STAR_alias_map_STAR__temp_val__29697 = (function (){var or__4185__auto__ = cljs.tools.reader._STAR_alias_map_STAR_;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})();\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__temp_val__29694);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__temp_val__29695);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__temp_val__29696);\n\n(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__temp_val__29697);\n\ntry{var ns = null;\nvar forms__$1 = forms;\nvar last_ast = null;\nwhile(true){\nif((!((forms__$1 == null)))){\nvar form = cljs.core.first(forms__$1);\nvar env__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"ns\",\"ns\",441598760),cljs.analyzer.get_namespace.cljs$core$IFn$_invoke$arity$1(cljs.analyzer._STAR_cljs_ns_STAR_));\nvar ast = cljs.analyzer.analyze.cljs$core$IFn$_invoke$arity$4(env__$1,form,null,opts);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(ast),new cljs.core.Keyword(null,\"ns\",\"ns\",441598760))){\nvar G__31238 = new cljs.core.Keyword(null,\"name\",\"name\",1843675177).cljs$core$IFn$_invoke$arity$1(ast);\nvar G__31239 = cljs.core.next(forms__$1);\nvar G__31240 = ast;\nns = G__31238;\nforms__$1 = G__31239;\nlast_ast = G__31240;\ncontinue;\n} else {\nvar G__31241 = ns;\nvar G__31242 = cljs.core.next(forms__$1);\nvar G__31243 = ast;\nns = G__31241;\nforms__$1 = G__31242;\nlast_ast = G__31243;\ncontinue;\n}\n} else {\nif(cljs.core.truth_(return_last_QMARK_)){\nreturn last_ast;\n} else {\nreturn ns;\n}\n}\nbreak;\n}\n}finally {(cljs.tools.reader._STAR_alias_map_STAR_ = _STAR_alias_map_STAR__orig_val__29693);\n\n(cljs.analyzer._STAR_cljs_file_STAR_ = _STAR_cljs_file_STAR__orig_val__29692);\n\n(cljs.analyzer._STAR_cljs_ns_STAR_ = _STAR_cljs_ns_STAR__orig_val__29691);\n\n(cljs.analyzer._STAR_file_defs_STAR_ = _STAR_file_defs_STAR__orig_val__29690);\n}}));\n\n(cljs.analyzer.analyze_form_seq.cljs$lang$maxFixedArity = 3);\n\n/**\n * Ensures that a non-nil defs map exists in the compiler state for a given\n *   ns. (A non-nil defs map signifies that the namespace has been analyzed.)\n */\ncljs.analyzer.ensure_defs = (function cljs$analyzer$ensure_defs(ns){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.env._STAR_compiler_STAR_,cljs.core.update_in,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"cljs.analyzer\",\"namespaces\",\"cljs.analyzer/namespaces\",-260788927),ns,new cljs.core.Keyword(null,\"defs\",\"defs\",1398449717)], null),(function (p1__29698_SHARP_){\nvar or__4185__auto__ = p1__29698_SHARP_;\nif(cljs.core.truth_(or__4185__auto__)){\nreturn or__4185__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}));\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/analyzer.cljc","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",18],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$react","~$module$node_modules$react$index","~$create-react-class","~$module$node_modules$create_react_class$index","~$react-dom","~$module$node_modules$react_dom$index","~$clojure.spec.alpha","~$cljs.spec.alpha"],"~:use-macros",["^ ","~$no-warn","~$cljs.analyzer.macros","~$wrapping-errors","^H","~$with-warning-handlers","^H","~$disallowing-recur","^H","~$allowing-redef","^H","~$disallowing-ns*","^H","~$ensure","~$cljs.env.macros"],"~:excludes",["~#set",["^N","~$js-reserved","~$macroexpand-1","~$ns-interns"]],"~:name","~$cljs.analyzer","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$set","~$clojure.set","~$gstring","~$goog.string","~$cljs.tools.reader","^13","^12","^12","~$tags","~$cljs.tagged-literals","~$cljs.core","^16","~$goog","^17","~$cljs.tools.reader.reader-types","^18","~$cljs.env","^19","^10","^10","~$readers","^18","^15","^15","~$env","^19","~$string","~$clojure.string","^1=","^1=","~$cljs.reader","^1>","~$edn","^1>","~$reader","^13"],"~:seen",["^Q",["~:require","~:require-macros"]],"~:uses",null,"^1C",["^ ","^H","^H","^O","^O","^16","^16","^1>","^1>","^1?","^1>"],"~:form",["~#list",["~$ns","^V",["^1F",["~:refer-clojure","~:exclude",["^S","^T","^N","^R"]]],["^1F",["^1C",["^H","~:refer",["^G","^I","^J","^K","^L","^M"]],["^O","^1J",["^N"]]]],["^1F",["^1B",["^12","~:as","^11"],["^1=","^1K","^1<"],["^10","^1K","^["],["^19","^1K","^1;"],["^15","^1K","^14"],["^13","^1K","^1@"],["^18","^1K","^1:"],["^1>","^1K","^1?"]]]]],"~:flags",["^ ","^1C",["^Q",[]],"^1B",["^Q",[]]],"~:js-deps",["^ "],"~:deps",["^17","^16","^12","^1=","^10","^19","^15","^13","^18","^1>"]],"^X","^V","~:resource-id",["~:shadow.build.classpath/resource","cljs/analyzer.cljc"],"~:compiled-at",1586645236185,"~:resource-name","cljs/analyzer.cljc","~:warnings",[],"~:source",";   Copyright (c) Rich Hickey. All rights reserved.\n;   The use and distribution terms for this software are covered by the\n;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;   which can be found in the file epl-v10.html at the root of this distribution.\n;   By using this software in any fashion, you are agreeing to be bound by\n;   the terms of this license.\n;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.analyzer\n  #?(:clj  (:refer-clojure :exclude [macroexpand-1 ensure])\n     :cljs (:refer-clojure :exclude [macroexpand-1 ns-interns ensure js-reserved]))\n  #?(:cljs (:require-macros\n             [cljs.analyzer.macros\n              :refer [no-warn wrapping-errors with-warning-handlers\n                      disallowing-recur allowing-redef disallowing-ns*]]\n             [cljs.env.macros :refer [ensure]]))\n  #?(:clj  (:require [cljs.util :as util :refer [ns->relpath topo-sort]]\n                     [clojure.java.io :as io]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env :refer [ensure]]\n                     [cljs.js-deps :as deps]\n                     [cljs.tagged-literals :as tags]\n                     [clojure.tools.reader :as reader]\n                     [clojure.tools.reader.reader-types :as readers]\n                     [clojure.edn :as edn]\n                     [cljs.externs :as externs])\n     :cljs (:require [goog.string :as gstring]\n                     [clojure.string :as string]\n                     [clojure.set :as set]\n                     [cljs.env :as env]\n                     [cljs.tagged-literals :as tags]\n                     [cljs.tools.reader :as reader]\n                     [cljs.tools.reader.reader-types :as readers]\n                     [cljs.reader :as edn]))\n  #?(:clj (:import [java.io File Reader PushbackReader]\n                   [java.util.regex Pattern]\n                   [java.net URL]\n                   [java.lang Throwable]\n                   [clojure.lang Namespace Var LazySeq ArityException]\n                   [cljs.tagged_literals JSValue])))\n\n#?(:clj (set! *warn-on-reflection* true))\n\n;; User file-local compiler flags\n#?(:clj (def ^:dynamic *unchecked-if* false))\n#?(:clj (def ^:dynamic *unchecked-arrays* false))\n\n;; Compiler dynamic vars\n(def ^:dynamic *cljs-ns* 'cljs.user)\n(def ^:dynamic *cljs-file* nil)\n(def ^:dynamic *checked-arrays* false)\n(def ^:dynamic *check-alias-dupes* true)\n(def ^:dynamic *cljs-static-fns* false)\n(def ^:dynamic *fn-invoke-direct* false)\n(def ^:dynamic *cljs-macros-path* \"/cljs/core\")\n(def ^:dynamic *cljs-macros-is-classpath* true)\n(def ^:dynamic *cljs-dep-set* (with-meta #{} {:dep-path []}))\n(def ^:dynamic *analyze-deps* true)\n(def ^:dynamic *load-tests* true)\n(def ^:dynamic *load-macros* true)\n(def ^:dynamic *reload-macros* false)\n(def ^:dynamic *macro-infer* true)\n(def ^:dynamic *passes* nil)\n(def ^:dynamic *file-defs* nil)\n(def ^:dynamic *private-var-access-nowarn* false)\n\n(def constants-ns-sym\n  \"The namespace of the constants table as a symbol.\"\n  'cljs.core.constants)\n\n#?(:clj\n   (def transit-read-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [read-handler     @(ns-resolve ns 'read-handler)\n               read-handler-map @(ns-resolve ns 'read-handler-map)]\n           {:handlers\n             (read-handler-map\n               {\"cljs/js\"    (read-handler (fn [v] (JSValue. v)))\n                \"cljs/regex\" (read-handler (fn [v] (Pattern/compile v)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit-write-opts\n     (try\n       (require '[cognitect.transit])\n       (when-some [ns (find-ns 'cognitect.transit)]\n         (let [write-handler     @(ns-resolve ns 'write-handler)\n               write-handler-map @(ns-resolve ns 'write-handler-map)]\n           {:handlers\n             (write-handler-map\n               {JSValue\n                (write-handler\n                  (fn [_] \"cljs/js\")\n                  (fn [js] (.val ^JSValue js)))\n                Pattern\n                (write-handler\n                  (fn [_] \"cljs/regex\")\n                  (fn [pat] (.pattern ^Pattern pat)))})}))\n       (catch Throwable t\n         nil))))\n\n#?(:clj\n   (def transit\n     (delay\n       (try\n         (require '[cognitect.transit])\n         (when-some [ns (find-ns 'cognitect.transit)]\n           {:writer @(ns-resolve ns 'writer)\n            :reader @(ns-resolve ns 'reader)\n            :write  @(ns-resolve ns 'write)\n            :read   @(ns-resolve ns 'read)})\n         (catch Throwable t\n           nil)))))\n\n;; log compiler activities\n(def ^:dynamic *verbose* false)\n\n(def -cljs-macros-loaded (atom false))\n\n(def ^:dynamic *cljs-warnings*\n  {:preamble-missing true\n   :unprovided true\n   :undeclared-var true\n   :private-var-access true\n   :undeclared-ns true\n   :undeclared-ns-form true\n   :redef true\n   :redef-in-file true\n   :dynamic true\n   :fn-var true\n   :fn-arity true\n   :fn-deprecated true\n   :declared-arglists-mismatch true\n   :protocol-deprecated true\n   :undeclared-protocol-symbol true\n   :invalid-protocol-symbol true\n   :multiple-variadic-overloads true\n   :variadic-max-arity true\n   :overload-arity true\n   :extending-base-js-type true\n   :invoke-ctor true\n   :invalid-arithmetic true\n   :invalid-array-access true\n   :protocol-invalid-method true\n   :protocol-duped-method true\n   :protocol-multiple-impls true\n   :protocol-with-variadic-method true\n   :protocol-with-overwriting-method true\n   :protocol-impl-with-variadic-method true\n   :protocol-impl-recur-with-target true\n   :single-segment-namespace true\n   :munged-namespace true\n   :ns-var-clash true\n   :non-dynamic-earmuffed-var true\n   :extend-type-invalid-method-shape true\n   :unsupported-js-module-type true\n   :unsupported-preprocess-value true\n   :js-shadowed-by-local true\n   :infer-warning false})\n\n(defn unchecked-arrays? []\n  *unchecked-arrays*)\n\n(defn checked-arrays\n  \"Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*.\"\n  []\n  (when (and (not (-> @env/*compiler* :options :advanced))\n             (not *unchecked-arrays*))\n    *checked-arrays*))\n\n(def js-reserved\n  #{\"arguments\" \"abstract\" \"await\" \"boolean\" \"break\" \"byte\" \"case\"\n    \"catch\" \"char\" \"class\" \"const\" \"continue\"\n    \"debugger\" \"default\" \"delete\" \"do\" \"double\"\n    \"else\" \"enum\" \"export\" \"extends\" \"final\"\n    \"finally\" \"float\" \"for\" \"function\" \"goto\" \"if\"\n    \"implements\" \"import\" \"in\" \"instanceof\" \"int\"\n    \"interface\" \"let\" \"long\" \"native\" \"new\"\n    \"package\" \"private\" \"protected\" \"public\"\n    \"return\" \"short\" \"static\" \"super\" \"switch\"\n    \"synchronized\" \"this\" \"throw\" \"throws\"\n    \"transient\" \"try\" \"typeof\" \"var\" \"void\"\n    \"volatile\" \"while\" \"with\" \"yield\" \"methods\"\n    \"null\" \"constructor\"})\n\n(def es5-allowed\n  #{\"default\"})\n\n#?(:clj (def SENTINEL (Object.))\n   :cljs (def SENTINEL (js-obj)))\n\n(defn gets\n  ([m k0 k1]\n    (let [m (get m k0 SENTINEL)]\n      (when-not (identical? m SENTINEL)\n        (get m k1))))\n  ([m k0 k1 k2]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (get m k2))))))\n  ([m k0 k1 k2 k3]\n   (let [m (get m k0 SENTINEL)]\n     (when-not (identical? m SENTINEL)\n       (let [m (get m k1 SENTINEL)]\n         (when-not (identical? m SENTINEL)\n           (let [m (get m k2 SENTINEL)]\n             (when-not (identical? m SENTINEL)\n               (get m k3)))))))))\n\n#?(:cljs\n   (def CLJ_NIL_SYM 'clj-nil))\n\n#?(:cljs\n   (def NUMBER_SYM 'number))\n\n#?(:cljs\n   (def STRING_SYM 'string))\n\n(def BOOLEAN_SYM 'boolean)\n\n#?(:cljs\n   (def JS_STAR_SYM 'js*))\n\n#?(:cljs\n   (def DOT_SYM '.))\n\n#?(:cljs\n   (def NEW_SYM 'new))\n\n#?(:cljs\n   (def CLJS_CORE_SYM 'cljs.core))\n\n#?(:cljs\n   (def CLJS_CORE_MACROS_SYM 'cljs.core$macros))\n\n(def IGNORE_SYM 'ignore)\n\n(def ANY_SYM 'any)\n\n#?(:cljs\n   (defn ^boolean cljs-seq? [x]\n     (implements? ISeq x)))\n\n#?(:cljs\n   (defn ^boolean cljs-map? [x]\n     (implements? IMap x)))\n\n#?(:cljs\n   (defn ^boolean cljs-vector? [x]\n     (implements? IVector x)))\n\n#?(:cljs\n   (defn ^boolean cljs-set? [x]\n     (implements? ISet x)))\n\n#?(:cljs\n   (defn munge-path [ss]\n     (munge (str ss))))\n\n#?(:cljs\n   (defn ns->relpath\n     \"Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.\"\n     ([ns] (ns->relpath ns :cljs))\n     ([ns ext]\n      (str (string/replace (munge-path ns) \\. \\/) \".\" (name ext)))))\n\n#?(:cljs\n   (defn topo-sort\n     ([x get-deps]\n      (topo-sort x 0 (atom (sorted-map)) (memoize get-deps)))\n     ([x depth state memo-get-deps]\n      (let [deps (memo-get-deps x)]\n        (swap! state update-in [depth] (fnil into #{}) deps)\n        (doseq [dep deps]\n          (topo-sort dep (inc depth) state memo-get-deps))\n        (doseq [[<depth _] (subseq @state < depth)]\n          (swap! state update-in [<depth] set/difference deps))\n        (when (= depth 0)\n          (distinct (apply concat (vals @state))))))))\n\n(declare message namespaces)\n\n(defn ast?\n  #?(:cljs {:tag boolean})\n  [x]\n  (and (map? x) (contains? x :op)))\n\n(defmulti error-message (fn [warning-type & _] warning-type))\n\n(defmethod error-message :preamble-missing\n  [warning-type info]\n  (str \"Preamble resource file not found: \" (string/join \" \" (:missing info))))\n\n(defmethod error-message :unprovided\n  [warning-type info]\n  (str \"Required namespace not provided for \" (string/join \" \" (:unprovided info))))\n\n(defmethod error-message :undeclared-var\n  [warning-type info]\n  (str (if (:macro-present? info)\n         \"Can't take value of macro \"\n         \"Use of undeclared Var \")\n    (:prefix info) \"/\" (:suffix info)))\n\n(defmethod error-message :private-var-access\n  [warning-type info]\n  (str \"var: \" (:sym info) \" is not public\"))\n\n(defmethod error-message :undeclared-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :cljs)\n       \", \" (ns->relpath ns-sym :cljc)\n       \", or JavaScript source providing \\\"\" js-provide \"\\\"\"\n    (when (string/includes? (ns->relpath ns-sym) \"_\")\n      \" (Please check that namespaces with dashes use underscores in the ClojureScript file name)\")))\n\n(defmethod error-message :undeclared-macros-ns\n  [warning-type {:keys [ns-sym js-provide] :as info}]\n  (str \"No such macros namespace: \" ns-sym\n       \", could not locate \" (ns->relpath ns-sym :clj)\n       \" or \" (ns->relpath ns-sym :cljc)))\n\n(defmethod error-message :dynamic\n  [warning-type info]\n  (str (:name info) \" not declared ^:dynamic\"))\n\n(defmethod error-message :redef\n  [warning-type info]\n  (str (:sym info) \" already refers to: \" (symbol (str (:ns info)) (str (:sym info)))\n    \" being replaced by: \" (symbol (str (:ns-name info)) (str (:sym info)))))\n\n(defmethod error-message :redef-in-file\n  [warning-type info]\n  (str (:sym info) \" at line \" (:line info) \" is being replaced\"))\n\n(defmethod error-message :fn-var\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" no longer fn, references are stale\"))\n\n(defmethod error-message :fn-arity\n  [warning-type info]\n  (str \"Wrong number of args (\" (:argc info) \") passed to \"\n    (or (:ctor info)\n      (:name info))))\n\n(defmethod error-message :fn-deprecated\n  [warning-type info]\n  (str (-> info :fexpr :info :name) \" is deprecated\"))\n\n(defmethod error-message :declared-arglists-mismatch\n  [warning-type info]\n  (str (symbol (str (:ns-name info)) (str (:sym info)))\n    \" declared arglists \" (:declared info)\n    \" mismatch defined arglists \" (:defined info)))\n\n(defmethod error-message :undeclared-ns-form\n  [warning-type info]\n  (str \"Invalid :refer, \" (:type info) \" \" (:lib info) \"/\" (:sym info) \" does not exist\"))\n\n(defmethod error-message :protocol-deprecated\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" is deprecated\"))\n\n(defmethod error-message :undeclared-protocol-symbol\n  [warning-type info]\n  (str \"Can't resolve protocol symbol \" (:protocol info)))\n\n(defmethod error-message :invalid-protocol-symbol\n  [warning-type info]\n  (str \"Symbol \" (:protocol info) \" is not a protocol\"))\n\n(defmethod error-message :protocol-invalid-method\n  [warning-type info]\n  (if (:no-such-method info)\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" does not declare method called \" (:fname info))\n    (str \"Bad method signature in protocol implementation, \"\n      (:protocol info) \" \" (:fname info) \" does not declare arity \" (:invalid-arity info))))\n\n(defmethod error-message :protocol-duped-method\n  [warning-type info]\n  (str \"Duplicated methods in protocol implementation \" (:protocol info) \" \" (:fname info)))\n\n(defmethod error-message :protocol-multiple-impls\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implemented multiple times\"))\n\n(defmethod error-message :protocol-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" declares method \"\n       (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-with-overwriting-method\n  [warning-type info]\n  (let [overwritten-protocol (-> info :existing :protocol)]\n    (str \"Protocol \" (:protocol info) \" is overwriting \"\n      (if overwritten-protocol \"method\" \"function\")\n      \" \" (:name info)\n      (when overwritten-protocol (str \" of protocol \" (name overwritten-protocol))))))\n\n(defmethod error-message :protocol-impl-with-variadic-method\n  [warning-type info]\n  (str \"Protocol \" (:protocol info) \" implements method \"\n    (:name info) \" with variadic signature (&)\"))\n\n(defmethod error-message :protocol-impl-recur-with-target\n  [warning-type info]\n  (str \"Ignoring target object \\\"\" (pr-str (:form info)) \"\\\" passed in recur to protocol method head\"))\n\n(defmethod error-message :multiple-variadic-overloads\n  [warning-type info]\n  (str (:name info) \": Can't have more than 1 variadic overload\"))\n\n(defmethod error-message :variadic-max-arity\n  [warning-type info]\n  (str (:name info) \": Can't have fixed arity function with more params than variadic function\"))\n\n(defmethod error-message :overload-arity\n  [warning-type info]\n  (str (:name info) \": Can't have 2 overloads with same arity\"))\n\n(defmethod error-message :extending-base-js-type\n  [warning-type info]\n  (str \"Extending an existing JavaScript type - use a different symbol name \"\n       \"instead of \" (:current-symbol info) \" e.g \" (:suggested-symbol info)))\n\n(defmethod error-message :invalid-arithmetic\n  [warning-type info]\n  (str (:js-op info) \", all arguments must be numbers, got \" (:types info) \" instead\"))\n\n(defmethod error-message :invalid-array-access\n  [warning-type {:keys [name types]}]\n  (case name\n    (cljs.core/checked-aget cljs.core/checked-aget')\n    (str \"cljs.core/aget, arguments must be an array followed by numeric indices, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (rest types)))\n        (str \" (consider \"\n          (if (== 2 (count types))\n            \"goog.object/get\"\n            \"goog.object/getValueByKeys\")\n          \" for object access)\")))\n\n    (cljs.core/checked-aset cljs.core/checked-aset')\n    (str \"cljs.core/aset, arguments must be an array, followed by numeric indices, followed by a value, got \" types \" instead\"\n      (when (or (= 'object (first types))\n                (every? #{'string} (butlast (rest types))))\n        \" (consider goog.object/set for object access)\"))))\n\n(defmethod error-message :invoke-ctor\n  [warning-type info]\n  (str \"Cannot invoke type constructor \" (-> info :fexpr :info :name) \" as function \"))\n\n(defmethod error-message :single-segment-namespace\n  [warning-type info]\n  (str (:name info) \" is a single segment namespace\"))\n\n(defmethod error-message :munged-namespace\n  [warning-type {:keys [name] :as info}]\n  (let [munged (->> (string/split (clojure.core/name name) #\"\\.\")\n                 (map #(if (js-reserved %) (str % \"$\") %))\n                 (string/join \".\")\n                 (munge))]\n    (str \"Namespace \" name \" contains a reserved JavaScript keyword,\"\n         \" the corresponding Google Closure namespace will be munged to \" munged)))\n\n(defmethod error-message :ns-var-clash\n  [warning-type {:keys [ns var] :as info}]\n  (str \"Namespace \" ns \" clashes with var \" var))\n\n(defmethod error-message :non-dynamic-earmuffed-var\n  [warning-type {:keys [var] :as info}]\n  (str var \" not declared dynamic and thus is not dynamically rebindable, but its name \"\n    \"suggests otherwise. Please either indicate ^:dynamic \" var \" or change the name\"))\n\n(defmethod error-message :extend-type-invalid-method-shape\n  [warning-type {:keys [protocol method] :as info}]\n  (str \"Bad extend-type method shape for protocol \" protocol \" method \" method\n       \", method arities must be grouped together\"))\n\n(defmethod error-message :unsupported-js-module-type\n  [warning-type {:keys [module-type file] :as info}]\n  (str \"Unsupported JavaScript module type \" module-type \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :unsupported-preprocess-value\n  [warning-type {:keys [preprocess file]}]\n  (str \"Unsupported preprocess value \" preprocess \" for foreign library \"\n       file \".\"))\n\n(defmethod error-message :js-shadowed-by-local\n  [warning-type {:keys [name]}]\n  (str name \" is shadowed by a local\"))\n\n(defmethod error-message :infer-warning\n  [warning-type {:keys [warn-type form type property]}]\n  (case warn-type\n    :target   (str \"Cannot infer target type in expression \" form \"\")\n    :property (str \"Cannot resolve property \" property\n                   \" for inferred type \" type  \" in expression \" form)\n    :object   (str \"Adding extern to Object for property \" property \" due to \"\n                   \"ambiguous expression \" form)))\n\n(defn default-warning-handler [warning-type env extra]\n  (when (warning-type *cljs-warnings*)\n    (when-let [s (error-message warning-type extra)]\n      #?(:clj  (binding [*out* *err*]\n                 (println (message env (str \"WARNING: \" s))))\n         :cljs (binding [*print-fn* *print-err-fn*]\n                 (println (message env (str \"WARNING: \" s))))))))\n\n(def ^:dynamic *cljs-warning-handlers*\n  [default-warning-handler])\n\n#?(:clj\n   (defmacro with-warning-handlers [handlers & body]\n     `(binding [*cljs-warning-handlers* ~handlers]\n        ~@body)))\n\n(defn- repeat-char [c n]\n  (loop [ret c n n]\n    (if (pos? n)\n      (recur (str ret c) (dec n))\n      ret)))\n\n(defn- hex-format [s pad]\n  #?(:clj  (str \"_u\" (format (str \"%0\" pad \"x\") (int (first s))) \"_\")\n     :cljs (let [hex (.toString (.charCodeAt s 0) 16)\n                 len (. hex -length)\n                 hex (if (< len pad)\n                       (str (repeat-char \"0\" (- pad len)) hex)\n                       hex)]\n             (str \"_u\" hex \"_\"))))\n\n(defn gen-constant-id [value]\n  (let [prefix (cond\n                 (keyword? value) \"cst$kw$\"\n                 (symbol? value)  \"cst$sym$\"\n                 :else\n                 (throw\n                   #?(:clj (Exception. (str \"constant type \" (type value) \" not supported\"))\n                      :cljs (js/Error. (str \"constant type \" (type value) \" not supported\")))))\n        name   (if (keyword? value)\n                 (subs (str value) 1)\n                 (str value))\n        name   (if (= \".\" name)\n                 \"_DOT_\"\n                 (-> name\n                     (string/replace \"-\" \"_DASH_\")\n                     (munge)\n                     (string/replace \".\" \"$\")\n                     (string/replace #\"(?i)[^a-z0-9$_]\" #(hex-format % 4))))]\n    (symbol (str prefix name))))\n\n(defn- register-constant!\n  ([val] (register-constant! nil val))\n  ([env val]\n   (swap! env/*compiler*\n     (fn [cenv]\n       (cond->\n         (-> cenv\n           (update-in [::constant-table]\n             (fn [table]\n               (if (get table val)\n                 table\n                 (assoc table val (gen-constant-id val))))))\n         env (update-in [::namespaces (-> env :ns :name) ::constants]\n               (fn [{:keys [seen order] :or {seen #{} order []} :as constants}]\n                 (cond-> constants\n                   (not (contains? seen val))\n                   (assoc\n                     :seen (conj seen val)\n                     :order (conj order val))))))))))\n\n(def default-namespaces '{cljs.core {:name cljs.core}\n                          cljs.user {:name cljs.user}})\n\n;; this exists solely to support read-only namespace access from macros.\n;; External tools should look at the authoritative ::namespaces slot in the\n;; compiler-env atoms/maps they're using already; this value will yield only\n;; `default-namespaces` when accessed outside the scope of a\n;; compilation/analysis call\n(def namespaces\n  #?(:clj\n     (reify clojure.lang.IDeref\n       (deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))\n     :cljs\n     (reify IDeref\n       (-deref [_]\n         (if (some? env/*compiler*)\n           (::namespaces @env/*compiler*)\n           default-namespaces)))))\n\n(defn get-namespace\n  ([key]\n    (get-namespace env/*compiler* key))\n  ([cenv key]\n   (if-some [ns (get-in @cenv [::namespaces key])]\n       ns\n       (when (= 'cljs.user key)\n         {:name 'cljs.user}))))\n\n#?(:clj\n   (defmacro no-warn [& body]\n     (let [no-warnings (zipmap (keys *cljs-warnings*) (repeat false))]\n       `(binding [*cljs-warnings* ~no-warnings]\n          ~@body))))\n\n#?(:clj\n   (defmacro all-warn [& body]\n     (let [all-warnings (zipmap (keys *cljs-warnings*) (repeat true))]\n       `(binding [*cljs-warnings* ~all-warnings]\n          ~@body))))\n\n(defn get-line [x env]\n  (or (-> x meta :line) (:line env)))\n\n(defn get-col [x env]\n  (or (-> x meta :column) (:column env)))\n\n(defn intern-macros\n  \"Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.\"\n  ([ns] (intern-macros ns false))\n  ([ns reload]\n    (when (or (nil? (gets @env/*compiler* ::namespaces ns :macros))\n              reload)\n      (swap! env/*compiler* assoc-in [::namespaces ns :macros]\n        (->> #?(:clj (ns-interns ns) :cljs (ns-interns* ns))\n             (filter (fn [[_ ^Var v]] (.isMacro v)))\n             (map (fn [[k v]]\n                    [k (as-> (meta v) vm\n                         (let [ns (.getName ^Namespace (:ns vm))]\n                           (assoc vm\n                             :ns ns\n                             :name (symbol (str ns) (str k))\n                             :macro true)))]))\n             (into {}))))))\n\n#?(:clj\n   (def load-mutex (Object.)))\n\n#?(:clj\n   (defn load-core []\n     (when (not @-cljs-macros-loaded)\n       (reset! -cljs-macros-loaded true)\n       (if *cljs-macros-is-classpath*\n         (locking load-mutex\n           (load *cljs-macros-path*))\n         (locking load-mutex\n           (load-file *cljs-macros-path*))))\n     (intern-macros 'cljs.core)))\n\n#?(:clj\n   (defmacro with-core-macros\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path]\n          ~@body))))\n\n#?(:clj\n   (defmacro with-core-macros-file\n     [path & body]\n     `(do\n        (when (not= *cljs-macros-path* ~path)\n          (reset! -cljs-macros-loaded false))\n        (binding [*cljs-macros-path* ~path\n                  *cljs-macros-is-classpath* false]\n          ~@body))))\n\n(defn empty-env\n  \"Construct an empty analysis environment. Required to analyze forms.\"\n  []\n  (ensure\n    {:ns (get-namespace *cljs-ns*)\n     :context :statement\n     :locals {}\n     :fn-scope []\n     :js-globals (into {}\n                   (map #(vector % {:op :js-var :name % :ns 'js})\n                     '(alert window document console escape unescape\n                       screen location navigator history location\n                       global process require module exports)))}))\n\n(defn- source-info->error-data\n  [{:keys [file line column]}]\n  {:clojure.error/source file\n   :clojure.error/line   line\n   :clojure.error/column column})\n\n(defn source-info\n  ([env]\n   (when (:line env)\n     (source-info nil env)))\n  ([name env]\n   (cond-> {:file (if (= (-> env :ns :name) 'cljs.core)\n                    \"cljs/core.cljs\"\n                    *cljs-file*)\n            :line (get-line name env)\n            :column (get-col name env)}\n     (:root-source-info env)\n     (merge (select-keys env [:root-source-info])))))\n\n(defn message [env s]\n  (str s\n    (if (:line env)\n      (str \" at line \" (:line env) \" \" *cljs-file*)\n      (when *cljs-file*\n        (str \" in file \" *cljs-file*)))))\n\n(defn warning [warning-type env extra]\n  (doseq [handler *cljs-warning-handlers*]\n    (handler warning-type env extra)))\n\n(defn- accumulating-warning-handler [warn-acc]\n  (fn [warning-type env extra]\n    (when (warning-type *cljs-warnings*)\n      (swap! warn-acc conj [warning-type env extra]))))\n\n(defn- replay-accumulated-warnings [warn-acc]\n  (run! #(apply warning %) @warn-acc))\n\n(defn- error-data\n  ([env phase]\n   (error-data env phase nil))\n  ([env phase symbol]\n   (merge (-> (source-info env) source-info->error-data)\n     {:clojure.error/phase phase}\n     (when symbol\n       {:clojure.error/symbol symbol}))))\n\n(defn- compile-syntax-error\n  [env msg symbol]\n  (ex-info nil (error-data env :compile-syntax-check symbol)\n    #?(:clj (RuntimeException. ^String msg) :cljs (js/Error. msg))))\n\n(defn error\n  ([env msg]\n   (error env msg nil))\n  ([env msg cause]\n   (ex-info (message env msg)\n     (assoc (source-info env) :tag :cljs/analysis-error)\n     cause)))\n\n(defn analysis-error?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (= :cljs/analysis-error (:tag (ex-data ex))))\n\n(defn has-error-data?\n  #?(:cljs {:tag boolean})\n  [ex]\n  (contains? (ex-data ex) :clojure.error/phase))\n\n#?(:clj\n   (defmacro wrapping-errors [env & body]\n     `(try\n        ~@body\n        (catch Throwable err#\n          (cond\n            (has-error-data? err#) (throw err#)\n            (analysis-error? err#) (throw (ex-info nil (error-data ~env :compilation) err#))\n            :else (throw (ex-info nil (error-data ~env :compilation) (error ~env (.getMessage err#) err#))))))))\n\n;; namespaces implicit to the inclusion of cljs.core\n(def implicit-nses '#{goog goog.object goog.string goog.array Math String})\n\n(defn implicit-import?\n  #?(:cljs {:tag boolean})\n  [env prefix suffix]\n  (contains? implicit-nses prefix))\n\n(declare get-expander)\n\n(defn confirm-var-exist-warning [env prefix suffix]\n  (fn [env prefix suffix]\n    (warning :undeclared-var env\n      {:prefix         prefix\n       :suffix         suffix\n       :macro-present? (not (nil? (get-expander (symbol (str prefix) (str suffix)) env)))})))\n\n(defn loaded-js-ns?\n  \"Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.\"\n  #?(:cljs {:tag boolean})\n  [env prefix]\n  (when-not (gets @env/*compiler* ::namespaces prefix)\n    (let [ns (:ns env)]\n      (or (some? (get (:requires ns) prefix))\n          (some? (get (:imports ns) prefix))))))\n\n(defn- internal-js-module-exists?\n  [js-module-index module]\n  ;; we need to check both keys and values of the JS module index, because\n  ;; macroexpansion will be looking for the provided name - António Monteiro\n  (contains?\n    (into #{}\n      (mapcat (fn [[k v]]\n                [k (:name v)]))\n      js-module-index)\n    (str module)))\n\n(def js-module-exists?* (memoize internal-js-module-exists?))\n\n(defn js-module-exists?\n  [module]\n  (js-module-exists?* (get-in @env/*compiler* [:js-module-index]) module))\n\n(defn node-module-dep?\n  #?(:cljs {:tag boolean})\n  [module]\n  #?(:clj (contains?\n            (get-in @env/*compiler* [:node-module-index])\n            (str module))\n     :cljs (try\n             (and (= *target* \"nodejs\")\n                  (boolean (js/require.resolve (str module))))\n             (catch :default _\n               false))))\n\n(defn dep-has-global-exports?\n  [module]\n  (let [global-exports (get-in @env/*compiler* [:js-dependency-index (str module) :global-exports])]\n    (or (contains? global-exports (symbol module))\n        (contains? global-exports (name module)))))\n\n(defn confirm-var-exists\n  ([env prefix suffix]\n   (let [warn (confirm-var-exist-warning env prefix suffix)]\n     (confirm-var-exists env prefix suffix warn)))\n  ([env prefix suffix missing-fn]\n   (let [sufstr     (str suffix)\n         suffix-str (if (and #?(:clj  (not= \"..\" sufstr)\n                                :cljs (not (identical? \"..\" sufstr))) ;; leave cljs.core$macros/.. alone\n                          #?(:clj  (re-find #\"\\.\" sufstr)\n                             :cljs ^boolean (.test #\"\\.\" sufstr)))\n                      (first (string/split sufstr #\"\\.\"))\n                      suffix)\n         suffix     (symbol suffix-str)]\n     (when (and (not (implicit-import? env prefix suffix))\n                (not (loaded-js-ns? env prefix))\n                (not (and (= 'cljs.core prefix) (= 'unquote suffix)))\n                (nil? (gets @env/*compiler* ::namespaces prefix :defs suffix))\n                (not (js-module-exists? prefix)))\n       (missing-fn env prefix suffix)))))\n\n(defn confirm-var-exists-throw []\n  (fn [env prefix suffix]\n    (confirm-var-exists env prefix suffix\n      (fn [env prefix suffix]\n        (throw (error env (str \"Unable to resolve var: \" suffix \" in this context\")))))))\n\n(defn resolve-ns-alias\n  ([env name]\n   (resolve-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:requires (:ns env)) sym not-found))))\n\n(defn resolve-macro-ns-alias\n  ([env name]\n   (resolve-macro-ns-alias env name (symbol name)))\n  ([env name not-found]\n   (let [sym (symbol name)]\n     (get (:require-macros (:ns env)) sym not-found))))\n\n(defn confirm-ns\n  \"Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found.\"\n  [env ns-sym]\n  (when (and (not= 'cljs.core ns-sym)\n             (nil? (get implicit-nses ns-sym))\n             (nil? (get (-> env :ns :requires) ns-sym))\n             ;; something else may have loaded the namespace, i.e. load-file\n             (nil? (gets @env/*compiler* ::namespaces ns-sym))\n             ;; macros may refer to namespaces never explicitly required\n             ;; confirm that the library at least exists\n             #?(:clj (nil? (util/ns->source ns-sym)))\n             (not (js-module-exists? ns-sym)))\n    (warning :undeclared-ns env {:ns-sym ns-sym :js-provide ns-sym})))\n\n(defn core-name?\n  \"Is sym visible from core in the current compilation namespace?\"\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (and (or (some? (gets @env/*compiler* ::namespaces 'cljs.core :defs sym))\n           (if-some [mac (get-expander sym env)]\n             (let [^Namespace ns (-> mac meta :ns)]\n               (= (.getName ns) #?(:clj 'cljs.core :cljs 'cljs.core$macros)))\n             false))\n       (not (contains? (-> env :ns :excludes) sym))))\n\n(defn public-name?\n  \"Is sym public?\"\n  #?(:cljs {:tag boolean})\n  [ns sym]\n  (let [var-ast (or (gets @env/*compiler* ::namespaces ns :defs sym)\n                    #?(:clj  (gets @env/*compiler* ::namespaces ns :macros sym)\n                       :cljs (gets @env/*compiler* ::namespaces (symbol (str (name ns) \"$macros\")) :defs sym)))]\n    (and (some? var-ast)\n         (not (or (:private var-ast)\n                  (:anonymous var-ast))))))\n\n(defn js-tag? [x]\n  (and (symbol? x)\n       (or (= 'js x)\n           (= \"js\" (namespace x)))))\n\n(defn normalize-js-tag [x]\n  ;; if not 'js, assume constructor\n  (if-not (= 'js x)\n    (with-meta 'js\n      {:prefix (conj (->> (string/split (name x) #\"\\.\")\n                       (map symbol) vec)\n                 'prototype)})\n    x))\n\n(defn ->type-set\n  \"Ensures that a type tag is a set.\"\n  [t]\n  (if #?(:clj  (set? t)\n         :cljs (cljs-set? t))\n    t\n    #{t}))\n\n(defn canonicalize-type [t]\n  \"Ensures that a type tag is either nil, a type symbol, or a non-singleton\n  set of type symbols, absorbing clj-nil into seq and all types into any.\"\n  (cond\n    (symbol? t) t\n    (empty? t) nil\n    (== 1 (count t)) (first t)\n    (contains? t 'any) 'any\n    (contains? t 'seq) (let [res (disj t 'clj-nil)]\n                         (if (== 1 (count res))\n                           'seq\n                           res))\n    :else t))\n\n(defn add-types\n  \"Produces a union of types.\"\n  ([] 'any)\n  ([t1] t1)\n  ([t1 t2]\n   (if (or (nil? t1)\n           (nil? t2))\n     'any\n     (-> (set/union (->type-set t1) (->type-set t2))\n       canonicalize-type)))\n  ([t1 t2 & ts]\n   (apply add-types (add-types t1 t2) ts)))\n\n(def alias->type\n  '{object   Object\n    string   String\n    number   Number\n    array    Array\n    function Function\n    boolean  Boolean\n    symbol   Symbol})\n\n(defn has-extern?*\n  ([pre externs]\n   (let [pre (if-some [me (find\n                            (get-in externs '[Window prototype])\n                            (first pre))]\n               (if-some [tag (-> me first meta :tag)]\n                 (into [tag 'prototype] (next pre))\n                 pre)\n               pre)]\n     (has-extern?* pre externs externs)))\n  ([pre externs top]\n   (cond\n     (empty? pre) true\n     :else\n     (let [x  (first pre)\n           me (find externs x)]\n       (cond\n         (not me) false\n         :else\n         (let [[x' externs'] me\n               xmeta (meta x')]\n           (if (and (= 'Function (:tag xmeta)) (:ctor xmeta))\n             (or (has-extern?* (into '[prototype] (next pre)) externs' top)\n                 (has-extern?* (next pre) externs' top))\n             (recur (next pre) externs' top))))))))\n\n(defn has-extern?\n  ([pre]\n    (has-extern? pre (get @env/*compiler* ::externs)))\n  ([pre externs]\n   (or (has-extern?* pre externs)\n       (when (= 1 (count pre))\n         (let [x (first pre)]\n           (or (get-in externs (conj '[Window prototype] x))\n               (get-in externs (conj '[Number] x)))))\n       (-> (last pre) str (string/starts-with? \"cljs$\")))))\n\n(defn js-tag\n  ([pre]\n   (js-tag pre :tag))\n  ([pre tag-type]\n   (js-tag pre tag-type (get @env/*compiler* ::externs)))\n  ([pre tag-type externs]\n   (js-tag pre tag-type externs externs))\n  ([pre tag-type externs top]\n   (when-let [[p externs' :as me] (find externs (first pre))]\n     (let [tag (-> p meta tag-type)]\n       (if (= (count pre) 1)\n         (when tag (symbol \"js\" (str (alias->type tag tag))))\n         (or (js-tag (next pre) tag-type externs' top)\n             (js-tag (into '[prototype] (next pre)) tag-type (get top tag) top)))))))\n\n(defn dotted-symbol? [sym]\n  (let [s (str sym)]\n    #?(:clj  (and (.contains s \".\")\n                  (not (.contains s \"..\")))\n       :cljs (and ^boolean (goog.string/contains s \".\")\n                  (not ^boolean (goog.string/contains s \"..\"))))))\n\n(defn munge-node-lib [name]\n  (str \"node$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                    :cljs \"$$\")))))\n\n(defn munge-global-export [name]\n  (str \"global$module$\" (munge (string/replace (str name) #\"[.\\/]\" #?(:clj \"\\\\$\"\n                                                                      :cljs \"$$\")))))\n\n(defn resolve-alias\n  \"Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original.\"\n  [ns sym]\n  ;; Conditionally alias aget/aset fns to checked variants\n  (if (and (= 'cljs.core ns)\n           ('#{aget aset} sym)\n           (checked-arrays))\n    (get-in '{:warn  {aget checked-aget\n                      aset checked-aset}\n              :error {aget checked-aget'\n                      aset checked-aset'}}\n      [(checked-arrays) sym])\n    sym))\n\n(defn ns->module-type [ns]\n  (cond\n    (js-module-exists? ns) :js\n    (node-module-dep? ns) :node\n    (dep-has-global-exports? ns) :global))\n\n(defmulti resolve* (fn [env sym full-ns current-ns] (ns->module-type full-ns)))\n\n(defmethod resolve* :js\n  [env sym full-ns current-ns]\n  {:name (symbol (str full-ns) (str (name sym)))\n   :op :js-var\n   :ns full-ns})\n\n(defmethod resolve* :node\n  [env sym full-ns current-ns]\n  {:ns current-ns\n   :name (symbol (str current-ns) (str (munge-node-lib full-ns) \".\" (name sym)))\n   :op :js-var\n   :foreign true})\n\n(defmethod resolve* :global\n  [env sym full-ns current-ns]\n  (let [pre (into '[Object] (->> (string/split (name sym) #\"\\.\") (map symbol) vec))]\n    (when-not (has-extern? pre)\n      (swap! env/*compiler* update-in\n        (into [::namespaces current-ns :externs] pre) merge {}))\n    {:ns current-ns\n     :name (symbol (str current-ns) (str (munge-global-export full-ns) \".\" (name sym)))\n     :op :js-var\n     :tag (with-meta 'js {:prefix pre})\n     :foreign true}))\n\n(def ^:private private-var-access-exceptions\n  \"Specially-treated symbols for which we don't trigger :private-var-access warnings.\"\n  '#{cljs.core/checked-aget\n     cljs.core/checked-aset\n     cljs.core/checked-aget'\n     cljs.core/checked-aset'})\n\n(defmethod resolve* :default\n  [env sym full-ns current-ns]\n  (let [sym-ast (gets @env/*compiler* ::namespaces full-ns :defs (symbol (name sym)))\n        sym-name (symbol (str full-ns) (str (name sym)))]\n    (when (and (not= current-ns full-ns)\n               (:private sym-ast)\n               (not *private-var-access-nowarn*)\n               (not (contains? private-var-access-exceptions sym-name)))\n      (warning :private-var-access env\n        {:sym sym-name}))\n    (merge sym-ast\n      {:name sym-name\n       :op :var\n       :ns   full-ns})))\n\n(defn required? [ns env]\n  (or (contains? (set (vals (gets env :ns :requires))) ns)\n      (contains? (set (vals (gets env :ns :uses))) ns)))\n\n(defn invokeable-ns?\n  \"Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function.\"\n  [ns env]\n  (let [ns (resolve-ns-alias env ns)]\n    (and (required? ns env)\n         (or (js-module-exists? ns)\n             (node-module-dep? ns)\n             (dep-has-global-exports? ns)))))\n\n(defn resolve-invokeable-ns [ns current-ns env]\n  (let [ns (resolve-ns-alias env ns)\n        module-type (ns->module-type ns)]\n    (case module-type\n      :js     {:name (symbol\n                       (or (gets @env/*compiler* :js-module-index ns :name)\n                           (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns 'js}\n      :node   {:name (symbol (str current-ns)\n                       (munge-node-lib (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns}\n      :global {:name (symbol (str current-ns)\n                       (munge-global-export (resolve-ns-alias env ns)))\n               :op :js-var\n               :ns current-ns})))\n\n;; core.async calls `macroexpand-1` manually with an ill-formed\n;; :locals map. Normally :locals maps symbols maps, but\n;; core.async adds entries mapping symbols to symbols. We work\n;; around that specific case here. This is called defensively\n;; every time we lookup the :locals map.\n(defn handle-symbol-local [sym lb]\n  (if (symbol? lb)\n    {:name sym}\n    lb))\n\n(defn resolve-var\n  \"Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.\"\n  ([env sym] (resolve-var env sym nil))\n  ([env sym confirm]\n   (let [locals (:locals env)]\n     (if #?(:clj  (= \"js\" (namespace sym))\n            :cljs (identical? \"js\" (namespace sym)))\n       (let [symn (-> sym name symbol)\n             shadowed-by-local (handle-symbol-local symn (get locals symn))]\n         (cond\n           (some? shadowed-by-local)\n           (do (warning :js-shadowed-by-local env {:name sym})\n               (assoc shadowed-by-local :op :local))\n\n           :else\n           (let [pre (->> (string/split (name sym) #\"\\.\") (map symbol) vec)]\n             (when (and (not (has-extern? pre))\n                        ;; ignore exists? usage\n                        (not (-> sym meta ::no-resolve)))\n               (swap! env/*compiler* update-in\n                 (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))\n             (merge\n               {:name sym\n                :op :js-var\n                :ns   'js\n                :tag  (with-meta (or (js-tag pre) (:tag (meta sym)) 'js) {:prefix pre})}\n               (when-let [ret-tag (js-tag pre :ret-tag)]\n                 {:js-fn-var true\n                  :ret-tag ret-tag})))))\n       (let [s  (str sym)\n             lb (handle-symbol-local sym (get locals sym))\n             current-ns (-> env :ns :name)]\n         (cond\n           (some? lb) (assoc lb :op :local)\n\n           (some? (namespace sym))\n           (let [ns      (namespace sym)\n                 ns      (if #?(:clj  (= \"clojure.core\" ns)\n                                :cljs (identical? \"clojure.core\" ns))\n                           \"cljs.core\"\n                           ns)\n                 full-ns (resolve-ns-alias env ns\n                           (or (and (js-module-exists? ns)\n                                    (gets @env/*compiler* :js-module-index ns :name))\n                             (symbol ns)))]\n             (when (some? confirm)\n               (when (not= current-ns full-ns)\n                 (confirm-ns env full-ns))\n               (confirm env full-ns (symbol (name sym))))\n             (resolve* env sym full-ns current-ns))\n\n           (dotted-symbol? sym)\n           (let [idx    (.indexOf s \".\")\n                 prefix (symbol (subs s 0 idx))\n                 suffix (subs s (inc idx))]\n             (if-some [lb (handle-symbol-local prefix (get locals prefix))]\n               {:op :local\n                :name (symbol (str (:name lb) \".\" suffix))}\n               (if-some [full-ns (gets @env/*compiler* ::namespaces current-ns :imports prefix)]\n                 {:op :js-var\n                  :name (symbol (str full-ns) suffix)}\n                 (if-some [info (gets @env/*compiler* ::namespaces current-ns :defs prefix)]\n                   (merge info\n                     {:name (symbol (str current-ns) (str sym))\n                      :op :var\n                      :ns current-ns})\n                   (merge (gets @env/*compiler* ::namespaces prefix :defs (symbol suffix))\n                     {:name (if (= \"\" prefix) (symbol suffix) (symbol (str prefix) suffix))\n                      :op :var\n                      :ns prefix})))))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :uses sym))\n           (let [full-ns (gets @env/*compiler* ::namespaces current-ns :uses sym)]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :renames sym))\n           (let [qualified-symbol (gets @env/*compiler* ::namespaces current-ns :renames sym)\n                 full-ns (symbol (namespace qualified-symbol))\n                 sym     (symbol (name qualified-symbol))]\n             (resolve* env sym full-ns current-ns))\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :imports sym))\n           (recur env (gets @env/*compiler* ::namespaces current-ns :imports sym) confirm)\n\n           (some? (gets @env/*compiler* ::namespaces current-ns :defs sym))\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))\n\n           (core-name? env sym)\n           (do\n             (when (some? confirm)\n               (confirm env 'cljs.core sym))\n             (merge (gets @env/*compiler* ::namespaces 'cljs.core :defs sym)\n               {:name (symbol \"cljs.core\" (str sym))\n                :op :var\n                :ns 'cljs.core}))\n\n           (invokeable-ns? s env)\n           (resolve-invokeable-ns s current-ns env)\n\n           :else\n           (do\n             (when (some? confirm)\n               (confirm env current-ns sym))\n             (merge (gets @env/*compiler* ::namespaces current-ns :defs sym)\n               {:name (symbol (str current-ns) (str sym))\n                :op :var\n                :ns current-ns}))))))))\n\n(defn resolve-existing-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists.\"\n  [env sym]\n  (if-not (-> sym meta ::no-resolve)\n    (resolve-var env sym confirm-var-exists)\n    (resolve-var env sym)))\n\n(defn confirm-bindings\n  \"Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars.\"\n  [env names]\n  (doseq [name names]\n    (let [env (assoc env :ns (get-namespace *cljs-ns*))\n          ev (resolve-existing-var env name)]\n      (when (and ev (not (-> ev :dynamic)))\n        (warning :dynamic env {:ev ev :name (:name ev)})))))\n\n(defn resolve-macro-var\n  \"Given env, an analysis environment, and sym, a symbol, resolve a macro.\"\n  [env sym]\n  (let [ns (-> env :ns :name)\n        namespaces (get @env/*compiler* ::namespaces)]\n    (cond\n      (some? (namespace sym))\n      (let [ns (namespace sym)\n            ns (if (= \"clojure.core\" ns) \"cljs.core\" ns)\n            full-ns (resolve-macro-ns-alias env ns)\n            #?@(:cljs [full-ns (if-not (string/ends-with? (str full-ns) \"$macros\")\n                                 (symbol (str full-ns \"$macros\"))\n                                 full-ns)])]\n        #?(:clj (get-in namespaces [full-ns :macros (symbol (name sym))])\n           :cljs (get-in namespaces [full-ns :defs (symbol (name sym))])))\n\n      (some? (get-in namespaces [ns :use-macros sym]))\n      (let [full-ns (get-in namespaces [ns :use-macros sym])]\n        (get-in namespaces [full-ns :macros sym]))\n\n      (some? (get-in namespaces [ns :rename-macros sym]))\n      (let [qualified-symbol (get-in namespaces [ns :rename-macros sym])\n            full-ns (symbol (namespace qualified-symbol))\n            sym     (symbol (name qualified-symbol))]\n        (get-in namespaces [full-ns :macros sym]))\n\n      :else\n      (let [ns (cond\n                 (some? (get-in namespaces [ns :macros sym])) ns\n                 (core-name? env sym) #?(:clj  'cljs.core\n                                         :cljs CLJS_CORE_MACROS_SYM))]\n        (when (some? ns)\n          #?(:clj  (get-in namespaces [ns :macros sym])\n             :cljs (get-in namespaces [ns :defs sym])))))))\n\n(declare analyze analyze-symbol analyze-seq)\n\n;; Note: This is the set of parse multimethod dispatch values,\n;; along with '&, and differs from cljs.core/special-symbol?\n(def specials '#{if def fn* do let* loop* letfn* throw try recur new set!\n                 ns deftype* defrecord* . js* & quote case* var ns*})\n\n(def ^:dynamic *recur-frames* nil)\n(def ^:dynamic *loop-lets* ())\n(def ^:dynamic *allow-redef* false)\n(def ^:dynamic *allow-ns* true)\n\n#?(:clj\n   (defmacro disallowing-recur [& body]\n     `(binding [*recur-frames* (cons nil *recur-frames*)] ~@body)))\n\n#?(:clj\n   (defmacro allowing-redef [& body]\n     `(binding [*allow-redef* true] ~@body)))\n\n#?(:clj\n   (defmacro disallowing-ns* [& body]\n     `(binding [*allow-ns* false] ~@body)))\n\n;; TODO: move this logic out - David\n(defn analyze-keyword\n  [env sym]\n  (register-constant! env sym)\n  {:op :const :val sym :env env :form sym :tag 'cljs.core/Keyword})\n\n(defn get-tag [e]\n  (if-some [tag (-> e :form meta :tag)]\n    tag\n    (if-some [tag (-> e :tag)]\n      tag\n      (-> e :info :tag))))\n\n(defn find-matching-method [f params]\n  ;; if local fn, need to look in :info\n  (let [methods (or (:methods f) (-> f :info :methods))\n        c       (count params)]\n    (some\n      (fn [m]\n        (and (or (== (:fixed-arity m) c)\n                 (:variadic? m))\n             m))\n      methods)))\n\n(defn type?\n  #?(:cljs {:tag boolean})\n  [env t]\n  ;; don't use resolve-existing-var to avoid warnings\n  (when (and (some? t) (symbol? t))\n    (let [var (resolve-var env t)]\n      (if-some [type (:type var)]\n        type\n          (if-some [type (-> var :info :type)]\n            type\n              (if-some [proto (:protocol-symbol var)]\n                proto\n                (get '#{cljs.core/PersistentHashMap cljs.core/List} t)))))))\n\n(declare infer-tag)\n\n(def NOT_NATIVE '#{clj not-native})\n\n(def BOOLEAN_OR_SEQ '#{boolean seq})\n\n(defn unwrap-quote [{:keys [op] :as expr}]\n  (if #?(:clj (= op :quote)\n         :cljs (keyword-identical? op :quote))\n    (:expr expr)\n    expr))\n\n(defn infer-if [env e]\n  (let [{:keys [op form]} (unwrap-quote (:test e))\n        then-tag (infer-tag env (:then e))]\n    (if (and #?(:clj (= op :const)\n                :cljs (keyword-identical? op :const))\n             (not (nil? form))\n             (not (false? form)))\n      then-tag\n      (let [else-tag (infer-tag env (:else e))]\n        (cond\n          (or #?(:clj (= then-tag else-tag)\n                 :cljs (symbol-identical? then-tag else-tag))\n              #?(:clj (= else-tag IGNORE_SYM)\n                 :cljs (symbol-identical? else-tag IGNORE_SYM))) then-tag\n          #?(:clj (= then-tag IGNORE_SYM)\n             :cljs (symbol-identical? then-tag IGNORE_SYM)) else-tag\n          ;; TODO: temporary until we move not-native -> clj - David\n          (and (or (some? (get NOT_NATIVE then-tag)) (type? env then-tag))\n               (or (some? (get NOT_NATIVE else-tag)) (type? env else-tag)))\n          'clj\n          :else\n          (if (and (some? (get BOOLEAN_OR_SEQ then-tag))\n                   (some? (get BOOLEAN_OR_SEQ else-tag)))\n            'seq\n            (let [then-tag (if #?(:clj (set? then-tag)\n                                  :cljs (cljs-set? then-tag))\n                             then-tag #{then-tag})\n                  else-tag (if #?(:clj (set? else-tag)\n                                  :cljs (cljs-set? else-tag))\n                             else-tag #{else-tag})]\n              (into then-tag else-tag))))))))\n\n(defn infer-invoke [env {f :fn :keys [args] :as e}]\n  (let [me (assoc (find-matching-method f args) :op :fn-method)]\n    (if-some [ret-tag (infer-tag env me)]\n      ret-tag\n      (let [{:keys [info]} f]\n        (if-some [ret-tag (if (or (true? (:fn-var info))\n                                  (true? (:js-fn-var info)))\n                            (:ret-tag info)\n                            (when (= 'js (:ns info)) 'js))]\n          ret-tag\n          ANY_SYM)))))\n\n(defn infer-tag\n  \"Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node\"\n  [env e]\n    (if-some [tag (get-tag e)]\n      tag\n      (case (:op e)\n        :recur    IGNORE_SYM\n        :throw    IGNORE_SYM\n        :let      (infer-tag env (:body e))\n        :loop     (infer-tag env (:body e))\n        :do       (infer-tag env (:ret e))\n        :fn-method (infer-tag env (:body e))\n        :def      (infer-tag env (:init e))\n        :invoke   (infer-invoke env e)\n        :if       (infer-if env e)\n        :const    (case (:form e)\n                    true BOOLEAN_SYM\n                    false BOOLEAN_SYM\n                    ANY_SYM)\n        :quote    (infer-tag env (:expr e))\n        (:var :local :js-var :binding)\n                  (if-some [init (:init e)]\n                    (infer-tag env init)\n                    (infer-tag env (:info e)))\n        (:host-field :host-call)      ANY_SYM\n        :js       ANY_SYM\n        nil)))\n\n(defmulti parse (fn [op & rest] op))\n\n(defn var-meta\n  ([var]\n    (var-meta var nil))\n  ([var expr-env]\n   (let [sym (:name var)\n         ks [:ns :doc :file :line :column]\n         m (merge\n             (let [user-meta (:meta var)\n                   uks (keys user-meta)]\n               (zipmap uks\n                 (map #(list 'quote (get user-meta %)) uks)))\n             (assoc (zipmap ks (map #(list 'quote (get var %)) ks))\n               :name `(quote ~(symbol (name (:name var))))\n               :test `(when ~sym (.-cljs$lang$test ~sym))\n               :arglists (let [arglists (:arglists var)\n                               arglists' (if (= 'quote (first arglists))\n                                           (second arglists)\n                                           arglists)]\n                           (list 'quote\n                             (doall (map with-meta arglists'\n                                      (:arglists-meta var)))))))]\n     (if expr-env\n       (analyze expr-env m)\n       m))))\n\n(defn var-ast\n  [env sym]\n  ;; we need to dissoc locals for the `(let [x 1] (def x x))` case, because we\n  ;; want the var's AST and `resolve-var` will check locals first. - António Monteiro\n  (binding [*private-var-access-nowarn* true]\n    (let [env      (dissoc env :locals)\n          var      (resolve-var env sym (confirm-var-exists-throw))\n          expr-env (assoc env :context :expr)]\n      (when-some [var-ns (:ns var)]\n        {:var  (analyze expr-env sym)\n         :sym  (analyze expr-env `(quote ~(symbol (name var-ns) (name (:name var)))))\n         :meta (var-meta var expr-env)}))))\n\n(defmethod parse 'var\n  [op env [_ sym :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to var\")))\n  (when-not (symbol? sym)\n    (throw (error env \"Argument to var must be symbol\")))\n  (merge\n    {:env env\n     :op :the-var\n     :children [:var :sym :meta]\n     :form form}\n    (var-ast env sym)))\n\n(def ^:private predicate->tag\n  '{\n    ;; Base values\n    cljs.core/nil?            clj-nil\n    cljs.core/undefined?      clj-nil\n    cljs.core/false?          boolean\n    cljs.core/true?           boolean\n    cljs.core/zero?           number\n    cljs.core/infinite?       number\n\n    ;; Base types\n    cljs.core/boolean?        boolean\n    cljs.core/string?         string\n    cljs.core/char?           string\n    cljs.core/number?         number\n    cljs.core/integer?        number\n    cljs.core/float?          number\n    cljs.core/double?         number\n    cljs.core/array?          array\n    cljs.core/seq?            seq\n\n    ;; JavaScript types\n    cljs.core/regexp?         js/RegExp\n\n    ;; Types\n    cljs.core/keyword?        cljs.core/Keyword\n    cljs.core/var?            cljs.core/Var\n    cljs.core/symbol?         cljs.core/Symbol\n    cljs.core/volatile?       cljs.core/Volatile\n    cljs.core/delay?          cljs.core/Delay\n    cljs.core/reduced?        cljs.core/Reduced\n\n    ;; Subtypes\n    cljs.core/simple-keyword?    cljs.core/Keyword\n    cljs.core/qualified-keyword? cljs.core/Keyword\n    cljs.core/simple-symbol?     cljs.core/Symbol\n    cljs.core/qualified-symbol?  cljs.core/Symbol\n\n    ;;; Note: For non-marker protocol entries below, we\n    ;;; omit predicates that are based on satisfies? because\n    ;;; we cannot safely apply the fast-path optimization\n    ;;; which is enabled when the protocol type is inferred.\n    ;;; If adding a non-marker entry here, also add a test to\n    ;;; cljs.extend-to-native-test/test-extend-to-protocols.\n\n    ;; Protocols\n    cljs.core/map-entry?      cljs.core/IMapEntry\n    cljs.core/uuid?           cljs.core/IUUID\n    cljs.core/tagged-literal? cljs.core/ITaggedLiteral\n    cljs.core/inst?           cljs.core/Inst\n    cljs.core/sequential?     cljs.core/ISequential\n    cljs.core/list?           cljs.core/IList\n    cljs.core/record?         cljs.core/IRecord\n    cljs.core/chunked-seq?    cljs.core/IChunkedSeq\n\n    ;; Composites\n    cljs.core/seqable?        #{cljs.core/ISeqable array string}\n    cljs.core/ident?          #{cljs.core/Keyword cljs.core/Symbol}\n\n    ;; Composite subtypes\n    cljs.core/simple-ident?    #{cljs.core/Keyword cljs.core/Symbol}\n    cljs.core/qualified-ident? #{cljs.core/Keyword cljs.core/Symbol}\n    })\n\n(defn- simple-predicate-induced-tag\n  \"Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x).\"\n  [env test]\n  (when (and (list? test)\n             (== 2 (count test))\n             (every? symbol? test))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when-let [tag (predicate->tag (:name analyzed-fn))]\n          (let [sym (last test)]\n            (when (and (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(declare specials)\n\n(defn- type-check-induced-tag\n  \"Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x).\"\n  [env test]\n  (when (and (list? test)\n             (== 3 (count test))\n             (every? symbol? test)\n             (not (contains? specials (first test))))\n    (let [analyzed-fn (no-warn (analyze (assoc env :context :expr) (first test)))]\n      (when (= :var (:op analyzed-fn))\n        (when ('#{cljs.core/instance? cljs.core/implements?} (:name analyzed-fn))\n          (let [analyzed-type (no-warn (analyze (assoc env :context :expr) (second test)))\n                tag (:name analyzed-type)\n                sym (last test)]\n            (when (and (= :var (:op analyzed-type))\n                       (nil? (namespace sym))\n                       (get-in env [:locals sym]))\n              [sym tag])))))))\n\n(defn- truth-induced-tag\n  \"Refine a tag to exclude clj-nil if the test is a local.\"\n  [env test]\n  (when (and (symbol? test)\n             (nil? (namespace test))\n             (get-in env [:locals test]))\n    (let [analyzed-symbol (no-warn (analyze (assoc env :context :expr) test))]\n      (when-let [tag (:tag analyzed-symbol)]\n        (when (and (set? tag)\n                   (contains? tag 'clj-nil))\n          [test (canonicalize-type (disj tag 'clj-nil))])))))\n\n(defn- set-test-induced-tags\n  \"Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type.\"\n  [env test]\n  (let [[local tag] (or (simple-predicate-induced-tag env test)\n                        (type-check-induced-tag env test)\n                        (truth-induced-tag env test))]\n    (cond-> env\n      local (assoc-in [:locals local :tag] tag))))\n\n(defmethod parse 'if\n  [op env [_ test then else :as form] name _]\n  (when (< (count form) 3)\n    (throw (compile-syntax-error env \"Too few arguments to if\" 'if)))\n  (when (> (count form) 4)\n    (throw (compile-syntax-error env \"Too many arguments to if\" 'if)))\n  (let [test-expr (disallowing-recur (analyze (assoc env :context :expr) test))\n        then-expr (allowing-redef (analyze (set-test-induced-tags env test) then))\n        else-expr (allowing-redef (analyze env else))]\n    {:env env :op :if :form form\n     :test test-expr :then then-expr :else else-expr\n     :unchecked *unchecked-if*\n     :children [:test :then :else]}))\n\n(defmethod parse 'case*\n  [op env [_ sym tests thens default :as form] name _]\n  (assert (symbol? sym) \"case* must switch on symbol\")\n  (assert (every? vector? tests) \"case* tests must be grouped in vectors\")\n  (let [expr-env (assoc env :context :expr)\n        v        (disallowing-recur (analyze expr-env sym))\n        tests    (mapv #(mapv (fn [t] (analyze expr-env t)) %) tests)\n        thens    (mapv #(analyze env %) thens)\n        nodes    (mapv (fn [tests then]\n                         {:op :case-node\n                          ;synthetic node, no :form\n                          :env env\n                          :tests (mapv (fn [test]\n                                         {:op :case-test\n                                          :form (:form test)\n                                          :env expr-env\n                                          :test test\n                                          :children [:test]})\n                                       tests)\n                          :then {:op :case-then\n                                 :form (:form then)\n                                 :env env\n                                 :then then\n                                 :children [:then]}\n                          :children [:tests :then]})\n                       tests\n                       thens)\n        default  (analyze env default)]\n    (assert (every? (fn [t]\n                      (or\n                        (-> t :info :const)\n                        (and (= :const (:op t))\n                             ((some-fn number? string? char?) (:form t)))))\n              (apply concat tests))\n      \"case* tests must be numbers, strings, or constants\")\n    {:env env :op :case :form form\n     :test v :nodes nodes :default default\n     :children [:test :nodes :default]}))\n\n(defmethod parse 'throw\n  [op env [_ throw-form :as form] name _]\n  (cond\n    (= 1 (count form))\n    (throw\n      (error env \"Too few arguments to throw, throw expects a single Error instance\"))\n    (< 2 (count form))\n    (throw\n      (error env \"Too many arguments to throw, throw expects a single Error instance\")))\n  (let [throw-expr (disallowing-recur (analyze (assoc env :context :expr) throw-form))]\n    {:env env :op :throw :form form\n     :exception throw-expr\n     :children [:exception]}))\n\n(defmethod parse 'try\n  [op env [_ & body :as form] name _]\n  (let [catchenv (update-in env [:context] #(if (= :expr %) :return %))\n        catch? (every-pred seq? #(= (first %) 'catch))\n        default? (every-pred catch? #(= (second %) :default))\n        finally? (every-pred seq? #(= (first %) 'finally))\n\n        {:keys [body cblocks dblock fblock]}\n        (loop [parser {:state :start :forms body\n                       :body [] :cblocks [] :dblock nil :fblock nil}]\n          (if (seq? (:forms parser))\n            (let [[form & forms*] (:forms parser)\n                  parser* (assoc parser :forms forms*)]\n              (case (:state parser)\n                :start (cond\n                         (catch? form) (recur (assoc parser :state :catches))\n                         (finally? form) (recur (assoc parser :state :finally))\n                         :else (recur (update-in parser* [:body] conj form)))\n                :catches (cond\n                           (default? form) (recur (assoc parser* :dblock form :state :finally))\n                           (catch? form) (recur (update-in parser* [:cblocks] conj form))\n                           (finally? form) (recur (assoc parser :state :finally))\n                           :else (throw (error env \"Invalid try form\")))\n                :finally (recur (assoc parser* :fblock form :state :done))\n                :done (throw (error env \"Unexpected form after finally\"))))\n            parser))\n\n        finally (when (seq fblock)\n                  (-> (disallowing-recur (analyze (assoc env :context :statement) `(do ~@(rest fblock))))\n                      (assoc :body? true)))\n        e (when (or (seq cblocks) dblock) (gensym \"e\"))\n        default (if-let [[_ _ name & cb] dblock]\n                  `(cljs.core/let [~name ~e] ~@cb)\n                  `(throw ~e))\n        cblock (if (seq cblocks)\n                 `(cljs.core/cond\n                   ~@(mapcat\n                      (fn [[_ type name & cb]]\n                        (when name (assert (not (namespace name)) \"Can't qualify symbol in catch\"))\n                        `[(cljs.core/instance? ~type ~e)\n                          (cljs.core/let [~name ~e] ~@cb)])\n                      cblocks)\n                   :else ~default)\n                 default)\n        locals (:locals catchenv)\n        locals (if e\n                 (assoc locals e\n                        {:name e\n                         :line (get-line e env)\n                         :column (get-col e env)})\n                 locals)\n        catch (when cblock\n                (disallowing-recur (analyze (assoc catchenv :locals locals) cblock)))\n        try (disallowing-recur (analyze (if (or e finally) catchenv env) `(do ~@body)))]\n\n    {:env env :op :try :form form\n     :body (assoc try :body? true)\n     :finally finally\n     :name e\n     :catch catch\n     :children (vec\n                 (concat [:body]\n                         (when catch\n                           [:catch])\n                         (when finally\n                           [:finally])))}))\n\n(defn valid-proto [x]\n  (when (symbol? x) x))\n\n(defn elide-env [env ast opts]\n  (dissoc ast :env))\n\n(defn replace-env-pass [new-env]\n  (fn [env ast opts]\n    (assoc ast :env new-env)))\n\n(defn ast-children [ast]\n  (mapcat (fn [c]\n            (let [g (get ast c)]\n              (cond\n                (vector? g) g\n                g [g])))\n          (:children ast)))\n\n(defn constant-value?\n  [{:keys [op] :as ast}]\n  (or (#{:quote :const} op)\n      (and (#{:map :set :vector} op)\n           (every? constant-value? (ast-children ast)))))\n\n(defn const-expr->constant-value [{:keys [op] :as e}]\n  (case op\n    :quote  (const-expr->constant-value (:expr e))\n    :const  (:val e)\n    :map    (zipmap (map const-expr->constant-value (:keys e))\n                    (map const-expr->constant-value (:vals e)))\n    :set    (into #{} (map const-expr->constant-value (:items e)))\n    :vector (into [] (map const-expr->constant-value (:items e)))))\n\n(defn- earmuffed? [sym]\n  (let [s (name sym)]\n    (and (> (count s) 2)\n         (string/starts-with? s \"*\")\n         (string/ends-with? s \"*\"))))\n\n(defn- core-ns? [ns-sym]\n  (let [s (name ns-sym)]\n    (and (not= 'cljs.user ns-sym)\n         (or (string/starts-with? s \"cljs.\")\n             (string/starts-with? s \"clojure.\")))))\n\n(defmethod parse 'def\n  [op env form _ _]\n  (when (> (count form) 4)\n    (throw (error env \"Too many arguments to def\")))\n  (let [pfn (fn\n              ([_ sym] {:sym sym})\n              ([_ sym init] {:sym sym :init init})\n              ([_ sym doc init] {:sym sym :doc doc :init init}))\n        args (apply pfn form)\n        sym (:sym args)\n        const? (-> sym meta :const)\n        sym-meta (meta sym)\n        tag (-> sym meta :tag)\n        protocol (-> sym meta :protocol valid-proto)\n        dynamic (-> sym meta :dynamic)\n        ns-name (-> env :ns :name)\n        locals (:locals env)\n        clash-ns (symbol (str ns-name \".\" sym))\n        sym-ns   (namespace sym)\n        sym      (cond\n                   (and sym-ns (not #?(:clj  (= (symbol sym-ns) ns-name)\n                                       :cljs (symbol-identical? (symbol sym-ns) ns-name))))\n                   (throw (error env (str \"Can't def ns-qualified name in namespace \" sym-ns)))\n\n                   (some? sym-ns)\n                   (symbol (name sym))\n\n                   :else sym)]\n    (when (some? (get-in @env/*compiler* [::namespaces clash-ns]))\n      (warning :ns-var-clash env\n        {:ns (symbol (str ns-name \".\" sym))\n         :var (symbol (str ns-name) (str sym))}))\n    (when (some? (:const (resolve-var (dissoc env :locals) sym)))\n      (throw (error env \"Can't redefine a constant\")))\n    (when-some [doc (:doc args)]\n      (when-not (string? doc)\n        (throw (error env \"Too many arguments to def\"))))\n    (when (and (not dynamic)\n               (earmuffed? sym)\n               (not (core-ns? ns-name)))\n      (warning :non-dynamic-earmuffed-var env\n        {:var (str sym)}))\n    (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n      (when (and (not *allow-redef*)\n                 (not (:declared v))\n                 (not (:declared sym-meta))\n                 *file-defs*\n                 (get @*file-defs* sym))\n        (warning :redef-in-file env {:sym sym :line (:line v)}))\n      (when (and (:declared v)\n                 (:arglists v)\n                 (not= (:arglists v) (:arglists sym-meta)))\n        (warning :declared-arglists-mismatch env {:ns-name  ns-name :sym sym\n                                                  :declared (second (:arglists v))\n                                                  :defined  (second (:arglists sym-meta))})))\n    (let [env (if (or (and (not= ns-name 'cljs.core)\n                           (core-name? env sym))\n                      (some? (get-in @env/*compiler* [::namespaces ns-name :uses sym])))\n                (let [ev (resolve-existing-var (dissoc env :locals)\n                           ;; ::no-resolve true is to suppress \"can't take value\n                           ;; of macro warning\" when sym resolves to a macro\n                           (with-meta sym {::no-resolve true}))\n                      conj-to-set (fnil conj #{})]\n                  (when (public-name? (:ns ev) sym)\n                    (warning :redef env {:sym sym :ns (:ns ev) :ns-name ns-name}))\n                  (swap! env/*compiler* update-in [::namespaces ns-name :excludes]\n                     conj-to-set sym)\n                  (update-in env [:ns :excludes] conj-to-set sym))\n                env)\n          var-name (:name (resolve-var (dissoc env :locals) sym))\n          init-expr (when (contains? args :init)\n                      (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n                        (merge\n                          {:name var-name}\n                          sym-meta\n                          (when (true? dynamic) {:dynamic true})\n                          (source-info var-name env)))\n                      (disallowing-recur\n                        (disallowing-ns*\n                          (analyze (assoc env :context :expr) (:init args) sym))))\n          fn-var? (and (some? init-expr) (= (:op init-expr) :fn))\n          tag (cond\n                fn-var? (or (:ret-tag init-expr) tag (:inferred-ret-tag init-expr))\n                tag tag\n                dynamic ANY_SYM\n                :else (:tag init-expr))\n          export-as (when-let [export-val (-> sym meta :export)]\n                      (if (= true export-val) var-name export-val))\n          doc (or (:doc args) (-> sym meta :doc))]\n      (when-some [v (get-in @env/*compiler* [::namespaces ns-name :defs sym])]\n        (when (and (not (-> sym meta :declared))\n                   (and (true? (:fn-var v)) (not fn-var?)))\n          (warning :fn-var env {:ns-name ns-name :sym sym})))\n\n      ;; declare must not replace any analyzer data of an already def'd sym\n      (when (or (nil? (get-in @env/*compiler* [::namespaces ns-name :defs sym]))\n                (not (:declared sym-meta)))\n        (when *file-defs*\n          (swap! *file-defs* conj sym))\n\n        (swap! env/*compiler* assoc-in [::namespaces ns-name :defs sym]\n          (merge\n            {:name var-name}\n            ;; remove actual test metadata, as it includes non-valid EDN and\n            ;; cannot be present in analysis cached to disk - David\n            (cond-> sym-meta\n              (:test sym-meta) (assoc :test true))\n            {:meta (-> sym-meta\n                       (dissoc :test)\n                       (update-in [:file]\n                         (fn [f]\n                           (if (= (-> env :ns :name) 'cljs.core)\n                             \"cljs/core.cljs\"\n                             f))))}\n            (when doc {:doc doc})\n            (when const?\n              (let [const-expr\n                    (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n                      (analyze env (:init args)))]\n                (when (constant-value? const-expr)\n                  {:const-expr const-expr})))\n            (when (true? dynamic) {:dynamic true})\n            (source-info var-name env)\n            ;; the protocol a protocol fn belongs to\n            (when protocol\n              {:protocol protocol})\n            ;; symbol for reified protocol\n            (when-let [protocol-symbol (-> sym meta :protocol-symbol)]\n              {:protocol-symbol protocol-symbol\n               :info (-> protocol-symbol meta :protocol-info)\n               :impls #{}})\n            (when fn-var?\n              (let [params (map #(vec (map :name (:params %))) (:methods init-expr))]\n                (merge\n                  {:fn-var (not (:macro sym-meta))\n                   ;; protocol implementation context\n                   :protocol-impl (:protocol-impl init-expr)\n                   ;; inline protocol implementation context\n                   :protocol-inline (:protocol-inline init-expr)}\n                  (if-some [top-fn-meta (:top-fn sym-meta)]\n                    top-fn-meta\n                    {:variadic? (:variadic? init-expr)\n                     :max-fixed-arity (:max-fixed-arity init-expr)\n                     :method-params params\n                     :arglists (:arglists sym-meta)\n                     :arglists-meta (doall (map meta (:arglists sym-meta)))}))))\n            (when (and (:declared sym-meta)\n                       (:arglists sym-meta))\n              {:declared true\n               :fn-var true\n               :method-params (second (:arglists sym-meta))})\n            (if (and fn-var? (some? tag))\n              {:ret-tag tag}\n              (when tag {:tag tag})))))\n      (merge\n        {:env env\n         :op :def\n         :form form\n         :ns ns-name\n         :name var-name\n         :var (assoc\n                (analyze\n                  (-> env (dissoc :locals)\n                    (assoc :context :expr)\n                    (assoc :def-var true))\n                  sym)\n                :op :var)\n         :doc doc\n         :jsdoc (:jsdoc sym-meta)}\n        (when (true? (:def-emits-var env))\n          {:var-ast (var-ast env sym)})\n        (when-some [test (:test sym-meta)]\n          {:test (analyze (assoc env :context :expr) test)})\n        (when (some? tag)\n          (if fn-var?\n            {:ret-tag tag}\n            {:tag tag}))\n        (when (true? dynamic) {:dynamic true})\n        (when (some? export-as) {:export export-as})\n        (if (some? init-expr)\n          {:init init-expr\n           :children [:var :init]}\n          {:children [:var]})))))\n\n(defn analyze-fn-method-param [env]\n  (fn [[locals params] [arg-id name]]\n    (when (namespace name)\n      (throw (error env (str \"Can't use qualified name as parameter: \" name))))\n    (let [line   (get-line name env)\n          column (get-col name env)\n          nmeta  (meta name)\n          tag    (:tag nmeta)\n          shadow (when (some? locals)\n                   (handle-symbol-local name (locals name)))\n          env    (merge (select-keys env [:context])\n                   {:line line :column column})\n          param  {:op :binding\n                  :name name\n                  :line line\n                  :column column\n                  :tag tag\n                  :shadow shadow\n                  :local :arg\n                  :arg-id arg-id\n                  ;; Give the fn params the same shape\n                  ;; as a :var, so it gets routed\n                  ;; correctly in the compiler\n                  :env env\n                  :info {:name name :shadow shadow}\n                  :binding-form? true}]\n     [(assoc locals name param) (conj params param)])))\n\n(defn analyze-fn-method-body [env form recur-frames]\n  (binding [*recur-frames* recur-frames]\n    (analyze env form)))\n\n(defn- analyze-fn-method [env locals form type analyze-body?]\n  (let [param-names     (first form)\n        variadic        (boolean (some '#{&} param-names))\n        param-names     (vec (remove '#{&} param-names))\n        body            (next form)\n        step            (analyze-fn-method-param env)\n        step-init       [locals []]\n        [locals params] (reduce step step-init (map-indexed vector param-names))\n        params'         (if (true? variadic)\n                          (butlast params)\n                          params)\n        fixed-arity     (count params')\n        recur-frame     {:protocol-impl (:protocol-impl env)\n                         :params        params\n                         :flag          (atom nil)\n                         :tags          (atom [])}\n        recur-frames    (cons recur-frame *recur-frames*)\n        body-env        (assoc env :context :return :locals locals)\n        body-form       `(do ~@body)\n        expr            (when analyze-body?\n                          (analyze-fn-method-body body-env body-form recur-frames))\n        recurs          @(:flag recur-frame)]\n    (merge\n      {:env env\n       :op :fn-method\n       :variadic? variadic\n       :params params\n       :fixed-arity fixed-arity\n       :type type\n       :form form\n       :recurs recurs}\n      (if (some? expr)\n        {:body (assoc expr :body? true)\n         :children [:params :body]}\n        {:children [:params]}))))\n\n(declare analyze-wrap-meta)\n\n(defn fn-name-var [env locals name]\n  (when (some? name)\n    (let [ns       (-> env :ns :name)\n          shadow   (handle-symbol-local name (get locals name))\n          shadow   (when (nil? shadow)\n                     (get-in env [:js-globals name]))\n          fn-scope (:fn-scope env)\n          name-var {:name name\n                    :op :binding\n                    :local :fn\n                    :info {:fn-self-name true\n                           :fn-scope fn-scope\n                           :ns ns\n                           :shadow shadow}}\n          tag      (-> name meta :tag)\n          ret-tag  (when (some? tag)\n                     {:ret-tag tag})]\n      (merge name-var ret-tag))))\n\n(defn analyze-fn-methods-pass2* [menv locals type meths]\n  (mapv #(analyze-fn-method menv locals % type true) meths))\n\n(defn analyze-fn-methods-pass2 [menv locals type meths]\n  (analyze-fn-methods-pass2* menv locals type meths))\n\n(defmethod parse 'fn*\n  [op env [_ & args :as form] name _]\n  (let [named-fn?    (symbol? (first args))\n        [name meths] (if named-fn?\n                         [(first args) (next args)]\n                         [name (seq args)])\n        ;; turn (fn [] ...) into (fn ([]...))\n        meths        (if (vector? (first meths))\n                       (list meths)\n                       meths)\n        locals       (:locals env)\n        name-var     (fn-name-var env locals name)\n        env          (if (some? name)\n                       (update-in env [:fn-scope] conj name-var)\n                       env)\n        locals       (if (and (some? locals)\n                              named-fn?)\n                       (assoc locals name name-var)\n                       locals)\n        form-meta    (meta form)\n        type         (::type form-meta)\n        proto-impl   (::protocol-impl form-meta)\n        proto-inline (::protocol-inline form-meta)\n        menv         (-> env\n                         (cond->\n                           (> (count meths) 1)\n                           (assoc :context :expr))\n                         ;; clear loop flag since method bodies won't be in a loop at first\n                         ;; only tracking this to keep track of locals we need to capture\n                         (dissoc :in-loop)\n                         (merge {:protocol-impl proto-impl\n                                 :protocol-inline proto-inline}))\n        methods      (map #(disallowing-ns* (analyze-fn-method menv locals % type (nil? name))) meths)\n        mfa          (transduce (map :fixed-arity) max 0 methods)\n        variadic     (boolean (some :variadic? methods))\n        locals       (if named-fn?\n                       (update-in locals [name] assoc\n                         ;; TODO: can we simplify? - David\n                         :fn-var true\n                         :variadic? variadic\n                         :max-fixed-arity mfa\n                         :method-params (map :params methods))\n                       locals)\n        methods      (if (some? name)\n                       ;; a second pass with knowledge of our function-ness/arity\n                       ;; lets us optimize self calls\n                       (disallowing-ns* (analyze-fn-methods-pass2 menv locals type meths))\n                       (vec methods))\n        form         (vary-meta form dissoc ::protocol-impl ::protocol-inline ::type)\n        js-doc       (when (true? variadic)\n                       \"@param {...*} var_args\")\n        children     (if (some? name-var)\n                       [:local :methods]\n                       [:methods])\n        inferred-ret-tag (let [inferred-tags (map (partial infer-tag env) (map :body methods))]\n                           (when (apply = inferred-tags)\n                             (first inferred-tags)))\n        ast   (merge {:op :fn\n                      :env env\n                      :form form\n                      :name name-var\n                      :methods methods\n                      :variadic? variadic\n                      :tag 'function\n                      :inferred-ret-tag inferred-ret-tag\n                      :recur-frames *recur-frames*\n                      :in-loop (:in-loop env)\n                      :loop-lets *loop-lets*\n                      :jsdoc [js-doc]\n                      :max-fixed-arity mfa\n                      :protocol-impl proto-impl\n                      :protocol-inline proto-inline\n                      :children children}\n                     (when (some? name-var)\n                       {:local name-var}))]\n    (let [variadic-methods (into []\n                             (comp (filter :variadic?) (take 1))\n                             methods)\n          variadic-params  (if (pos? (count variadic-methods))\n                             (count (:params (nth variadic-methods 0)))\n                             0)\n          param-counts     (into [] (map (comp count :params)) methods)]\n      (when (< 1 (count variadic-methods))\n        (warning :multiple-variadic-overloads env {:name name-var}))\n      (when (not (or (zero? variadic-params) (== variadic-params (+ 1 mfa))))\n        (warning :variadic-max-arity env {:name name-var}))\n      (when (not= (distinct param-counts) param-counts)\n        (warning :overload-arity env {:name name-var})))\n    (analyze-wrap-meta ast)))\n\n(defmethod parse 'letfn*\n  [op env [_ bindings & exprs :as form] name _]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error env \"bindings must be vector of even number of elements\")))\n  (let [n->fexpr (into {} (map (juxt first second) (partition 2 bindings)))\n        names    (keys n->fexpr)\n        context  (:context env)\n        ;; first pass to collect information for recursive references\n        [meth-env bes]\n        (reduce (fn [[{:keys [locals] :as env} bes] n]\n                  (let [ret-tag (-> n meta :tag)\n                        fexpr (no-warn (analyze env (n->fexpr n)))\n                        be (cond->\n                             {:name n\n                              :op :binding\n                              :fn-var true\n                              :line (get-line n env)\n                              :column (get-col n env)\n                              :local :letfn\n                              :shadow (handle-symbol-local n (locals n))\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr))}\n                             ret-tag (assoc :ret-tag ret-tag))]\n                    [(assoc-in env [:locals n] be)\n                     (conj bes be)]))\n                [env []] names)\n        meth-env (assoc meth-env :context :expr)\n        ;; the real pass\n        [meth-env bes]\n        (reduce (fn [[meth-env bes] {:keys [name shadow] :as be}]\n                  (let [env (assoc-in meth-env [:locals name] shadow)\n                        fexpr (analyze env (n->fexpr name))\n                        be' (assoc be\n                              :init fexpr\n                              :variadic? (:variadic? fexpr)\n                              :max-fixed-arity (:max-fixed-arity fexpr)\n                              :method-params (map :params (:methods fexpr)))]\n                    [(assoc-in env [:locals name] be')\n                     (conj bes be')]))\n          [meth-env []] bes)\n        expr (-> (analyze (assoc meth-env :context (if (= :expr context) :return context)) `(do ~@exprs))\n                 (assoc :body? true))]\n    {:env env :op :letfn :bindings bes :body expr :form form\n     :children [:bindings :body]}))\n\n(defn analyze-do-statements* [env exprs]\n  (mapv #(analyze (assoc env :context :statement) %) (butlast exprs)))\n\n(defn analyze-do-statements [env exprs]\n  (disallowing-recur (analyze-do-statements* env exprs)))\n\n(defmethod parse 'do\n  [op env [_ & exprs :as form] _ _]\n  (let [statements (analyze-do-statements env exprs)]\n    (if (<= (count exprs) 1)\n      (let [ret      (analyze env (first exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements :ret ret\n         :children children})\n      (let [ret-env  (if (= :statement (:context env))\n                       (assoc env :context :statement)\n                       (assoc env :context :return))\n            ret      (analyze ret-env (last exprs))\n            children [:statements :ret]]\n        {:op :do\n         :env env\n         :form form\n         :statements statements\n         :ret ret\n         :children children}))))\n\n(defn analyze-let-binding-init [env init loop-lets]\n  (binding [*loop-lets* loop-lets]\n    (analyze env init)))\n\n(defn get-let-tag [name init-expr]\n  (if-some [tag (-> name meta :tag)]\n      tag\n        (if-some [tag (-> init-expr :tag)]\n          tag\n          (-> init-expr :info :tag))))\n\n(defn analyze-let-bindings* [encl-env bindings op]\n  (loop [bes []\n         env (assoc encl-env :context :expr)\n         bindings (seq (partition 2 bindings))]\n\n      (if-some [[name init] (first bindings)]\n        (let []\n          (when (or (some? (namespace name))\n                  #?(:clj  (.contains (str name) \".\")\n                     :cljs ^boolean (goog.string/contains (str name) \".\")))\n            (throw (error encl-env (str \"Invalid local name: \" name))))\n          (let [init-expr (analyze-let-binding-init env init (cons {:params bes} *loop-lets*))\n                line (get-line name env)\n                col (get-col name env)\n                shadow (handle-symbol-local name (get-in env [:locals name]))\n                be {:name name\n                    :line line\n                    :column col\n                    :init init-expr\n                    :tag (get-let-tag name init-expr)\n                    :local op\n                    :shadow shadow\n                    ;; Give let* bindings same shape as var so\n                    ;; they get routed correctly in the compiler\n                    :op :binding\n                    :env {:line line :column col}\n                    :info {:name name\n                           :shadow shadow}\n                    :binding-form? true}\n                be (if (= :fn (:op init-expr))\n                     ;; TODO: can we simplify - David\n                     (merge be\n                       {:fn-var true\n                        ;; copy over the :fn-method information we need for invoke type inference\n                        :methods (into [] (map #(select-keys % [:tag :fixed-arity :variadic?]) (:methods init-expr)))\n                        :variadic? (:variadic? init-expr)\n                        :max-fixed-arity (:max-fixed-arity init-expr)\n                        :method-params (map :params (:methods init-expr))})\n                     be)]\n            (recur (conj bes be)\n              (assoc-in env [:locals name] be)\n              (next bindings))))\n        [bes env])))\n\n(defn analyze-let-bindings [encl-env bindings op]\n  (disallowing-recur (analyze-let-bindings* encl-env bindings op)))\n\n(defn analyze-let-body* [env context exprs]\n  (analyze (assoc env :context (if (= :expr context) :return context)) `(do ~@exprs)))\n\n(defn analyze-let-body [env context exprs recur-frames loop-lets]\n  (binding [*recur-frames* recur-frames\n            *loop-lets* loop-lets]\n    (analyze-let-body* env context exprs)))\n\n(defn analyze-let\n  [encl-env [_ bindings & exprs :as form] is-loop widened-tags]\n  (when-not (and (vector? bindings) (even? (count bindings)))\n    (throw (error encl-env \"bindings must be vector of even number of elements\")))\n  (let [context      (:context encl-env)\n        op           (if (true? is-loop) :loop :let)\n        bindings     (if widened-tags\n                       (vec (mapcat\n                              (fn [[name init] widened-tag]\n                                [(vary-meta name assoc :tag widened-tag) init])\n                              (partition 2 bindings)\n                              widened-tags))\n                       bindings)\n        [bes env]    (-> encl-env\n                         (cond->\n                           (true? is-loop) (assoc :in-loop true))\n                         (analyze-let-bindings bindings op))\n        recur-frame  (when (true? is-loop)\n                       {:params bes\n                        :flag (atom nil)\n                        :tags (atom (mapv :tag bes))})\n        recur-frames (if recur-frame\n                       (cons recur-frame *recur-frames*)\n                       *recur-frames*)\n        loop-lets    (cond\n                       (true? is-loop) *loop-lets*\n                       (some? *loop-lets*) (cons {:params bes} *loop-lets*))\n        ;; Accumulate warnings for deferred replay iff there's a possibility of re-analyzing\n        warn-acc     (when (and is-loop\n                                (not widened-tags))\n                       (atom []))\n        expr         (if warn-acc\n                       (with-warning-handlers [(accumulating-warning-handler warn-acc)]\n                         (analyze-let-body env context exprs recur-frames loop-lets))\n                       (analyze-let-body env context exprs recur-frames loop-lets))\n        children     [:bindings :body]\n        nil->any     (fnil identity 'any)]\n    (if (and is-loop\n             (not widened-tags)\n             (not= (mapv nil->any @(:tags recur-frame))\n                   (mapv (comp nil->any :tag) bes)))\n      (recur encl-env form is-loop @(:tags recur-frame))\n      (do\n        (when warn-acc\n          (replay-accumulated-warnings warn-acc))\n        {:op       op\n         :env      encl-env\n         :bindings bes\n         :body     (assoc expr :body? true)\n         :form     form\n         :children children}))))\n\n(defmethod parse 'let*\n  [op encl-env form _ _]\n  (analyze-let encl-env form false nil))\n\n(defmethod parse 'loop*\n  [op encl-env form _ _]\n  (analyze-let encl-env form true nil))\n\n(defmethod parse 'recur\n  [op env [_ & exprs :as form] _ _]\n  (let [context (:context env)\n        frame (first *recur-frames*)\n        ;; Add dummy implicit target object if recuring to proto impl method head\n        add-implicit-target-object? (and (:protocol-impl frame)\n                                         (= (count exprs) (dec (count (:params frame)))))\n        exprs (cond->> exprs add-implicit-target-object? (cons nil))\n        exprs (disallowing-recur (vec (map #(analyze (assoc env :context :expr) %) exprs)))]\n    (when-not frame\n      (throw (error env \"Can't recur here\")))\n    (when-not (= (count exprs) (count (:params frame)))\n      (throw (error env (str \"recur argument count mismatch, expected: \"\n                          (count (:params frame)) \" args, got: \" (count exprs)))))\n    (when (and (:protocol-impl frame)\n               (not add-implicit-target-object?))\n      (warning :protocol-impl-recur-with-target env {:form (:form (first exprs))}))\n    (reset! (:flag frame) true)\n    (swap! (:tags frame) (fn [tags]\n                           (mapv (fn [tag expr]\n                                   ;; Widen by adding the type of the recur expression, except when recurring with a\n                                   ;; loop local: Since its final widened type is unknown, conservatively assume 'any.\n                                   (if (= :loop (:local expr))\n                                     'any\n                                     (add-types tag (:tag expr))))\n                             tags exprs)))\n    (assoc {:env env :op :recur :form form}\n      :frame frame\n      :exprs exprs\n      :children [:exprs])))\n\n(defn analyze-const\n  [env form]\n  (let [;; register constants\n        {:keys [tag]} (analyze (assoc env :quoted? true) form)]\n    {:op       :const\n     :env      env\n     :literal? true\n     :val      form\n     :tag      tag\n     :form     form}))\n\n(defmethod parse 'quote\n  [_ env [_ x :as form] _ _]\n  (when (not= 2 (count form))\n    (throw (error env \"Wrong number of args to quote\")))\n  (let [expr (analyze-const env x)]\n    {:op :quote\n     :expr expr\n     :env env\n     :form form\n     :tag (:tag expr)\n     :children [:expr]}))\n\n(defmethod parse 'new\n  [_ env [_ ctor & args :as form] _ _]\n  (disallowing-recur\n   (let [enve (assoc env :context :expr)\n         ctorexpr (analyze enve ctor)\n         ctor-var (when (#{:var :local :js-var} (:op ctorexpr))\n                    (resolve-existing-var env ctor))\n         record-args\n         (when (and (:record ctor-var) (not (-> ctor meta :internal-ctor)))\n           (repeat 3 (analyze enve nil)))\n         argexprs (into (vec (map #(analyze enve %) args)) record-args)\n         known-num-fields (:num-fields ctor-var)\n         argc (count args)]\n     (when (and (not (-> ctor meta :internal-ctor))\n                (some? known-num-fields) (not= known-num-fields argc))\n       (warning :fn-arity env {:argc argc :ctor ctor}))\n     {:env env :op :new :form form :class ctorexpr :args argexprs\n      :children [:class :args]\n      :tag (let [name (-> ctorexpr :info :name)]\n             (or ('{js/Object object\n                    js/String string\n                    js/Array  array\n                    js/Number number\n                    js/Function function\n                    js/Boolean boolean} name)\n                 name))})))\n\n(defmethod parse 'set!\n  [_ env [_ target val alt :as form] _ _]\n  (let [[target val] (if alt\n                       ;; (set! o -prop val)\n                       [`(. ~target ~val) alt]\n                       [target val])]\n    (disallowing-recur\n      (binding [*private-var-access-nowarn* true]\n        (let [enve  (assoc env :context :expr)\n              texpr (cond\n                      (symbol? target)\n                      (do\n                        (cond\n                          (and (= target '*unchecked-if*)   ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-if* val)\n\n                          (and (= target '*unchecked-arrays*) ;; TODO: proper resolve\n                               (or (true? val) (false? val)))\n                          (set! *unchecked-arrays* val)\n\n                          (and (= target '*warn-on-infer*)\n                               (or (true? val) (false? val)))\n                          (set! *cljs-warnings* (assoc *cljs-warnings* :infer-warning val)))\n                        (when (some? (:const (resolve-var (dissoc env :locals) target)))\n                          (throw (error env \"Can't set! a constant\")))\n                        (let [local (handle-symbol-local target (-> env :locals target))]\n                          (when-not (or (nil? local)\n                                        (and (:field local)\n                                             (or (:mutable local)\n                                                 (:unsynchronized-mutable local)\n                                                 (:volatile-mutable local))))\n                            (throw (error env \"Can't set! local var or non-mutable field\"))))\n                        (analyze-symbol enve target))\n\n                      :else\n                      (when (seq? target)\n                        (let [texpr (analyze-seq enve target nil)]\n                          (when (:field texpr)\n                            texpr))))\n              vexpr (analyze enve val)]\n          ;; as top level fns are decomposed for Closure cross-module code motion, we need to\n          ;; restore their :methods information\n          (when (seq? target)\n            (let [sym  (some-> target second)\n                  meta (meta sym)]\n              (when-let [info (and (= :fn (:op vexpr)) (:top-fn meta))]\n                (swap! env/*compiler* update-in\n                  [::namespaces (-> env :ns :name) :defs sym :methods]\n                  (fnil conj [])\n                  ;; just use original fn meta, as the fn method is already desugared\n                  ;; only get tag from analysis\n                  (merge\n                    (select-keys info [:fixed-arity :variadic?])\n                    (select-keys (-> vexpr :methods first) [:tag]))))))\n          (when-not texpr\n            (throw (error env \"set! target must be a field or a symbol naming a var\")))\n          (cond\n            (and (not (:def-emits-var env))                 ;; non-REPL context\n                 (some? ('#{*unchecked-if* *unchecked-arrays* *warn-on-infer*} target)))\n            {:env env :op :no-op}\n\n            :else\n            {:env env :op :set! :form form :target texpr :val vexpr\n             :children [:target :val]}))))))\n\n#?(:clj (declare analyze-file))\n\n#?(:clj\n   (defn locate-src\n     \"Given a namespace return the corresponding ClojureScript (.cljs or .cljc)\n     resource on the classpath or file from the root of the build.\"\n     [ns]\n     (or (util/ns->source ns)\n       ;; Find sources available in inputs given to cljs.closure/build - Juho Teperi\n       (some (fn [source]\n               (if (= ns (:ns source))\n                 (:source-file source)))\n             (:sources @env/*compiler*))\n       ;; Find sources in directory given to cljs.compiler/compile-root - Juho Teperi\n       (let [rootp (when-let [root (:root @env/*compiler*)]\n                     (.getPath ^File root))\n             cljsf (io/file rootp (ns->relpath ns :cljs))\n             cljcf (io/file rootp (ns->relpath ns :cljc))]\n         (if (and (.exists cljsf) (.isFile cljsf))\n           cljsf\n           (if (and (.exists cljcf) (.isFile cljcf))\n             cljcf))))))\n\n(defn foreign-dep?\n  #?(:cljs {:tag boolean})\n  [dep]\n  (let [js-index (:js-dependency-index @env/*compiler*)]\n    (if-some [[_ {:keys [foreign]}] (find js-index (name dep))]\n      foreign\n      false)))\n\n(defn analyze-deps\n  \"Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.\"\n  ([lib deps env]\n   (analyze-deps lib deps env\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([lib deps env opts]\n   (let [compiler @env/*compiler*]\n     (binding [*cljs-dep-set* (vary-meta (conj *cljs-dep-set* lib) update-in [:dep-path] conj lib)]\n       (assert (every? #(not (contains? *cljs-dep-set* %)) deps)\n         (str \"Circular dependency detected, \"\n           (apply str\n             (interpose \" -> \"\n               (conj (-> *cljs-dep-set* meta :dep-path)\n                 (some *cljs-dep-set* deps))))))\n       (doseq [dep deps]\n         (when-not (or (some? (get-in compiler [::namespaces dep :defs]))\n                       (node-module-dep? dep)\n                       (js-module-exists? (name dep))\n                       #?(:clj (deps/find-classpath-lib dep)))\n           (if (contains? (:js-dependency-index compiler) (name dep))\n             (let [dep-name (name dep)]\n               (when (string/starts-with? dep-name \"goog.\")\n                 #?(:clj (let [js-lib (get-in compiler [:js-dependency-index dep-name])\n                               ns (externs/analyze-goog-file (:file js-lib) (symbol dep-name))]\n                           (swap! env/*compiler* update-in [::namespaces dep] merge ns)))))\n             #?(:clj (if-some [src (locate-src dep)]\n                       (analyze-file src opts)\n                       (throw\n                         (error env\n                           (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)}))))\n                :cljs (throw\n                        (error env\n                          (error-message :undeclared-ns {:ns-sym dep :js-provide (name dep)})))))))))))\n\n(defn missing-use? [lib sym cenv]\n  (let [js-lib (get-in cenv [:js-dependency-index (name lib)])]\n    (and (= (get-in cenv [::namespaces lib :defs sym] ::not-found) ::not-found)\n         (not (= (get js-lib :group) :goog))\n         (not (get js-lib :closure-lib))\n         (not (node-module-dep? lib))\n         (not (dep-has-global-exports? lib)))))\n\n(defn missing-rename? [sym cenv]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))]\n    (missing-use? lib sym cenv)))\n\n(defn missing-use-macro? [lib sym]\n  ;; guard against string requires\n  (when (symbol? lib)\n    (let [the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n      (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym))))))\n\n(defn missing-rename-macro? [sym]\n  (let [lib (symbol (namespace sym))\n        sym (symbol (name sym))\n        the-ns #?(:clj (find-ns lib) :cljs (find-macros-ns lib))]\n    (or (nil? the-ns) (nil? (.findInternedVar ^clojure.lang.Namespace the-ns sym)))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-uses\n  [uses env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use? lib sym cenv)) uses))))\n\n;; returns (s/map-of symbol? qualified-symbol?)\n(defn missing-renames [renames env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[_ qualified-sym]] (missing-rename? qualified-sym cenv)) renames))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn missing-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (missing-use-macro? lib sym)) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-use-macros [use-macros env]\n  (let [cenv @env/*compiler*]\n    (into {} (filter (fn [[sym lib]] (not (missing-use-macro? lib sym))) use-macros))))\n\n;; returns (s/map-of symbol? symbol?)\n(defn inferred-rename-macros [rename-macros env]\n  (into {} (filter (fn [[_ qualified-sym]] (not (missing-rename-macro? qualified-sym))) rename-macros)))\n\n(defn check-uses [uses env]\n  (let [cenv @env/*compiler*]\n    (doseq [[sym lib] uses]\n      (when (missing-use? lib sym cenv)\n        (throw\n          (error env\n            (error-message :undeclared-ns-form {:type \"var\" :lib lib :sym sym})))))))\n\n(defn check-use-macros\n  ([use-macros env]\n    (check-use-macros use-macros nil env))\n  ([use-macros missing-uses env]\n   (let [cenv @env/*compiler*]\n     (doseq [[sym lib] use-macros]\n       (when (missing-use-macro? lib sym)\n         (throw\n           (error env\n             (error-message :undeclared-ns-form {:type \"macro\" :lib lib :sym sym})))))\n     (check-uses (missing-use-macros missing-uses env) env)\n     (inferred-use-macros missing-uses env))))\n\n(defn check-use-macros-inferring-missing\n  [{:keys [name uses use-macros] :as ast} env]\n  (let [missing-uses        (when (and *analyze-deps* (seq uses))\n                              (missing-uses uses env))\n        maybe-macros        (apply dissoc uses (keys missing-uses))\n        remove-missing-uses #(apply dissoc % (keys missing-uses))\n        ast' (-> ast\n               (update-in [:use-macros]\n                 #(-> %\n                   (merge (check-use-macros use-macros missing-uses env))\n                   (merge (inferred-use-macros maybe-macros env))))\n               (update-in [:uses] remove-missing-uses))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :use-macros] merge (:use-macros ast'))\n        (update-in [::namespaces name :uses] remove-missing-uses)))\n    ast'))\n\n(defn check-rename-macros-inferring-missing\n  [{:keys [name renames] :as ast} env]\n  (let [missing-renames        (when (and *analyze-deps* (seq renames))\n                                 (missing-renames renames env))\n        maybe-macros           (apply dissoc renames (keys missing-renames))\n        missing-rename-macros  (inferred-rename-macros missing-renames env)\n        remove-missing-renames #(apply dissoc % (keys missing-renames))\n        ast' (-> ast\n               (update-in [:rename-macros]\n                 #(-> %\n                   (merge missing-rename-macros)\n                   (merge (inferred-rename-macros maybe-macros env))))\n               (update-in [:renames] remove-missing-renames))]\n    (swap! env/*compiler*\n      #(-> %\n        (update-in [::namespaces name :rename-macros] merge (:rename-macros ast'))\n        (update-in [::namespaces name :renames] remove-missing-renames)))\n    ast'))\n\n(defn parse-ns-error-msg [spec msg]\n  (str msg \"; offending spec: \" (pr-str spec)))\n\n(defn basic-validate-ns-spec [env macros? spec]\n  (when-not (or (symbol? spec) (string? spec) (sequential? spec))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns & options] and lib.ns specs supported in :require / :require-macros\"))))\n  (when (sequential? spec)\n    (when-not (or (symbol? (first spec)) (string? (first spec)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Library name must be specified as a symbol in :require / :require-macros\"))))\n    (when-not (odd? (count spec))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as alias, :refer (names) and :rename {from to} options supported in :require\"))))\n    (when-not (every? #{:as :refer :rename} (map first (partition 2 (next spec))))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only :as, :refer and :rename options supported in :require / :require-macros\"))))\n    (when-not (let [fs (frequencies (next spec))]\n                (and (<= (fs :as 0) 1)\n                     (<= (fs :refer 0) 1)))\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Each of :as and :refer options may only be specified once in :require / :require-macros\"))))))\n\n(defn parse-ns-excludes [env args]\n  (reduce\n    (fn [s [k & filters]]\n      (if (= k :refer-clojure)\n        (do\n          (when (seq (:excludes s))\n            (throw (error env \"Only one :refer-clojure form is allowed per namespace definition\")))\n          (let [valid-kws #{:exclude :rename}\n                xs\n                (loop [fs (seq filters)\n                       ret {:excludes #{}\n                            :renames {}}\n                       err (not (even? (count filters)))]\n                  (cond\n                    (true? err)\n                    (throw\n                      (error env \"Only [:refer-clojure :exclude (names)] and optionally `:rename {from to}` specs supported\"))\n\n                    (some? fs)\n                    (let [kw (first fs)]\n                      (if (valid-kws kw)\n                        (let [refs (second fs)]\n                          (cond\n                            (not (or (and (= kw :exclude) (sequential? refs) (every? symbol? refs))\n                                     (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs))))\n                            (recur fs ret true)\n\n                            (= kw :exclude)\n                            (recur (nnext fs) (update-in ret [:excludes] into refs) false)\n\n                            (= kw :rename)\n                            (recur (nnext fs) (update-in ret [:renames] merge refs) false)))\n                        (recur fs ret true)))\n\n                    :else ret))]\n            (merge-with into s xs)))\n        s))\n    {:excludes #{}\n     :renames {}} args))\n\n(defn use->require [env [lib & filters :as spec]]\n  (when-not (and (symbol? lib) (odd? (count spec)))\n    (throw\n      (error env\n        (parse-ns-error-msg spec\n          \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\"))))\n  (loop [fs (seq filters) ret [lib] err false]\n    (cond\n      (true? err)\n      (throw\n        (error env\n          (parse-ns-error-msg spec\n            \"Only [lib.ns :only (names)] and optionally `:rename {from to}` specs supported in :use / :use-macros\")))\n\n      (some? fs)\n      (let [kw (first fs)\n            only? (= kw :only)]\n        (if (or only? (= kw :rename))\n          (if (some? (some #{(if only? :refer kw)} ret))\n            (throw\n              (error env\n                (parse-ns-error-msg spec\n                  \"Each of :only and :rename options may only be specified once in :use / :use-macros\")))\n            (let [refs (second fs)]\n              (if-not (or (and only? (sequential? refs) (every? symbol? refs))\n                          (and (= kw :rename) (map? refs) (every? #(every? symbol? %) refs)))\n                (recur fs ret true)\n                (recur (nnext fs) (into ret [(if only? :refer kw) refs]) false))))\n          (recur fs ret true )))\n\n      :else (if (some? (some #{:refer} ret))\n              ret\n              (recur fs ret true)))))\n\n(defn parse-require-spec [env macros? deps aliases spec]\n  (if (or (symbol? spec) (string? spec))\n    (recur env macros? deps aliases [spec])\n    (do\n      (basic-validate-ns-spec env macros? spec)\n      (let [[lib & opts] spec\n            ;; We need to load JS modules by the name that has been created by the\n            ;; Google Closure compiler, e.g. module$resources$libs$calculator.\n            ;; This means that we need to create an alias from the module name\n            ;; given with :provides to the new name.\n            [lib js-module-provides] (if-some [js-module-name (gets @env/*compiler* :js-module-index (str lib) :name)]\n                                       [(symbol js-module-name) lib]\n                                       [lib nil])\n            {alias :as referred :refer renamed :rename\n             :or {alias (if (string? lib)\n                          (symbol (munge lib))\n                          lib)}}\n            (apply hash-map opts)\n            referred-without-renamed (seq (remove (set (keys renamed)) referred))\n            [rk uk renk] (if macros? [:require-macros :use-macros :rename-macros] [:require :use :rename])]\n        (when-not (or (symbol? alias) (nil? alias))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":as must be followed by a symbol in :require / :require-macros\"))))\n        (when (some? alias)\n          (let [alias-type (if macros? :macros :fns)\n                lib'       ((alias-type @aliases) alias)]\n            (when (and (some? lib') (not= lib lib'))\n              (throw (error env (parse-ns-error-msg spec \":as alias must be unique\"))))\n            (swap! aliases\n              update-in [alias-type]\n              conj [alias lib] (when js-module-provides [js-module-provides lib]))))\n        (when-not (or (and (sequential? referred)\n                           (every? symbol? referred))\n                      (nil? referred))\n          (throw\n            (error env\n              (parse-ns-error-msg spec\n                \":refer must be followed by a sequence of symbols in :require / :require-macros\"))))\n        (when-not macros?\n          (swap! deps conj lib))\n        (merge\n          (when (some? alias)\n            {rk (merge {alias lib} {lib lib}\n                  (when js-module-provides {js-module-provides lib}))})\n          (when (some? referred-without-renamed)\n            {uk (apply hash-map (interleave referred-without-renamed (repeat lib)))})\n          (when (some? renamed)\n            {renk (reduce (fn [m [original renamed]]\n                            (when-not (some #{original} referred)\n                              (throw (error env\n                                       (str \"Renamed symbol \" original \" not referred\"))))\n                            (assoc m renamed (symbol (str lib) (str original))))\n                    {} renamed)}))))))\n\n(defn parse-import-spec [env deps spec]\n  (when-not (or (and (sequential? spec)\n                     (every? symbol? spec))\n                (and (symbol? spec) (nil? (namespace spec))))\n    (throw (error env (parse-ns-error-msg spec \"Only lib.ns.Ctor or [lib.ns Ctor*] spec supported in :import\"))))\n  (let [import-map (if (sequential? spec)\n                     (->> (rest spec)\n                       (map #(vector % (symbol (str (first spec) \".\" %))))\n                       (into {}))\n                     {(symbol (last (string/split (str spec) #\"\\.\"))) spec})]\n    (doseq [[_ spec] import-map]\n      (swap! deps conj spec))\n    {:import  import-map\n     :require import-map}))\n\n#?(:clj (declare parse-ns))\n\n(defn macro-autoload-ns?\n  \"Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.\"\n  #?(:cljs {:tag boolean})\n  [form]\n  (when *macro-infer*\n    (let [ns (if (sequential? form) (first form) form)\n         {:keys [use-macros require-macros]}\n         (or (get-in @env/*compiler* [::namespaces ns])\n             #?(:clj\n                (when-let [res (util/ns->source ns)]\n                  (:ast (parse-ns res)))))]\n      (or (some #{ns} (vals use-macros))\n          (some #{ns} (vals require-macros))))))\n\n(defn clj-ns->cljs-ns\n  \"Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs\"\n  [sym]\n  (let [segs (string/split (clojure.core/name sym) #\"\\.\")]\n    (if (= \"clojure\" (first segs))\n      (symbol (string/join \".\" (cons \"cljs\" (next segs))))\n      sym)))\n\n#?(:clj\n   (defn aliasable-clj-ns?\n     \"Predicate for testing with a symbol represents an aliasable clojure namespace.\"\n     [sym]\n     (when-not (util/ns->source sym)\n       (let [[seg1 :as segs] (string/split (clojure.core/name sym) #\"\\.\")]\n         (when (= \"clojure\" seg1)\n           (let [sym' (clj-ns->cljs-ns sym)]\n             (util/ns->source sym')))))))\n\n#?(:clj\n   (defn process-rewrite-form [[k & specs :as form]]\n     (letfn [(process-spec [maybe-spec]\n               (let [[lib & xs] (if (sequential? maybe-spec)\n                                  maybe-spec\n                                  [maybe-spec])]\n                 (if (and (symbol? lib) (aliasable-clj-ns? lib))\n                   (let [lib' (clj-ns->cljs-ns lib)\n                         spec (cons lib' xs)]\n                     (into (if xs [spec] []) [(list lib' :as lib)]))\n                   [maybe-spec])))]\n       (if (#{:use :require} k)\n         (cons k (mapcat process-spec specs))\n         form))))\n\n#?(:clj\n   (defn rewrite-cljs-aliases\n     \"Alias non-existing clojure.* namespaces to existing cljs.* namespaces if\n      possible.\"\n     [args]\n     (map process-rewrite-form args)))\n\n(defn canonicalize-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (as-> (second quoted-spec-or-kw) spec\n                (if (or (vector? spec) (map? spec)) spec [spec]))))]\n    (map canonicalize specs)))\n\n(defn canonicalize-import-specs [specs]\n  (letfn [(canonicalize [quoted-spec-or-kw]\n            (if (keyword? quoted-spec-or-kw)\n              quoted-spec-or-kw\n              (second quoted-spec-or-kw)))]\n    (map canonicalize specs)))\n\n(defn desugar-ns-specs\n  \"Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared.\"\n  [args]\n  (let [{:keys [require] :as indexed}\n        (->> args\n          (map (fn [[k & specs]] [k (into [] specs)]))\n          (into {}))\n        sugar-keys #{:include-macros :refer-macros}\n        ;; drop spec k and value from spec for generated :require-macros\n        remove-from-spec\n        (fn [pred spec]\n          (if-not (and (sequential? spec) (some pred spec))\n            spec\n            (let [[l r] (split-with (complement pred) spec)]\n              (recur pred (concat l (drop 2 r))))))\n        ;; rewrite :refer-macros to :refer for generated :require-macros\n        replace-refer-macros\n        (fn [spec]\n          (if-not (sequential? spec)\n            spec\n            (map (fn [x] (if (= x :refer-macros) :refer x)) spec)))\n        reload-spec? #(#{:reload :reload-all} %)\n        to-macro-specs\n        (fn [specs]\n          (->> specs\n            (filter\n              (fn [x]\n                (or (and (sequential? x)\n                         (some sugar-keys x))\n                    (reload-spec? x)\n                    (macro-autoload-ns? x))))\n            (map (fn [x]\n                   (if-not (reload-spec? x)\n                     (->> x (remove-from-spec #{:include-macros})\n                            (remove-from-spec #{:refer})\n                            (remove-from-spec #{:rename})\n                            (replace-refer-macros))\n                     x)))))\n        remove-sugar (partial remove-from-spec sugar-keys)]\n    (if-some [require-specs (seq (to-macro-specs require))]\n      (map (fn [x]\n             (if-not (reload-spec? x)\n               (let [[k v] x]\n                 (cons k (map remove-sugar v)))\n               x))\n        (update-in indexed [:require-macros] (fnil into []) require-specs))\n      args)))\n\n(defn find-def-clash [env ns segments]\n  (let [to-check (map (fn [xs]\n                        [(symbol (string/join \".\" (butlast xs)))\n                         (symbol (last xs))])\n                   (drop 2 (reductions conj [] segments)))]\n    (doseq [[clash-ns name] to-check]\n      (when (get-in @env/*compiler* [::namespaces clash-ns :defs name])\n        (warning :ns-var-clash env\n          {:ns ns\n           :var (symbol (str clash-ns) (str name))})))))\n\n(defn macro-ns-name [name]\n  (let [name-str (str name)]\n    (if-not #?(:clj  (.endsWith name-str \"$macros\")\n               :cljs (gstring/endsWith name-str \"$macros\"))\n      (symbol (str name-str \"$macros\"))\n      name)))\n\n(defmethod parse 'ns\n  [_ env [_ name & args :as form] _ opts]\n  (when-not *allow-ns*\n    (throw (error env \"Namespace declarations must appear at the top-level.\")))\n  (when-not (symbol? name)\n    (throw (error env \"Namespaces must be named by a symbol.\")))\n  (let [name (cond-> name (:macros-ns opts) macro-ns-name)]\n    (let [segments (string/split (clojure.core/name name) #\"\\.\")]\n      (when (= 1 (count segments))\n        (warning :single-segment-namespace env {:name name}))\n      (let [segment (some js-reserved segments)]\n        (when (some? segment)\n          (warning :munged-namespace env {:name name})))\n      (find-def-clash env name segments)\n      #?(:clj\n         (when (some (complement util/valid-js-id-start?) segments)\n           (throw\n             (AssertionError.\n               (str \"Namespace \" name \" has a segment starting with an invaild \"\n                    \"JavaScript identifier\"))))))\n    (let [docstring    (when (string? (first args)) (first args))\n          mdocstr      (-> name meta :doc)\n          args         (if (some? docstring) (next args) args)\n          metadata     (when (map? (first args)) (first args))\n          args         (desugar-ns-specs\n                         #?(:clj  (rewrite-cljs-aliases\n                                    (if metadata (next args) args))\n                            :cljs (if (some? metadata) (next args) args)))\n          name         (vary-meta name merge metadata)\n          {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n          core-renames (reduce (fn [m [original renamed]]\n                                 (assoc m renamed (symbol \"cljs.core\" (str original))))\n                         {} core-renames)\n          deps         (atom [])\n          aliases      (atom {:fns {} :macros {}})\n          spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                        :require-macros (partial parse-require-spec env true deps aliases)\n                        :use            (comp (partial parse-require-spec env false deps aliases)\n                                          (partial use->require env))\n                        :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                          (partial use->require env))\n                        :import         (partial parse-import-spec env deps)}\n          valid-forms  (atom #{:use :use-macros :require :require-macros :import})\n          reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n          reloads      (atom {})\n          {uses :use requires :require renames :rename\n           use-macros :use-macros require-macros :require-macros\n           rename-macros :rename-macros imports :import :as params}\n          (reduce\n            (fn [m [k & libs :as libspec]]\n              (when-not (#{:use :use-macros :require :require-macros :import} k)\n                (throw (error env (str \"Only :refer-clojure, :require, :require-macros, :use, :use-macros, and :import libspecs supported. Got \" libspec \" instead.\"))))\n              (when-not (@valid-forms k)\n                (throw (error env (str \"Only one \" k \" form is allowed per namespace definition\"))))\n              (swap! valid-forms disj k)\n              ;; check for spec type reloads\n              (when-not (= :import k)\n                (when (some? (some #{:reload} libs))\n                  (swap! reload assoc k :reload))\n                (when (some? (some #{:reload-all} libs))\n                  (swap! reload assoc k :reload-all)))\n              ;; check for individual ns reloads from REPL interactions\n              (when-let [xs (seq (filter #(-> % meta :reload) libs))]\n                (swap! reloads assoc k\n                  (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n              (apply merge-with merge m\n                (map (spec-parsers k)\n                  (remove #{:reload :reload-all} libs))))\n            {} (remove (fn [[r]] (= r :refer-clojure)) args))\n          ;; patch `require-macros` and `use-macros` in Bootstrap for namespaces\n          ;; that require their own macros\n          #?@(:cljs [[require-macros use-macros]\n                     (map (fn [spec-map]\n                            (if (:macros-ns opts)\n                              (let [ns (symbol (subs (str name) 0 (- (count (str name)) 7)))]\n                                (reduce (fn [m [k v]]\n                                          (cond-> m\n                                            (not (symbol-identical? v ns))\n                                            (assoc k v)))\n                                  {} spec-map))\n                              spec-map)) [require-macros use-macros])])]\n      (set! *cljs-ns* name)\n      (let [ns-info\n            {:name           name\n             :doc            (or docstring mdocstr)\n             :excludes       excludes\n             :use-macros     use-macros\n             :require-macros require-macros\n             :rename-macros  rename-macros\n             :uses           uses\n             :requires       requires\n             :renames        (merge renames core-renames)\n             :imports        imports}]\n        (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n        (merge {:op      :ns\n                :env     env\n                :form    form\n                :deps    (into [] (distinct @deps))\n                :reload  @reload\n                :reloads @reloads}\n          (cond-> ns-info\n            (@reload :use)\n            (update-in [:uses]\n              (fn [m] (with-meta m {(@reload :use) true})))\n            (@reload :require)\n            (update-in [:requires]\n              (fn [m] (with-meta m {(@reload :require) true})))))))))\n\n(defn- check-duplicate-aliases\n  [env old new]\n  (let [ns-name (:name old)]\n    (doseq [k [:requires :require-macros]]\n      (let [old-aliases (get old k)\n            new-aliases (get new k)]\n        (when-some [alias (some (set (keys new-aliases))\n                            (->> old-aliases\n                              (remove (fn [[k v :as entry]]\n                                        (or (= k v)\n                                            (= entry (find new-aliases k)))))\n                              keys))]\n          (throw (error env\n                   (str \"Alias \" alias \" already exists in namespace \" ns-name\n                     \", aliasing \" (get old-aliases alias)))))))))\n\n(defmethod parse 'ns*\n  [_ env [_ quoted-specs :as form] _ opts]\n  (when-let [not-quoted (->> (remove keyword? quoted-specs)\n                          (remove #(and (seq? %) (= 'quote (first %))) )\n                          first)]\n    (throw (error env (str \"Arguments to \" (name (first quoted-specs))\n                        \" must be quoted. Offending spec: \" not-quoted))))\n  (when-not *allow-ns*\n    (throw (error env (str \"Calls to `\" (name (first quoted-specs))\n                        \"` must appear at the top-level.\"))))\n  (let [specs        (if (= :import (first quoted-specs))\n                       (canonicalize-import-specs quoted-specs)\n                       (canonicalize-specs quoted-specs))\n        name         (-> env :ns :name)\n        args         (desugar-ns-specs\n                       #?(:clj  (list (process-rewrite-form\n                                        specs))\n                          :cljs (list specs)))\n        {excludes :excludes core-renames :renames} (parse-ns-excludes env args)\n        core-renames (reduce (fn [m [original renamed]]\n                               (assoc m renamed (symbol \"cljs.core\" (str original))))\n                       {} core-renames)\n        deps         (atom [])\n        aliases      (atom {:fns {} :macros {}})\n        spec-parsers {:require        (partial parse-require-spec env false deps aliases)\n                      :require-macros (partial parse-require-spec env true deps aliases)\n                      :use            (comp (partial parse-require-spec env false deps aliases)\n                                        (partial use->require env))\n                      :use-macros     (comp (partial parse-require-spec env true deps aliases)\n                                        (partial use->require env))\n                      :import         (partial parse-import-spec env deps)}\n        reload       (atom {:use nil :require nil :use-macros nil :require-macros nil})\n        reloads      (atom {})\n        {uses :use requires :require renames :rename\n         use-macros :use-macros require-macros :require-macros\n         rename-macros :rename-macros imports :import :as params}\n        (reduce\n          (fn [m [k & libs]]\n            ;; check for spec type reloads\n            (when-not (= :import k)\n              (when (some? (some #{:reload} libs))\n                (swap! reload assoc k :reload))\n              (when (some? (some #{:reload-all} libs))\n                (swap! reload assoc k :reload-all)))\n            ;; check for individual ns reloads from REPL interactions\n            (when-some [xs (seq (filter #(-> % meta :reload) libs))]\n              (swap! reloads assoc k\n                (zipmap (map first xs) (map #(-> % meta :reload) xs))))\n            (apply merge-with merge m\n              (map (spec-parsers k)\n                (remove #{:reload :reload-all} libs))))\n          {} (remove (fn [[r]] (= r :refer-clojure)) args))]\n    (set! *cljs-ns* name)\n    (let [require-info\n          {:name           name\n           :excludes       excludes\n           :use-macros     use-macros\n           :require-macros require-macros\n           :rename-macros  rename-macros\n           :uses           uses\n           :requires       requires\n           :renames        (merge renames core-renames)\n           :imports        imports}\n          ns-info\n          (let [ns-info' (get-in @env/*compiler* [::namespaces name])]\n            (if (pos? (count ns-info'))\n              (let [merge-keys\n                    [:use-macros :require-macros :rename-macros\n                     :uses :requires :renames :imports]]\n                #?(:clj\n                   (when *check-alias-dupes*\n                     (check-duplicate-aliases env ns-info' require-info)))\n                (merge\n                  ns-info'\n                  {:excludes excludes}\n                  (merge-with merge\n                    (select-keys ns-info' merge-keys)\n                    (select-keys require-info merge-keys))))\n              require-info))]\n      (swap! env/*compiler* update-in [::namespaces name] merge ns-info)\n      (merge {:op      :ns*\n              :env     env\n              :form    form\n              :deps    (into [] (distinct @deps))\n              :reload  @reload\n              :reloads @reloads}\n        (cond-> require-info\n          (@reload :use)\n          (update-in [:uses]\n            (fn [m] (with-meta m {(@reload :use) true})))\n          (@reload :require)\n          (update-in [:requires]\n            (fn [m] (with-meta m {(@reload :require) true}))))))))\n\n(defn parse-type\n  [op env [_ tsym fields pmasks body :as form]]\n  (let [t (:name (resolve-var (dissoc env :locals) tsym))\n        locals (reduce (fn [m fld]\n                         (assoc m fld\n                                {:name fld\n                                 :line (get-line fld env)\n                                 :column (get-col fld env)\n                                 :local :field\n                                 :field true\n                                 :mutable (-> fld meta :mutable)\n                                 :unsynchronized-mutable (-> fld meta :unsynchronized-mutable)\n                                 :volatile-mutable (-> fld meta :volatile-mutable)\n                                 :tag (-> fld meta :tag)\n                                 :shadow (m fld)}))\n                       {} (if (= :defrecord op)\n                            (concat fields '[__meta __extmap ^:mutable __hash])\n                            fields))\n        protocols (-> tsym meta :protocols)]\n    (swap! env/*compiler* update-in [::namespaces (-> env :ns :name) :defs tsym]\n           (fn [m]\n             (let [m (assoc (or m {})\n                       :name t\n                       :tag 'function\n                       :type true\n                       :num-fields (count fields)\n                       :record (= :defrecord op))]\n               (merge m\n                      (dissoc (meta tsym) :protocols)\n                      {:protocols protocols}\n                      (source-info tsym env)))))\n    {:op op :env env :form form :t t :fields fields :pmasks pmasks\n     :tag 'function\n     :protocols (disj protocols 'cljs.core/Object)\n     :children [#_:fields :body]\n     :body (analyze (assoc env :locals locals) body)}))\n\n(defmethod parse 'deftype*\n  [_ env form _ _]\n  (parse-type :deftype env form))\n\n(defmethod parse 'defrecord*\n  [_ env form _ _]\n  (parse-type :defrecord env form) )\n\n;; dot accessor code\n\n(def ^:private property-symbol? #(boolean (and (symbol? %) (re-matches #\"^-.*\" (name %)))))\n\n(defn- classify-dot-form\n  [[target member args]]\n  [(cond (nil? target) ::error\n         :default      ::expr)\n   (cond (property-symbol? member) ::property\n         (symbol? member)          ::symbol\n         (seq? member)             ::list\n         :default                  ::error)\n   (cond (nil? args) ()\n         :default    ::expr)])\n\n(defmulti build-dot-form #(classify-dot-form %))\n\n;; (. o -p)\n;; (. (...) -p)\n(defmethod build-dot-form [::expr ::property ()]\n  [[target prop _]]\n  {:dot-action ::access :target target :field (-> prop name (.substring 1) symbol)})\n\n;; (. o -p <args>)\n(defmethod build-dot-form [::expr ::property ::list]\n  [[target prop args]]\n  #?(:clj  (throw (Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))\n     :cljs (throw (js/Error. (str \"Cannot provide arguments \" args \" on property access \" prop)))))\n\n(defn- build-method-call\n  \"Builds the intermediate method call map used to reason about the parsed form during\n  compilation.\"\n  [target meth args]\n  (if (symbol? meth)\n    {:dot-action ::call :target target :method meth :args args}\n    {:dot-action ::call :target target :method (first meth) :args args}))\n\n;; (. o m 1 2)\n(defmethod build-dot-form [::expr ::symbol ::expr]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o m)\n(defmethod build-dot-form [::expr ::symbol ()]\n  [[target meth args]]\n  (build-method-call target meth args))\n\n;; (. o (m))\n;; (. o (m 1 2))\n(defmethod build-dot-form [::expr ::list ()]\n  [[target meth-expr _]]\n  (build-method-call target (first meth-expr) (rest meth-expr)))\n\n(defmethod build-dot-form :default\n  [dot-form]\n  #?(:clj  (throw\n             (Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))\n     :cljs (throw\n             (js/Error.\n               (str \"Unknown dot form of \"\n                 (list* '. dot-form) \" with classification \"\n                 (classify-dot-form dot-form))))))\n\n(defn analyze-dot [env target field member+ form]\n  (let [v [target field member+]\n        {:keys [dot-action target method field args]} (build-dot-form v)\n        enve       (assoc env :context :expr)\n        targetexpr (analyze enve target)\n        form-meta  (meta form)\n        target-tag (:tag targetexpr)\n        prop       (or field method)\n        tag        (or (:tag form-meta)\n                       (and (js-tag? target-tag)\n                            (vary-meta (normalize-js-tag target-tag)\n                              update-in [:prefix] (fnil conj '[Object]) prop))\n                       nil)]\n    (when (and (not= 'constructor prop)\n               (not (string/starts-with? (str prop) \"cljs$\")))\n      ;; Adding to Object\n      (when (= 'Object (first (-> tag meta :prefix)))\n        (warning :infer-warning env\n          {:warn-type :object :form form :property prop}))\n      (when (not= 'js target-tag)\n        ;; Cannot determine type of the target\n        (when (or (nil? target-tag) ('#{any} target-tag))\n          (warning :infer-warning env\n            {:warn-type :target :form form}))\n        ;; Unresolveable property on existing extern\n        (let [[pre' pre] ((juxt butlast identity) (-> tag meta :prefix))]\n          (when (and (has-extern? pre') (not (has-extern? pre)))\n            (warning :infer-warning env\n              {:warn-type :property :form form\n               :type (symbol \"js\"\n                       (string/join \".\"\n                         (cond-> pre' (= 'prototype (last pre')) butlast)))\n               :property prop})))))\n    (when (js-tag? tag)\n      (let [pre (-> tag meta :prefix)]\n        (when-not (has-extern? pre)\n          (swap! env/*compiler* update-in\n            (into [::namespaces (-> env :ns :name) :externs] pre) merge {}))))\n    (case dot-action\n      ::access (let [children [:target]]\n                 {:op :host-field\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :field field\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :tag) tag)\n                         tag)})\n      ::call   (let [argexprs (mapv #(analyze enve %) args)\n                     children [:target :args]]\n                 {:op :host-call\n                  :env env\n                  :form form\n                  :target targetexpr\n                  :method method\n                  :args argexprs\n                  :children children\n                  :tag (if (js-tag? tag)\n                         (or (js-tag (-> tag meta :prefix) :ret-tag) 'js)\n                         tag)}))))\n\n(defmethod parse '.\n  [_ env [_ target & [field & member+] :as form] _ _]\n  (disallowing-recur (analyze-dot env target field member+ form)))\n\n(defn get-js-tag [form]\n  (let [form-meta (meta form)]\n    (if-some [tag (:tag form-meta)]\n      tag\n      (when (true? (:numeric form-meta))\n        'number))))\n\n(defn js-star-interp\n  [env ^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)\n            inner (:name (resolve-existing-var env (symbol (subs s (+ 2 idx) end))))]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (cons inner\n              (js-star-interp env (subs s (inc end))))))))))\n\n(defn js-star-seg\n  [^String s]\n  (let [idx (.indexOf s \"~{\")]\n    (if (== -1 idx)\n      (list s)\n      (let [end (.indexOf s \"}\" idx)]\n        (lazy-seq\n          (cons (subs s 0 idx)\n            (js-star-seg (subs s (inc end)))))))))\n\n(def NUMERIC_SET '#{any number long double})\n\n(defn numeric-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO: type inference is not strong enough to detect that\n  ;; when functions like first won't return nil, so variadic\n  ;; numeric functions like cljs.core/< would produce a spurious\n  ;; warning without this - David\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    :else\n    (if (and (symbol? t) (some? (get NUMERIC_SET t)))\n      true\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'number)\n            (contains? t 'long)\n            (contains? t 'double)\n            (contains? t 'any)\n            (contains? t 'js))))))\n\n(def array-types\n  '#{array objects ints longs floats doubles chars shorts bytes boolean})\n\n(defn array-type?\n  #?(:cljs {:tag boolean})\n  [t]\n  ;; TODO same inference caveats as the numeric-type? fn above\n  (cond\n    (nil? t) true\n    (= 'clj-nil t) true\n    (js-tag? t) true ;; TODO: revisit\n    (= 'any t) true\n    (contains? array-types t) true\n    :else\n    (boolean\n      (when #?(:clj  (set? t)\n               :cljs (cljs-set? t))\n        (or (contains? t 'any)\n            (contains? t 'js)\n            (some array-types t))))))\n\n(defn- analyze-js-star-args [js-op env args]\n  (first (reduce\n           (fn [[argexprs env] arg]\n             [(conj argexprs (analyze env arg))\n              (if (= js-op 'cljs.core/and)\n                (set-test-induced-tags env arg)\n                env)])\n           [[] env]\n           args)))\n\n(defn analyze-js-star* [env jsform args form]\n  (let [enve      (assoc env :context :expr)\n        form-meta (meta form)\n        segs      (js-star-seg jsform)\n        tag       (get-js-tag form)\n        js-op     (:js-op form-meta)\n        argexprs  (analyze-js-star-args js-op enve args)\n        numeric   (:numeric form-meta)\n        validate  (fn [warning-type valid-types?]\n                    (let [types (map #(infer-tag env %) argexprs)]\n                      (when-not (valid-types? types)\n                        (warning warning-type env\n                          {:js-op js-op\n                           :types (into [] types)}))))\n        op-match? (fn [sym]\n                    #?(:clj  (= sym (:js-op form-meta))\n                       :cljs (symbol-identical? sym (:js-op form-meta))))]\n    (when (true? numeric)\n      (validate :invalid-arithmetic #(every? numeric-type? %)))\n    {:op :js\n     :env env\n     :segs segs\n     :args argexprs\n     :tag tag\n     :form form\n     :children [:args]\n     :js-op js-op\n     :numeric numeric}))\n\n(defn analyze-js-star [env jsform args form]\n  (disallowing-recur (analyze-js-star* env jsform args form)))\n\n(defmethod parse 'js*\n  [op env [_ jsform & args :as form] _ _]\n  (when-not (string? jsform)\n    (throw (error env \"Invalid js* form\")))\n  (if (some? args)\n    (analyze-js-star env jsform args form)\n    (let [code      (apply str (js-star-interp env jsform))\n          tag       (get-js-tag form)\n          form-meta (meta form)\n          js-op     (:js-op form-meta)\n          numeric   (:numeric form-meta)]\n      {:op :js\n       :env env\n       :form form\n       :code code\n       :tag tag\n       :js-op js-op\n       :numeric numeric})))\n\n;; TODO: analyzed analyzed? should take pass name as qualified keyword arg\n;; then compiler passes can mark/check individually - David\n\n(defn- unsorted-map? [x]\n  (and (map? x)\n       (not (sorted? x))))\n\n(defn analyzed\n  \"Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass.\"\n  [x]\n  (cond\n    (unsorted-map? x) (assoc x ::analyzed true)\n    :else (vary-meta x assoc ::analyzed true)))\n\n(defn analyzed?\n  \"Returns boolean if the form has already been marked as analyzed.\"\n  #?(:cljs {:tag boolean})\n  [x]\n  (boolean\n    (cond\n      (unsorted-map? x) (::analyzed x)\n      :else (::analyzed (meta x)))))\n\n(defn- all-values?\n  #?(:cljs {:tag boolean})\n  [exprs]\n  (every? #(or (nil? %) (symbol? %) (string? %) (number? %) (true? %) (false? %)) exprs))\n\n(defn- valid-arity?\n  #?(:cljs {:tag boolean})\n  [argc method-params]\n  (or (nil? method-params)  ; Assume valid if method-params unavailable\n      (boolean (some #{argc} (map count method-params)))))\n\n(defn- record-tag?\n  [tag]\n  (boolean (and (symbol? tag)\n                (some? (namespace tag))\n                (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs (symbol (name tag)) :record]))))\n\n(defn- record-basis\n  [tag]\n  (let [positional-factory (symbol (str \"->\" (name tag)))\n        fields             (first (get-in @env/*compiler* [::namespaces (symbol (namespace tag)) :defs positional-factory :method-params]))]\n    (into #{} fields)))\n\n(defn- record-with-field?\n  [tag field]\n  (and (record-tag? tag)\n       (contains? (record-basis tag) field)))\n\n(defn- invalid-arity? [argc method-params variadic max-fixed-arity]\n  (and (not (valid-arity? argc method-params))\n       (or (not variadic)\n           (and variadic (< argc max-fixed-arity)))))\n\n(defn parse-invoke*\n  [env [f & args :as form]]\n  (let [enve    (assoc env :context :expr)\n        fexpr   (analyze enve f)\n        argc    (count args)\n        fn-var? (or (-> fexpr :info :fn-var)\n                    (-> fexpr :info :js-fn-var))\n        kw?     (= 'cljs.core/Keyword (:tag fexpr))\n        cur-ns  (-> env :ns :name)\n        HO-invoke? (and (boolean *cljs-static-fns*)\n                        (not fn-var?)\n                        (not (js-tag? f))\n                        (not kw?)\n                        (not (analyzed? f)))\n        ;; function expressions, eg: ((deref m) x) or ((:x m) :a)\n        bind-f-expr? (and HO-invoke?\n                          (not (symbol? f)))\n        ;; Higher order invokes with (some) argument expressions. Bind the arguments\n        ;; to avoid exponential complexity that is created by the IFn arity check branch.\n        bind-args? (and HO-invoke?\n                        (not (all-values? args)))]\n    (when ^boolean fn-var?\n      (let [{^boolean variadic :variadic? :keys [max-fixed-arity method-params name ns macro]} (:info fexpr)]\n        ;; don't warn about invalid arity when when compiling a macros namespace\n        ;; that requires itself, as that code is not meant to be executed in the\n        ;; `$macros` ns - António Monteiro\n        (when (and #?(:cljs (not (and (gstring/endsWith (str cur-ns) \"$macros\")\n                                      (symbol-identical? cur-ns ns)\n                                      (true? macro))))\n                   (invalid-arity? argc method-params variadic max-fixed-arity))\n          (warning :fn-arity env {:name name :argc argc}))))\n    (when (and kw? (not (or (== 1 argc) (== 2 argc))))\n      (warning :fn-arity env {:name (first form) :argc argc}))\n    (let [deprecated? (-> fexpr :info :deprecated)\n          no-warn? (-> form meta :deprecation-nowarn)]\n      (when (and (boolean deprecated?)\n                 (not (boolean no-warn?)))\n        (warning :fn-deprecated env {:fexpr fexpr})))\n    (when (some? (-> fexpr :info :type))\n      (warning :invoke-ctor env {:fexpr fexpr}))\n    (if (or bind-args? bind-f-expr?)\n      (let [arg-syms (when bind-args? (take argc (repeatedly gensym)))\n            f-sym (when bind-f-expr? (gensym \"fexpr__\"))\n            bindings (cond-> []\n                       bind-args? (into (interleave arg-syms args))\n                       bind-f-expr? (conj f-sym (analyzed f)))]\n        (analyze env\n          `(let [~@bindings]\n             (~(analyzed (if bind-f-expr? f-sym f))\n               ~@(if bind-args? arg-syms args)))))\n      (let [ana-expr #(analyze enve %)\n            argexprs (mapv ana-expr args)]\n        (if (and (and (keyword? f)\n                      (nil? (namespace f)))\n                 (== 1 (count args))\n                 (record-with-field? (:tag (first argexprs)) (symbol (name f))))\n          (let [field-access-form (list* (symbol (str \".-\" (name f))) args)]\n            (no-warn (analyze env field-access-form)))\n          {:env      env :op :invoke :form form :fn fexpr :args argexprs\n           :children [:fn :args]})))))\n\n(defn parse-invoke\n  [env form]\n  (disallowing-recur (parse-invoke* env form)))\n\n(defn desugar-dotted-expr [{:keys [op] :as expr}]\n  (case op\n    (:var :local) (if (dotted-symbol? (symbol (name (:name expr))))\n                    (let [s      (name (:name expr))\n                          idx    (.lastIndexOf s \".\")\n                          _ (assert (not= (inc idx) (count s)))\n                          prefix (with-meta (symbol (namespace (:name expr)) (subs s 0 idx))\n                                            (meta (:form expr)))\n                          field (symbol (subs s (inc idx)))]\n                      (assert (not (:const-expr expr)))\n                      {:op :host-field\n                       :env (:env expr)\n                       :form (list '. prefix field)\n                       :target (desugar-dotted-expr (-> expr\n                                                        (assoc :name prefix\n                                                               :form prefix)\n                                                        (dissoc :tag)\n                                                        (assoc-in [:info :name] prefix)\n                                                        (assoc-in [:env :context] :expr)))\n                       :field field\n                       :tag (:tag expr)\n                       :children [:target]})\n                    expr)\n    ;:var\n    expr))\n\n\n(defn analyze-symbol\n  \"Finds the var associated with sym\"\n  [env sym]\n  (if ^boolean (:quoted? env)\n    (do\n      (register-constant! env sym)\n      (analyze-wrap-meta {:op :const :val sym :env env :form sym :tag 'cljs.core/Symbol}))\n    (let [{:keys [line column]} (meta sym)\n          env  (if-not (nil? line)\n                 (assoc env :line line)\n                 env)\n          env  (if-not (nil? column)\n                 (assoc env :column column)\n                 env)\n          ret  {:env env :form sym}\n          lcls (:locals env)]\n      (if-some [lb (handle-symbol-local sym (get lcls sym))]\n        (merge\n          (assoc ret :op :local :info lb)\n          ;; this is a temporary workaround for core.async see CLJS-3030 - David\n          (when (map? lb)\n            (select-keys lb [:name :local :arg-id :variadic? :init])))\n        (let [sym-meta (meta sym)\n              sym-ns (namespace sym)\n              cur-ns (str (-> env :ns :name))\n              ;; when compiling a macros namespace that requires itself, we need\n              ;; to resolve calls to `my-ns.core/foo` to `my-ns.core$macros/foo`\n              ;; to avoid undeclared variable warnings - António Monteiro\n              #?@(:cljs [sym (if (and sym-ns\n                                   (not= sym-ns \"cljs.core\")\n                                   (gstring/endsWith cur-ns \"$macros\")\n                                   (not (gstring/endsWith sym-ns \"$macros\"))\n                                   (= sym-ns (subs cur-ns 0 (- (count cur-ns) 7))))\n                               (symbol (str sym-ns \"$macros\") (name sym))\n                               sym)])\n              info     (if-not (contains? sym-meta ::analyzed)\n                         (resolve-existing-var env sym)\n                         (resolve-var env sym))]\n          (assert (:op info) (:op info))\n          (desugar-dotted-expr\n            (if-not (true? (:def-var env))\n              (merge\n                (assoc ret :info info)\n                (select-keys info [:op :name :ns :tag])\n                (when-let [const-expr (:const-expr info)]\n                  {:const-expr const-expr}))\n              (let [info (resolve-var env sym)]\n                (merge (assoc ret :op :var :info info)\n                       (select-keys info [:op :name :ns :tag]))))))))))\n\n(defn excluded?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :excludes sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :excludes sym))))\n\n(defn used?\n  #?(:cljs {:tag boolean})\n  [env sym]\n  (or (some? (gets env :ns :use-macros sym))\n      (some? (gets @env/*compiler* ::namespaces (gets env :ns :name) :use-macros sym))))\n\n(defn get-expander-ns [env ^String nstr]\n  ;; first check for clojure.* -> cljs.* cases\n  (let [res  (or (resolve-macro-ns-alias env nstr nil)\n                 (resolve-ns-alias env nstr nil))\n        nstr (if (some? res) (str res) nstr)]\n    (cond\n     #?@(:clj  [(= \"clojure.core\" nstr) (find-ns 'cljs.core)]\n         :cljs [(identical? \"clojure.core\" nstr) (find-macros-ns CLJS_CORE_MACROS_SYM)])\n     #?@(:clj  [(= \"clojure.repl\" nstr) (find-ns 'cljs.repl)]\n         :cljs [(identical? \"clojure.repl\" nstr) (find-macros-ns 'cljs.repl)])\n     #?@(:clj  [(.contains nstr \".\") (find-ns (symbol nstr))]\n         :cljs [(goog.string/contains nstr \".\") (find-macros-ns (symbol nstr))])\n     :else (some-> env :ns :require-macros (get (symbol nstr)) #?(:clj  find-ns\n                                                                  :cljs find-macros-ns)))))\n\n(defn get-expander* [sym env]\n  (when-not (or (some? (gets env :locals sym)) ; locals hide macros\n                (and (excluded? env sym) (not (used? env sym))))\n    (let [nstr (namespace sym)]\n      (cond\n        (some? nstr)\n        (let [ns (get-expander-ns env nstr)]\n          (when (some? ns)\n            (.findInternedVar ^clojure.lang.Namespace ns (symbol (name sym)))))\n\n        (some? (gets env :ns :rename-macros sym))\n        (let [qualified-symbol (gets env :ns :rename-macros sym)\n              nsym (symbol (namespace qualified-symbol))\n              sym  (symbol (name qualified-symbol))]\n          (.findInternedVar ^clojure.lang.Namespace\n            #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym))\n\n        :else\n        (let [nsym (gets env :ns :use-macros sym)]\n          (if (and (some? nsym) (symbol? nsym))\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns nsym) :cljs (find-macros-ns nsym)) sym)\n            (.findInternedVar ^clojure.lang.Namespace\n              #?(:clj (find-ns 'cljs.core) :cljs (find-macros-ns CLJS_CORE_MACROS_SYM)) sym)))))))\n\n(defn get-expander\n  \"Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander.\"\n  [sym env]\n  (let [mvar (get-expander* sym env)]\n    (when (and (some? mvar)\n            #?(:clj  (.isMacro ^clojure.lang.Var mvar)\n               :cljs ^boolean (.isMacro mvar)))\n      mvar)))\n\n#?(:cljs\n   (let [cached-var (delay (get (ns-interns* 'cljs.spec.alpha) 'macroexpand-check))]\n     (defn get-macroexpand-check-var []\n       (when (some? (find-ns-obj 'cljs.spec.alpha))\n         @cached-var))))\n\n(defn- var->sym [var]\n  #?(:clj  (symbol (str (.-ns ^clojure.lang.Var var)) (str (.-sym ^clojure.lang.Var var)))\n     :cljs (.-sym var)))\n\n(defn- do-macroexpand-check\n  [env form mac-var]\n  (when (not (-> @env/*compiler* :options :spec-skip-macros))\n    (let [mchk #?(:clj (some-> (find-ns 'clojure.spec.alpha)\n                       (ns-resolve 'macroexpand-check))\n                :cljs (get-macroexpand-check-var))]\n    (when (some? mchk)\n      (try\n        (mchk mac-var (next form))\n        (catch #?(:clj Throwable :cljs :default) e\n          (throw (ex-info nil (error-data env :macro-syntax-check (var->sym mac-var)) e))))))))\n\n#?(:cljs\n   (defn- check-macro-arity [mac-var form]\n     (let [mac-sym (.-sym mac-var)]\n       (when-let [{:keys [variadic? max-fixed-arity method-params]}\n                  (get-in @env/*compiler* [::namespaces (symbol (namespace mac-sym)) :defs (symbol (name mac-sym))])]\n         (let [argc   (count (rest form))\n               offset (if (= '&form (ffirst method-params)) 2 0)]\n           (when (invalid-arity? argc (map #(nthrest %1 offset) method-params)\n                   variadic? (when max-fixed-arity (- max-fixed-arity offset)))\n             (throw (js/Error. (error-message :fn-arity {:argc argc, :name mac-sym})))))))))\n\n(defn macroexpand-1*\n  [env form]\n  (let [op (first form)]\n    (if (contains? specials op)\n      (do\n        (when (= 'ns op)\n          (do-macroexpand-check env form (get-expander 'cljs.core/ns-special-form env)))\n        form)\n      ;else\n        (if-some [mac-var (when (symbol? op) (get-expander op env))]\n          (#?@(:clj [binding [*ns* (create-ns *cljs-ns*)]]\n               :cljs [do])\n            (do-macroexpand-check env form mac-var)\n            (let [form' (try\n                          #?(:cljs (check-macro-arity mac-var form))\n                          (apply @mac-var form env (rest form))\n                          #?(:clj (catch ArityException e\n                                    (throw (ArityException. (- (.actual e) 2) (.name e)))))\n                          (catch #?(:clj Throwable :cljs :default) e\n                            (throw (ex-info nil (error-data env :macroexpansion (var->sym mac-var)) e))))]\n              (if #?(:clj (seq? form') :cljs (cljs-seq? form'))\n                (let [sym' (first form')\n                      sym  (first form)]\n                  (if #?(:clj  (= sym' 'js*)\n                         :cljs (symbol-identical? sym' JS_STAR_SYM))\n                    (let [sym   (if (some? (namespace sym))\n                                  sym\n                                  (symbol \"cljs.core\" (str sym)))\n                          js-op {:js-op sym}\n                          numeric #?(:clj  (-> mac-var meta ::numeric)\n                                     :cljs (let [mac-var-ns   (symbol (namespace (.-sym mac-var)))\n                                                 mac-var-name (symbol (name (.-sym mac-var)))]\n                                             (get-in @env/*compiler*\n                                               [::namespaces mac-var-ns :defs mac-var-name :meta ::numeric])))\n                          js-op (if (true? numeric)\n                                  (assoc js-op :numeric true)\n                                  js-op)]\n                      (vary-meta form' merge js-op))\n                    form'))\n                form')))\n          (if (symbol? op)\n            (let [opname (str op)]\n              (cond\n                (identical? \\.\n                  #?(:clj  (first opname)\n                     :cljs (.charAt opname 0)))\n                (let [[target & args] (next form)]\n                  (with-meta (list* #?(:clj '. :cljs DOT_SYM) target (symbol (subs opname 1)) args)\n                    (meta form)))\n\n                (identical? \\.\n                  #?(:clj  (last opname)\n                     :cljs (.charAt opname (dec (. opname -length)))))\n                (with-meta\n                  (list* #?(:clj 'new :cljs NEW_SYM) (symbol (subs opname 0 (dec (count opname)))) (next form))\n                  (meta form))\n\n                :else form))\n            form)))))\n\n(defn macroexpand-1\n  \"Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once.\"\n  [env form]\n  (wrapping-errors env (macroexpand-1* env form)))\n\n(declare analyze-list)\n\n(defn analyze-seq* [op env form name opts]\n  (if (contains? specials op)\n    (parse op env form name opts)\n    (parse-invoke env form)))\n\n(defn analyze-seq*-wrap [op env form name opts]\n  (wrapping-errors env\n    (analyze-seq* op env form name opts)))\n\n(defn analyze-seq\n  ([env form name]\n   (analyze-seq env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (if ^boolean (:quoted? env)\n     (analyze-list env form)\n     (let [line (-> form meta :line)\n           line (if (nil? line)\n                  (:line env)\n                  line)\n           col  (-> form meta :column)\n           col  (if (nil? col)\n                  (:column env)\n                  col)\n           env  (assoc env :line line :column col)]\n       (let [op (first form)]\n         (when (nil? op)\n           (throw (error env \"Can't call nil\")))\n         (let [mform (macroexpand-1 env form)]\n           (if (identical? form mform)\n             (analyze-seq*-wrap op env form name opts)\n             (analyze env mform name opts))))))))\n\n(defn analyze-map\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        ks (disallowing-recur (mapv #(analyze expr-env %) (keys form)))\n        vs (disallowing-recur (mapv #(analyze expr-env %) (vals form)))]\n    (analyze-wrap-meta {:op :map :env env :form form\n                        :keys ks :vals vs\n                        :children [:keys :vals]\n                        :tag 'cljs.core/IMap})))\n\n;; :list is not used in the emitter any more, but analyze-list is called from analyze-const\n;; to hit the `register-constant!` cases for symbols and keywords.\n(defn analyze-list\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :list :env env :form form :items items :children [:items] :tag 'cljs.core/IList})))\n\n(defn analyze-vector\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :vector :env env :form form :items items :children [:items] :tag 'cljs.core/IVector})))\n\n(defn analyze-set\n  [env form]\n  (let [expr-env (assoc env :context :expr)\n        items (disallowing-recur (mapv #(analyze expr-env %) form))]\n    (analyze-wrap-meta {:op :set :env env :form form :items items :children [:items] :tag 'cljs.core/ISet})))\n\n(defn analyze-js-value\n  [env ^JSValue form]\n  (let [val (.-val form)\n        expr-env (assoc env :context :expr)]\n    (if (map? val)\n      (let [keys (vec (keys val))\n            vals (disallowing-recur\n                   (mapv #(analyze expr-env %) (vals val)))]\n        {:op :js-object\n         :env env\n         :form form\n         :keys keys\n         :vals vals\n         :children [:vals]\n         :tag 'object})\n      (let [items (disallowing-recur\n                    (mapv #(analyze expr-env %) val))]\n        {:op :js-array\n         :env env\n         :form form\n         :items items\n         :children [:items]\n         :tag 'array}))))\n\n(defn record-ns+name [x]\n  (map symbol\n       #?(:clj\n          ((juxt (comp #(string/join \".\" %) butlast) last)\n           (string/split (.getName ^Class (type x)) #\"\\.\"))\n          :cljs\n          (string/split (pr-str (type x)) #\"/\"))))\n\n(defn analyze-record\n  [env x]\n  (let [;; register constansts\n        _items_   (disallowing-recur\n                    (analyze (assoc env :context :expr) (into {} x)))\n        [ns name] (record-ns+name x)]\n    {:op :const\n     :val x\n     :env env\n     :form x\n     :tag (symbol (str ns) (str name))}))\n\n(defn elide-reader-meta [m]\n  (dissoc m :file :line :column :end-column :end-line :source))\n\n(defn elide-analyzer-meta [m]\n  (dissoc m ::analyzed))\n\n(defn elide-irrelevant-meta [m]\n  (-> m elide-reader-meta elide-analyzer-meta))\n\n(defn analyze-wrap-meta [expr]\n  (let [form (:form expr)\n        m    (elide-irrelevant-meta (meta form))]\n    (if (some? (seq m))\n      (let [env (:env expr) ; take on expr's context ourselves\n            expr (assoc-in expr [:env :context] :expr) ; change expr to :expr\n            meta-expr (analyze-map (:env expr) m)]\n        {:op :with-meta :env env :form form\n         :meta meta-expr :expr expr :children [:meta :expr]})\n      expr)))\n\n(defn infer-type [env {:keys [tag] :as ast} _]\n  (if (or (nil? tag) (= 'function tag))\n    ;; infer-type won't get a chance to process :methods\n    ;; so treat :fn as a special case for now, could probably\n    ;; fix up to use :children to walk child nodes\n    (if (= :fn (:op ast))\n      (update ast :methods\n        (fn [ms] (into [] (map #(infer-type env % _)) ms)))\n      (if-some [tag (infer-tag env ast)]\n        (assoc ast :tag tag)\n        ast))\n    ast))\n\n(defn- repl-self-require? [env deps]\n  (and (:repl-env env) (some #{*cljs-ns*} deps)))\n\n#?(:clj\n   (defn ns-side-effects\n     [env {:keys [op] :as ast} opts]\n     (if (#{:ns :ns*} op)\n       (let [{:keys [name deps uses require-macros use-macros reload reloads]} ast]\n         (when (and *analyze-deps* (seq deps))\n           (analyze-deps\n             (if (repl-self-require? env deps) 'cljs.user name)\n             deps env (dissoc opts :macros-ns)))\n         (if *load-macros*\n           (do\n             (load-core)\n             (doseq [nsym (vals use-macros)]\n               (let [k (or (:use-macros reload)\n                         (get-in reloads [:use-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (doseq [nsym (vals require-macros)]\n               (let [k (or (:require-macros reload)\n                         (get-in reloads [:require-macros nsym])\n                         (and (= nsym name) *reload-macros* :reload))]\n                 (if k\n                   (locking load-mutex\n                     (clojure.core/require nsym k))\n                   (locking load-mutex\n                     (clojure.core/require nsym)))\n                 (intern-macros nsym k)))\n             (-> ast\n               (check-use-macros-inferring-missing env)\n               (check-rename-macros-inferring-missing env)))\n           (do\n             (check-uses\n               (when (and *analyze-deps* (seq uses))\n                 (missing-uses uses env))\n               env)\n             ast)))\n       ast)))\n\n;; A set of validators that can be used to do static type\n;; checking of runtime fns based on inferred argument types.\n(def invoke-arg-type-validators\n  (let [aget-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (rest %)))\n                        :warning-type :invalid-array-access}\n        aset-validator {:valid?       #(and (array-type? (first %))\n                                            (every? numeric-type? (butlast (rest %))))\n                        :warning-type :invalid-array-access}]\n    {'cljs.core/checked-aget  aget-validator\n     'cljs.core/checked-aset  aset-validator\n     'cljs.core/checked-aget' aget-validator\n     'cljs.core/checked-aset' aset-validator}))\n\n(defn check-invoke-arg-types\n  [env {:keys [op] :as ast} opts]\n  (when (and (not (analyzed? ast))\n             #?(:clj  (= :invoke op)\n                :cljs (keyword-identical? :invoke op)))\n    (when-some [[name {:keys [valid? warning-type]}] (find invoke-arg-type-validators (-> ast :fn :info :name))]\n      (let [types (mapv :tag (:args ast))]\n        (when-not (valid? types)\n          (warning warning-type env\n            {:name  name\n             :types types})))))\n  (analyzed ast))\n\n#?(:clj\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (seq? form) (seq form)) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (map? form) (analyze-map env form)\n       (vector? form) (analyze-vector env form)\n       (set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) 'clj-nil\n                   (number? form) 'number\n                   (string? form) 'string\n                   (instance? Character form) 'string\n                   (true? form) 'boolean\n                   (false? form) 'boolean\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n#?(:cljs\n   (defn analyze-form [env form name opts]\n     (cond\n       (symbol? form) (analyze-symbol env form)\n       (and (cljs-seq? form) (some? (seq form))) (analyze-seq env form name opts)\n       (record? form) (analyze-record env form)\n       (cljs-map? form) (analyze-map env form)\n       (cljs-vector? form) (analyze-vector env form)\n       (cljs-set? form) (analyze-set env form)\n       (keyword? form) (analyze-keyword env form)\n       (instance? cljs.tagged-literals/JSValue form) (analyze-js-value env form)\n       :else\n       (let [tag (cond\n                   (nil? form) CLJ_NIL_SYM\n                   (number? form) NUMBER_SYM\n                   (string? form) STRING_SYM\n                   (true? form) BOOLEAN_SYM\n                   (false? form) BOOLEAN_SYM\n                   (= () form) 'cljs.core/IList)]\n         (cond-> {:op :const :val form :env env :form form}\n           tag (assoc :tag tag))))))\n\n(defn analyze* [env form name opts]\n  (let [passes *passes*\n        passes (if (nil? passes)\n                 #?(:clj  [infer-type check-invoke-arg-types ns-side-effects]\n                    :cljs [infer-type check-invoke-arg-types])\n                 passes)\n        form   (if (instance? LazySeq form)\n                 (if (seq form) form ())\n                 form)\n        ast    (analyze-form env form name opts)]\n    (reduce (fn [ast pass] (pass env ast opts)) ast passes)))\n\n(defn analyze\n  \"Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.\"\n  ([env form] (analyze env form nil))\n  ([env form name]\n   (analyze env form name\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([env form name opts]\n   (wrapping-errors env\n     (if (analyzed? form)\n       (no-warn (analyze* env form name opts))\n       (analyze* env form name opts)))))\n\n(defn add-consts\n  \"Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source.\"\n  [compiler-state constants-map]\n  (reduce-kv\n    (fn [compiler-state sym value]\n      (let [ns (symbol (namespace sym))]\n        (update-in compiler-state\n          [::namespaces ns :defs (symbol (name sym))] merge\n          {:const-expr\n           (binding [*passes* (conj *passes* (replace-env-pass {:context :expr}))]\n             (analyze (empty-env) value))})))\n    compiler-state constants-map))\n\n#?(:clj\n   (defn- source-path\n     \"Returns a path suitable for providing to tools.reader as a 'filename'.\"\n     [x]\n     (cond\n       (instance? File x) (.getAbsolutePath ^File x)\n       :default (str x))))\n\n(defn resolve-symbol [sym]\n  (if (and (not (namespace sym))\n           (dotted-symbol? sym))\n    sym\n    (:name (binding [*private-var-access-nowarn* true]\n             (resolve-var (assoc @env/*compiler* :ns (get-namespace *cljs-ns*))\n               sym)))))\n\n#?(:clj\n   (defn forms-seq*\n     \"Seq of Clojure/ClojureScript forms from rdr, a java.io.Reader. Optionally\n     accepts a filename argument which will be used in any emitted errors.\"\n     ([^Reader rdr] (forms-seq* rdr nil))\n     ([^Reader rdr filename]\n      {:pre [(instance? Reader rdr)]}\n      (let [eof-sentinel (Object.)\n            opts (merge\n                   {:eof eof-sentinel}\n                   (if (and filename (= (util/ext filename) \"cljc\"))\n                     {:read-cond :allow :features #{:cljs}}))\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq_\n            (fn forms-seq_ []\n              (lazy-seq\n                (let [form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))\n                                     reader/resolve-symbol resolve-symbol]\n                             (reader/read opts pbr))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq_))))))]\n        (forms-seq_)))))\n\n#?(:clj\n   (defn forms-seq\n     \"DEPRECATED: Seq of Clojure/ClojureScript forms from [f], which can be anything\n     for which `clojure.java.io/reader` can produce a `java.io.Reader`. Optionally\n     accepts a [filename] argument, which the reader will use in any emitted errors.\"\n     ([f] (forms-seq f (source-path f)))\n     ([f filename] (forms-seq f filename false))\n     ([f filename return-reader?]\n      (let [rdr (io/reader f)\n            pbr (readers/indexing-push-back-reader\n                  (PushbackReader. rdr) 1 filename)\n            data-readers tags/*cljs-data-readers*\n            forms-seq*\n            (fn forms-seq* []\n              (lazy-seq\n                (let [eof-sentinel (Object.)\n                      form (binding [*ns* (create-ns *cljs-ns*)\n                                     reader/*data-readers* data-readers\n                                     reader/*alias-map*\n                                     (apply merge\n                                       ((juxt :requires :require-macros)\n                                         (get-namespace *cljs-ns*)))]\n                             (reader/read pbr nil eof-sentinel))]\n                  (if (identical? form eof-sentinel)\n                    (.close rdr)\n                    (cons form (forms-seq*))))))]\n        (if (true? return-reader?)\n          [(forms-seq*) rdr]\n          (forms-seq*))))))\n\n#?(:clj\n   (defn gen-user-ns\n     [src]\n     (if (sequential? src)\n       (symbol (str \"cljs.user.source$form$\" (util/content-sha (pr-str src) 7)))\n       (let [full-name (str src)\n             name (.substring full-name\n                    (inc (.lastIndexOf full-name \"/\"))\n                    (.lastIndexOf full-name \".\"))]\n         (symbol (str \"cljs.user.\" name (util/content-sha full-name 7)))))))\n\n#?(:clj\n   (defn ^:dynamic parse-ns\n     \"Helper for parsing only the essential namespace information from a\n      ClojureScript source file and returning a cljs.closure/IJavaScript compatible\n      map _not_ a namespace AST node.\n\n      By default does not load macros or perform any analysis of dependencies. If\n      opts parameter provided :analyze-deps and :load-macros keys their values will\n      be used for *analyze-deps* and *load-macros* bindings respectively. This\n      function does _not_ side-effect the ambient compilation environment unless\n      requested via opts where :restore is false.\"\n     ([src]\n      (parse-ns src nil\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([src opts] (parse-ns src nil opts))\n     ([src dest opts]\n      (ensure\n        (let [src (if (symbol? src)\n                    (util/ns->source src)\n                    src)\n              ijs\n              (binding [env/*compiler* (if (false? (:restore opts))\n                                         env/*compiler*\n                                         (atom @env/*compiler*))\n                        *cljs-ns* 'cljs.user\n                        *cljs-file* src\n                        *macro-infer*\n                        (or (when (contains? opts :macro-infer)\n                              (:macro-infer opts))\n                          false)\n                        *analyze-deps*\n                        (or (when (contains? opts :analyze-deps)\n                              (:analyze-deps opts))\n                          false)\n                        *load-macros*\n                        (or (when (contains? opts :load-macros)\n                              (:load-macros opts))\n                          false)]\n                (let [rdr (when-not (sequential? src) (io/reader src))]\n                  (try\n                    (loop [forms (if rdr\n                                   (forms-seq* rdr (source-path src))\n                                   src)\n                           ret (merge\n                                 {:file         dest\n                                  :source-file  (when rdr src)\n                                  :source-forms (when-not rdr src)\n                                  :macros-ns    (:macros-ns opts)\n                                  :requires     (cond-> #{'cljs.core}\n                                                  (get-in @env/*compiler* [:options :emit-constants])\n                                                  (conj constants-ns-sym))}\n                                 (when (and dest (.exists ^File dest))\n                                   {:lines (with-open [reader (io/reader dest)]\n                                             (-> reader line-seq count))}))]\n                      (if (seq forms)\n                        (let [env (empty-env)\n                              ast (no-warn (analyze env (first forms) nil opts))]\n                          (cond\n                            (= :ns (:op ast))\n                            (let [ns-name (:name ast)\n                                  ns-name (if (and (= 'cljs.core ns-name)\n                                                   (= \"cljc\" (util/ext src)))\n                                            'cljs.core$macros\n                                            ns-name)\n                                  deps (merge (:uses ast) (:requires ast))]\n                              (merge\n                                {:ns           (or ns-name 'cljs.user)\n                                 :provides     [ns-name]\n                                 :requires     (if (= 'cljs.core ns-name)\n                                                 (set (vals deps))\n                                                 (cond-> (conj (set (vals deps)) 'cljs.core)\n                                                   (get-in @env/*compiler* [:options :emit-constants])\n                                                   (conj constants-ns-sym)))\n                                 :file         dest\n                                 :source-file  (when rdr src)\n                                 :source-forms (when-not rdr src)\n                                 :ast          ast\n                                 :macros-ns    (or (:macros-ns opts)\n                                                   (= 'cljs.core$macros ns-name))}\n                                (when (and dest (.exists ^File dest))\n                                  {:lines (with-open [reader (io/reader dest)]\n                                            (-> reader line-seq count))})))\n\n                            (= :ns* (:op ast))\n                            (let [deps (merge (:uses ast) (:requires ast))]\n                              (recur (rest forms)\n                                (cond-> (update-in ret [:requires] into (set (vals deps)))\n                                  ;; we need to defer generating the user namespace\n                                  ;; until we actually need or it will break when\n                                  ;; `src` is a sequence of forms - António Monteiro\n                                  (not (:ns ret))\n                                  (assoc :ns (gen-user-ns src) :provides [(gen-user-ns src)]))))\n\n                            :else ret))\n                        ret))\n                    (finally\n                      (when rdr\n                        (.close ^Reader rdr))))))]\n          (cond-> ijs\n            (not (contains? ijs :ns))\n            (merge\n              {:ns (gen-user-ns src)\n               :provides [(gen-user-ns src)]})))))))\n\n#?(:clj\n   (defn- cache-analysis-ext\n     ([] (cache-analysis-ext (get-in @env/*compiler* [:options :cache-analysis-format] :transit)))\n     ([format]\n      (if (and (= format :transit) @transit) \"json\" \"edn\"))))\n\n#?(:clj\n   (defn build-affecting-options [opts]\n     (select-keys opts\n       [:static-fns :fn-invoke-direct :optimize-constants :elide-asserts :target\n        :cache-key :checked-arrays :language-out])))\n\n#?(:clj\n   (defn build-affecting-options-sha [path opts]\n     (let [m (assoc (build-affecting-options opts) :path path)]\n       (util/content-sha (pr-str m) 7))))\n\n#?(:clj\n   (defn ^File cache-base-path\n     ([path]\n      (cache-base-path path nil))\n     ([path opts]\n      (io/file (System/getProperty \"user.home\")\n        \".cljs\" \".aot_cache\" (util/clojurescript-version)\n        (build-affecting-options-sha path opts)))))\n\n#?(:clj\n   (defn cacheable-files\n     ([rsrc ext]\n      (cacheable-files rsrc ext nil))\n     ([rsrc ext opts]\n      (let [{:keys [ns]} (parse-ns rsrc)\n            path (cache-base-path (util/path rsrc) opts)\n            name (util/ns->relpath ns nil File/separatorChar)]\n        (into {}\n          (map\n            (fn [[k v]]\n              [k (io/file path\n                   (if (and (= (str \"cljs\" File/separatorChar \"core$macros\") name)\n                         (= :source k))\n                     (str \"cljs\" File/separatorChar \"core.cljc\")\n                     (str name v)))]))\n          {:source (str \".\" ext)\n           :output-file \".js\"\n           :source-map \".js.map\"\n           :analysis-cache-edn (str \".\" ext \".cache.edn\")\n           :analysis-cache-json (str \".\" ext \".cache.json\")})))))\n\n#?(:clj\n   (defn cache-file\n     \"Given a ClojureScript source file returns the read/write path to the analysis\n      cache file. Defaults to the read path which is usually also the write path.\"\n     ([src] (cache-file src \"out\"))\n     ([src output-dir] (cache-file src (parse-ns src) output-dir))\n     ([src ns-info output-dir]\n      (cache-file src ns-info output-dir :read nil))\n     ([src ns-info output-dir mode]\n      (cache-file src ns-info output-dir mode nil))\n     ([src ns-info output-dir mode opts]\n      {:pre [(map? ns-info)]}\n      (let [ext (cache-analysis-ext)]\n        (if-let [core-cache\n                 (and (= mode :read)\n                      (= (:ns ns-info) 'cljs.core)\n                      (io/resource (str \"cljs/core.cljs.cache.aot.\" ext)))]\n          core-cache\n          (let [aot-cache-file\n                (when (util/url? src)\n                  ((keyword (str \"analysis-cache-\" ext))\n                    (cacheable-files src (util/ext src) opts)))]\n            (if (and aot-cache-file (.exists ^File aot-cache-file))\n              aot-cache-file\n              (let [target-file (util/to-target-file output-dir ns-info\n                                  (util/ext (:source-file ns-info)))]\n                (io/file (str target-file \".cache.\" ext))))))))))\n\n#?(:clj\n   (defn requires-analysis?\n     \"Given a src, a resource, and output-dir, a compilation output directory\n      return true or false depending on whether src needs to be (re-)analyzed.\n      Can optionally pass cache, the analysis cache file.\"\n     ([src] (requires-analysis? src \"out\"))\n     ([src output-dir]\n      (let [cache (cache-file src output-dir)]\n        (requires-analysis? src cache output-dir nil)))\n     ([src cache output-dir]\n      (requires-analysis? src cache output-dir nil))\n     ([src cache output-dir opts]\n      (cond\n        (util/url? cache)\n        (let [path (.getPath ^URL cache)]\n          (if (or (.endsWith path \"cljs/core.cljs.cache.aot.edn\")\n                  (.endsWith path \"cljs/core.cljs.cache.aot.json\"))\n            false\n            (throw (Exception. (str \"Invalid anlaysis cache, must be file not URL \" cache)))))\n\n        (and (util/file? cache)\n             (not (.exists ^File cache)))\n        true\n\n        :else\n        (let [out-src   (util/to-target-file output-dir (parse-ns src))\n              cache-src (:output-file (cacheable-files src (util/ext src) opts))]\n          (if (and (not (.exists out-src))\n                   (not (.exists ^File cache-src)))\n            true\n            (or (not cache) (util/changed? src cache))))))))\n\n#?(:clj\n   (defn- get-spec-vars\n     []\n     (when-let [spec-ns (find-ns 'cljs.spec.alpha)]\n       (locking load-mutex\n         {:registry-ref (ns-resolve spec-ns 'registry-ref)\n          :speced-vars  (ns-resolve spec-ns '_speced_vars)})))\n   :cljs\n   (let [registry-ref (delay (get (ns-interns* 'cljs.spec.alpha$macros) 'registry-ref))\n         ;; Here, we look up the symbol '-speced-vars because ns-interns*\n         ;; is implemented by invoking demunge on the result of js-keys.\n         speced-vars  (delay (get (ns-interns* 'cljs.spec.alpha$macros) '-speced-vars))]\n     (defn- get-spec-vars []\n       (when (some? (find-ns-obj 'cljs.spec.alpha$macros))\n         {:registry-ref @registry-ref\n          :speced-vars  @speced-vars}))))\n\n(defn dump-specs\n  \"Dumps registered speced vars for a given namespace into the compiler\n  environment.\"\n  [ns]\n  (let [spec-vars (get-spec-vars)\n        ns-str    (str ns)]\n    (swap! env/*compiler* update-in [::namespaces ns]\n      merge\n      (when-let [registry-ref (:registry-ref spec-vars)]\n        {:cljs.spec/registry-ref\n         (into []\n           (filter (fn [[k _]] (= ns-str (namespace k))))\n           @@registry-ref)})\n      (when-let [speced-vars (:speced-vars spec-vars)]\n        {:cljs.spec/speced-vars\n         (into []\n           (filter\n             (fn [v]\n               (or (= ns-str (namespace v))\n                   (= ns (-> v meta :fdef-ns)))))\n           @@speced-vars)}))))\n\n(defn register-specs\n  \"Registers speced vars found in a namespace analysis cache.\"\n  [cached-ns]\n  #?(:clj (try\n            (locking load-mutex\n              (clojure.core/require 'cljs.spec.alpha))\n            (catch Throwable t)))\n  (let [{:keys [registry-ref speced-vars]} (get-spec-vars)]\n    (when-let [registry (seq (:cljs.spec/registry-ref cached-ns))]\n      (when registry-ref\n        (swap! @registry-ref into registry)))\n    (when-let [vars (seq (:cljs.spec/speced-vars cached-ns))]\n      (when speced-vars\n        (swap! @speced-vars into vars)))))\n\n#?(:clj\n   (defn write-analysis-cache\n     ([ns cache-file]\n       (write-analysis-cache ns cache-file nil))\n     ([ns ^File cache-file src]\n      (util/mkdirs cache-file)\n      (dump-specs ns)\n      (let [ext (util/ext cache-file)\n            analysis (dissoc (get-in @env/*compiler* [::namespaces ns]) :macros)]\n        (case ext\n          \"edn\"  (spit cache-file\n                   (str \";; Analyzed by ClojureScript \" (util/clojurescript-version) \"\\n\"\n                     (pr-str analysis)))\n          \"json\" (when-let [{:keys [writer write]} @transit]\n                   (with-open [os (io/output-stream cache-file)]\n                     (write (writer os :json transit-write-opts) analysis)))))\n      (when src\n        (.setLastModified ^File cache-file (util/last-modified src))))))\n\n#?(:clj\n   (defn read-analysis-cache\n     ([cache-file src]\n      (read-analysis-cache cache-file src nil))\n     ([^File cache-file src opts]\n       ;; we want want to keep dependency analysis information\n       ;; don't revert the environment - David\n      (let [{:keys [ns]} (parse-ns src\n                           (merge opts\n                             {:restore false\n                              :analyze-deps true\n                              :load-macros true}))\n            ext          (util/ext cache-file)\n            cached-ns    (case ext\n                           \"edn\"  (edn/read-string (slurp cache-file))\n                           \"json\" (let [{:keys [reader read]} @transit]\n                                    (with-open [is (io/input-stream cache-file)]\n                                      (read (reader is :json transit-read-opts)))))]\n        (when (or *verbose* (:verbose opts))\n          (util/debug-prn \"Reading analysis cache for\" (str src)))\n        (swap! env/*compiler*\n          (fn [cenv]\n            (do\n              (register-specs cached-ns)\n              (doseq [x (get-in cached-ns [::constants :order])]\n                (register-constant! x))\n              (-> cenv\n                (assoc-in [::namespaces ns] cached-ns)))))))))\n\n(defn analyze-form-seq\n  ([forms]\n   (analyze-form-seq forms\n     (when env/*compiler*\n       (:options @env/*compiler*))))\n  ([forms opts]\n   (analyze-form-seq forms opts false))\n  ([forms opts return-last?]\n   (let [env (assoc (empty-env) :build-options opts)]\n     (binding [*file-defs* nil\n               #?@(:clj [*unchecked-if* false\n                         *unchecked-arrays* false])\n               *cljs-ns* 'cljs.user\n               *cljs-file* nil\n               reader/*alias-map* (or reader/*alias-map* {})]\n       (loop [ns nil forms forms last-ast nil]\n         (if (some? forms)\n           (let [form (first forms)\n                 env  (assoc env :ns (get-namespace *cljs-ns*))\n                 ast  (analyze env form nil opts)]\n             (if (= (:op ast) :ns)\n               (recur (:name ast) (next forms) ast)\n               (recur ns (next forms) ast)))\n           (if return-last?\n             last-ast\n             ns)))))))\n\n(defn ensure-defs\n  \"Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)\"\n  [ns]\n  (swap! env/*compiler* update-in [::namespaces ns :defs] #(or % {})))\n\n#?(:clj\n   (defn analyze-file\n     \"Given a java.io.File, java.net.URL or a string identifying a resource on the\n      classpath attempt to analyze it.\n\n      This function side-effects the ambient compilation environment\n      `cljs.env/*compiler*` to aggregate analysis information. opts argument is\n      compiler options, if :cache-analysis true will cache analysis to\n      \\\":output-dir/some/ns/foo.cljs.cache.edn\\\". This function does not return a\n      meaningful value.\"\n     ([f]\n      (analyze-file f\n        (when env/*compiler*\n          (:options @env/*compiler*))))\n     ([f opts]\n      (analyze-file f false opts))\n     ([f skip-cache opts]\n      (binding [*file-defs*        (atom #{})\n                *unchecked-if*     false\n                *unchecked-arrays* false\n                *cljs-warnings*    *cljs-warnings*]\n        (let [output-dir (util/output-directory opts)\n              res        (cond\n                           (instance? File f) f\n                           (instance? URL f) f\n                           (re-find #\"^file://\" f) (URL. f)\n                           :else (io/resource f))]\n          (assert res (str \"Can't find \" f \" in classpath\"))\n          (ensure\n            (let [ns-info (parse-ns res)\n                  path    (if (instance? File res)\n                            (.getPath ^File res)\n                            (.getPath ^URL res))\n                  cache   (when (:cache-analysis opts)\n                            (cache-file res ns-info output-dir :read opts))]\n              (when-not (get-in @env/*compiler* [::namespaces (:ns ns-info) :defs])\n                (if (or skip-cache (not cache) (requires-analysis? res cache output-dir opts))\n                  (binding [*cljs-ns* 'cljs.user\n                            *cljs-file* path\n                            reader/*alias-map* (or reader/*alias-map* {})]\n                    (when (or *verbose* (:verbose opts))\n                      (util/debug-prn \"Analyzing\" (str res)))\n                    (let [env (assoc (empty-env) :build-options opts)\n                          ns  (with-open [rdr (io/reader res)]\n                                (loop [ns nil forms (seq (forms-seq* rdr (util/path res)))]\n                                  (if forms\n                                    (let [form (first forms)\n                                          env (assoc env :ns (get-namespace *cljs-ns*))\n                                          ast (analyze env form nil opts)]\n                                      (cond\n                                        (= (:op ast) :ns)\n                                        (recur (:name ast) (next forms))\n\n                                        (and (nil? ns) (= (:op ast) :ns*))\n                                        (recur (gen-user-ns res) (next forms))\n\n                                        :else\n                                        (recur ns (next forms))))\n                                    ns)))]\n                      (ensure-defs ns)\n                      (when (and cache (true? (:cache-analysis opts)))\n                        (write-analysis-cache ns cache res))))\n                  (try\n                    (read-analysis-cache cache res opts)\n                    (catch Throwable e\n                      (analyze-file f true opts))))))))))))\n","~:reader-features",["^Q",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.analyzer/*cljs-ns*","cljs.analyzer/*cljs-file*","cljs.analyzer/*checked-arrays*","cljs.analyzer/*check-alias-dupes*","cljs.analyzer/*cljs-static-fns*","cljs.analyzer/*fn-invoke-direct*","cljs.analyzer/*cljs-macros-path*","cljs.analyzer/*cljs-macros-is-classpath*","cljs.analyzer/*cljs-dep-set*","cljs.core/with-meta","cljs.analyzer/*analyze-deps*","cljs.analyzer/*load-tests*","cljs.analyzer/*load-macros*","cljs.analyzer/*reload-macros*","cljs.analyzer/*macro-infer*","cljs.analyzer/*passes*","cljs.analyzer/*file-defs*","cljs.analyzer/*private-var-access-nowarn*","cljs.analyzer/constants-ns-sym","cljs.analyzer/*verbose*","cljs.analyzer/-cljs-macros-loaded","cljs.core.atom","cljs.analyzer/*cljs-warnings*","cljs.analyzer/unchecked-arrays?","cljs.core/*unchecked-arrays*","cljs.analyzer/checked-arrays","cljs.core/not","cljs.core/deref","cljs.env/*compiler*","cljs.analyzer/js-reserved","cljs.analyzer/es5-allowed","cljs.analyzer/SENTINEL","var_args","G__28776","cljs.analyzer/gets","js/Error","m","k0","k1","cljs.core.get","k2","k3","cljs.analyzer/CLJ_NIL_SYM","cljs.analyzer/NUMBER_SYM","cljs.analyzer/STRING_SYM","cljs.analyzer/BOOLEAN_SYM","cljs.analyzer/JS_STAR_SYM","cljs.analyzer/DOT_SYM","cljs.analyzer/NEW_SYM","cljs.analyzer/CLJS_CORE_SYM","cljs.analyzer/CLJS_CORE_MACROS_SYM","cljs.analyzer/IGNORE_SYM","cljs.analyzer/ANY_SYM","cljs.analyzer/cljs-seq?","x","cljs.core/PROTOCOL_SENTINEL","cljs.analyzer/cljs-map?","cljs.analyzer/cljs-vector?","cljs.analyzer/cljs-set?","cljs.analyzer/munge-path","ss","cljs.core/munge","G__28789","cljs.analyzer/ns->relpath","ns","cljs.analyzer.ns__GT_relpath","ext","clojure.string/replace","cljs.core/name","G__28795","cljs.analyzer/topo-sort","get-deps","cljs.analyzer.topo_sort","cljs.core/sorted-map","cljs.core/memoize","depth","state","memo-get-deps","deps","cljs.core.swap_BANG_","cljs.core/update-in","cljs.core.fnil","cljs.core/into","seq__28798","cljs.core/seq","chunk__28799","count__28800","i__28801","temp__5735__auto__","cljs.core/chunked-seq?","c__4609__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","cljs.core/first","cljs.core/next","dep","seq__28804","chunk__28805","count__28806","i__28807","vec__28816","cljs.core.nth","vec__28819","<depth","_","cljs.core.subseq","cljs.core/<","clojure.set/difference","cljs.core._EQ_","cljs.core.distinct","cljs.core.apply","cljs.core/concat","cljs.core/vals","cljs.analyzer/ast?","cljs.core/map?","cljs.core/contains?","js/cljs","js/cljs.analyzer","js/cljs.analyzer.error-message","method-table__4672__auto__","prefer-table__4673__auto__","method-cache__4674__auto__","cached-hierarchy__4675__auto__","hierarchy__4676__auto__","fexpr__28822","cljs.core/MultiFn","cljs.core.symbol","cljs.analyzer/error-message","warning-type","info","clojure.string.join","p__28823","map__28824","cljs.core/hash-map","ns-sym","js-provide","clojure.string/includes?","p__28826","map__28827","or__4185__auto__","overwritten-protocol","cljs.core.pr_str","p__28839","map__28840","name","types","G__28842","cljs.core/every?","cljs.core/rest","cljs.core/butlast","p__28847","map__28848","munged","clojure.string.split","p1__28846#","cljs.core.map","p__28850","map__28851","var","p__28853","map__28854","p__28856","map__28857","protocol","method","p__28859","map__28860","module-type","file","p__28862","map__28863","preprocess","p__28865","map__28866","p__28869","map__28870","warn-type","form","type","property","G__28872","cljs.core/Keyword","cljs.analyzer/default-warning-handler","env","extra","s","*print-fn*-orig-val__28875","*print-fn*-temp-val__28876","cljs.core/*print-fn*","cljs.core/*print-err-fn*","cljs.core.println","G__28877","G__28878","cljs.analyzer/message","cljs.analyzer/*cljs-warning-handlers*","cljs.analyzer/repeat-char","c","n","ret","cljs.analyzer/hex-format","pad","hex","len","cljs.analyzer/gen-constant-id","value","prefix","cljs.core/Symbol","cljs.core/type","cljs.core.subs","p1__28880#","G__28882","cljs.analyzer/register-constant!","val","cljs.analyzer.register_constant_BANG_","cenv","G__28883","cljs.core.update_in","table","cljs.core.assoc","p__28884","map__28885","seen","order","constants","G__28887","cljs.core.conj","cljs.analyzer/default-namespaces","cljs.analyzer/namespaces","js/cljs.analyzer.t_cljs$analyzer28888","cljs.analyzer/t_cljs$analyzer28888","_28890","meta28889","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","cljs.analyzer/->t_cljs$analyzer28888","G__28892","cljs.analyzer/get-namespace","key","cljs.analyzer.get_namespace","temp__5737__auto__","cljs.core.get_in","cljs.analyzer/get-line","cljs.core/meta","cljs.analyzer/get-col","G__28894","cljs.analyzer/intern-macros","cljs.analyzer.intern_macros","reload","cljs.analyzer.gets","cljs.core/assoc-in","cljs.core/ns-interns*","cljs.core.filter","p__28899","vec__28900","v","p__28895","vec__28896","k","vm","cljs.core.into","cljs.analyzer/empty-env","val__28705__auto__","cljs.env.default_compiler_env","p1__28903#","cljs.core/PersistentVector","p__28904","map__28905","cljs.analyzer/source-info->error-data","line","column","G__28908","cljs.analyzer/source-info","cljs.analyzer.source_info","G__28909","cljs.core.merge","cljs.core/select-keys","cljs.analyzer/warning","seq__28910","chunk__28911","count__28912","i__28913","handler","cljs.analyzer/accumulating-warning-handler","warn-acc","cljs.core/conj","cljs.analyzer/replay-accumulated-warnings","p1__28914#","cljs.core/run!","G__28916","cljs.analyzer/error-data","phase","cljs.analyzer.error_data","symbol","cljs.analyzer/compile-syntax-error","msg","cljs.core.ex_info","G__28918","cljs.analyzer/error","cljs.analyzer.error","cause","cljs.analyzer/analysis-error?","ex","cljs.core/ex-data","cljs.analyzer/has-error-data?","cljs.analyzer/implicit-nses","cljs.analyzer/implicit-import?","suffix","cljs.analyzer/confirm-var-exist-warning","G__28920","G__28921","cljs.analyzer/get-expander","cljs.analyzer/loaded-js-ns?","cljs.analyzer/internal-js-module-exists?","js-module-index","module","cljs.core.mapcat","p__28922","vec__28923","cljs.analyzer/js-module-exists?*","cljs.analyzer/js-module-exists?","cljs.analyzer/node-module-dep?","e28926","cljs.core/*target*","cljs.core/boolean","js/require.resolve","cljs.analyzer/dep-has-global-exports?","global-exports","G__28928","cljs.analyzer/confirm-var-exists","warn","cljs.analyzer.confirm_var_exists","missing-fn","sufstr","suffix-str","cljs.analyzer/confirm-var-exists-throw","G__28930","cljs.analyzer/resolve-ns-alias","cljs.analyzer.resolve_ns_alias","not-found","sym","G__28932","cljs.analyzer/resolve-macro-ns-alias","cljs.analyzer.resolve_macro_ns_alias","cljs.analyzer/confirm-ns","cljs.core.not_EQ_","cljs.analyzer/core-name?","mac","cljs.analyzer/public-name?","var-ast","cljs.analyzer/js-tag?","cljs.core/namespace","cljs.analyzer/normalize-js-tag","cljs.core/symbol","cljs.core/vec","cljs.analyzer/->type-set","t","cljs.analyzer/canonicalize-type","cljs.core/empty?","res","cljs.core.disj","G__28937","cljs.analyzer/add-types","args-arr__4810__auto__","len__4789__auto__","i__4790__auto__","argseq__4811__auto__","cljs.core/IndexedSeq","seq28934","G__28935","G__28936","self__4776__auto__","t1","t2","clojure.set.union","ts","cljs.analyzer.add_types","cljs.analyzer/alias->type","G__28939","cljs.analyzer/has-extern?*","pre","externs","me","cljs.core/find","tag","cljs.analyzer.has_extern_QMARK__STAR_","top","vec__28940","x'","externs'","xmeta","G__28944","cljs.analyzer/has-extern?","cljs.analyzer.has_extern_QMARK_","cljs.core/last","clojure.string/starts-with?","G__28946","cljs.analyzer/js-tag","cljs.analyzer.js_tag","tag-type","vec__28947","p","G__28950","cljs.analyzer/dotted-symbol?","goog.string/contains","cljs.analyzer/munge-node-lib","cljs.analyzer/munge-global-export","cljs.analyzer/resolve-alias","and__4174__auto__","fexpr__28954","cljs.analyzer/ns->module-type","js/cljs.analyzer.resolve*","fexpr__28955","cljs.analyzer/resolve*","full-ns","current-ns","cljs.core/merge","cljs.analyzer/private-var-access-exceptions","sym-ast","sym-name","cljs.analyzer/required?","cljs.core/set","cljs.analyzer/invokeable-ns?","cljs.analyzer/resolve-invokeable-ns","G__28956","cljs.analyzer/handle-symbol-local","lb","G__28958","cljs.analyzer/resolve-var","cljs.analyzer.resolve_var","confirm","locals","symn","shadowed-by-local","ret-tag","G__28959","G__28960","G__28961","idx","qualified-symbol","G__28962","G__28963","G__28964","cljs.analyzer/resolve-existing-var","cljs.analyzer/confirm-bindings","names","seq__28965","chunk__28966","count__28967","i__28968","ev","cljs.analyzer/resolve-macro-var","namespaces","clojure.string/ends-with?","cljs.analyzer/specials","cljs.analyzer/*recur-frames*","cljs.analyzer/*loop-lets*","cljs.analyzer/*allow-redef*","cljs.analyzer/*allow-ns*","cljs.analyzer/analyze-keyword","cljs.analyzer/get-tag","e","cljs.analyzer/find-matching-method","f","params","methods","cljs.core/some","cljs.analyzer/type?","proto","cljs.analyzer/NOT_NATIVE","cljs.analyzer/BOOLEAN_OR_SEQ","p__28969","map__28970","cljs.analyzer/unwrap-quote","op","expr","cljs.core/keyword-identical?","cljs.analyzer/infer-if","map__28972","then-tag","G__28974","G__28975","cljs.analyzer/infer-tag","else-tag","G__28976","G__28977","cljs.core/symbol-identical?","p__28978","map__28979","cljs.analyzer/infer-invoke","args","map__28981","G__28983","G__28984","G__28985","G__28986","G__28987","G__28988","G__28989","G__28990","G__28991","G__28992","G__28993","G__28994","G__28995","G__28996","init","G__28997","G__28998","js/cljs.analyzer.parse","fexpr__28999","cljs.analyzer/parse","rest","G__29003","cljs.analyzer/var-meta","cljs.analyzer.var_meta","expr-env","ks","user-meta","uks","cljs.core/keys","cljs.core/zipmap","p1__29000#","cljs.core/List","cljs.core.sequence","cljs.core.concat","p1__29001#","arglists","arglists'","cljs.core/second","cljs.core.doall","cljs.analyzer/analyze","cljs.analyzer/var-ast","*private-var-access-nowarn*-orig-val__29004","*private-var-access-nowarn*-temp-val__29005","cljs.core.dissoc","temp__5739__auto__","var-ns","G__29006","G__29007","p__29008","vec__29009","cljs.analyzer/predicate->tag","cljs.analyzer/simple-predicate-induced-tag","test","cljs.core/list?","cljs.core/symbol?","analyzed-fn","*cljs-warnings*-orig-val__29012","*cljs-warnings*-temp-val__29013","cljs.core.repeat","G__29014","G__29015","G__29016","cljs.analyzer/type-check-induced-tag","*cljs-warnings*-orig-val__29017","*cljs-warnings*-temp-val__29018","G__29019","G__29020","G__29022","fexpr__29021","analyzed-type","*cljs-warnings*-orig-val__29023","*cljs-warnings*-temp-val__29024","G__29025","G__29026","cljs.analyzer/truth-induced-tag","analyzed-symbol","*cljs-warnings*-orig-val__29027","*cljs-warnings*-temp-val__29028","G__29029","G__29030","cljs.core/set?","cljs.analyzer/set-test-induced-tags","vec__29031","local","G__29034","p__29035","vec__29036","then","else","test-expr","*recur-frames*-orig-val__29039","*recur-frames*-temp-val__29040","cljs.core/cons","G__29041","G__29042","then-expr","*allow-redef*-orig-val__29043","*allow-redef*-temp-val__29044","G__29045","G__29046","else-expr","*allow-redef*-orig-val__29047","*allow-redef*-temp-val__29048","cljs.core/*unchecked-if*","p__29051","vec__29052","tests","thens","default","cljs.core/vector?","*recur-frames*-orig-val__29055","*recur-frames*-temp-val__29056","p1__29049#","cljs.core.mapv","p1__29050#","nodes","cljs.core.some_fn","cljs.core/number?","cljs.core/string?","cljs.core/char?","p__29057","vec__29058","throw-form","throw-expr","*recur-frames*-orig-val__29061","*recur-frames*-temp-val__29062","G__29063","G__29064","p__29069","vec__29070","seq__29071","first__29072","body","map__29073","catchenv","p1__29065#","catch?","p1__29066#","cljs.core.every_pred","cljs.core/seq?","default?","p1__29067#","finally?","p1__29068#","cblocks","dblock","fblock","parser","vec__29078","seq__29079","first__29080","forms*","parser*","G__29081","finally","*recur-frames*-orig-val__29083","*recur-frames*-temp-val__29084","G__29085","G__29086","cljs.core.gensym","temp__5733__auto__","vec__29087","seq__29088","first__29089","cb","cblock","p__29090","vec__29091","seq__29092","first__29093","catch","*recur-frames*-orig-val__29094","*recur-frames*-temp-val__29095","G__29096","G__29097","try","*recur-frames*-orig-val__29098","*recur-frames*-temp-val__29099","G__29100","G__29101","cljs.analyzer/valid-proto","cljs.analyzer/elide-env","ast","opts","cljs.analyzer/replace-env-pass","new-env","cljs.analyzer/ast-children","g","p__29102","map__29103","cljs.analyzer/constant-value?","fexpr__29106","fexpr__29109","p__29110","map__29111","cljs.analyzer/const-expr->constant-value","G__29113","G__29114","cljs.analyzer/earmuffed?","cljs.analyzer/core-ns?","pfn","doc","const?","sym-meta","dynamic","ns-name","clash-ns","sym-ns","conj-to-set","var-name","init-expr","*recur-frames*-orig-val__29116","*recur-frames*-temp-val__29117","*allow-ns*-orig-val__29118","*allow-ns*-temp-val__29119","G__29120","G__29121","G__29122","fn-var?","export-as","export-val","G__29123","const-expr","*passes*-orig-val__29124","*passes*-temp-val__29125","G__29126","G__29127","protocol-symbol","p1__29115#","top-fn-meta","G__29128","G__29129","G__29130","G__29131","cljs.analyzer/analyze-fn-method-param","p__29132","p__29133","vec__29134","vec__29137","arg-id","nmeta","shadow","param","cljs.analyzer/analyze-fn-method-body","recur-frames","*recur-frames*-orig-val__29140","*recur-frames*-temp-val__29141","cljs.analyzer/analyze-fn-method","analyze-body?","vec__29142","param-names","variadic","cljs.core.remove","step","step-init","cljs.core.reduce","cljs.core.map_indexed","cljs.core/vector","params'","fixed-arity","recur-frame","body-env","body-form","recurs","cljs.analyzer/fn-name-var","fn-scope","name-var","cljs.analyzer/analyze-fn-methods-pass2*","menv","meths","p1__29145#","cljs.analyzer/analyze-fn-methods-pass2","p__29147","vec__29148","seq__29149","first__29150","vec__29151","named-fn?","form-meta","proto-impl","proto-inline","G__29154","p1__29146#","*allow-ns*-orig-val__29155","*allow-ns*-temp-val__29156","mfa","cljs.core.transduce","cljs.core/max","cljs.core/assoc","*allow-ns*-orig-val__29157","*allow-ns*-temp-val__29158","cljs.core.vary_meta","cljs.core/dissoc","js-doc","children","inferred-ret-tag","inferred-tags","cljs.core.partial","cljs.core/=","variadic-methods","cljs.core.comp","cljs.core.take","variadic-params","param-counts","cljs.analyzer/analyze-wrap-meta","p__29159","vec__29160","seq__29161","first__29162","bindings","exprs","cljs.core/even?","vec__29163","vec__29166","n->fexpr","cljs.core.juxt","cljs.core.partition","context","meth-env","bes","p__29169","vec__29170","map__29173","fexpr","*cljs-warnings*-orig-val__29175","*cljs-warnings*-temp-val__29176","G__29177","G__29178","be","G__29179","p__29180","p__29181","vec__29182","map__29185","G__29187","G__29188","be'","G__29189","G__29190","cljs.analyzer/analyze-do-statements*","p1__29191#","G__29192","G__29193","cljs.analyzer/analyze-do-statements","*recur-frames*-orig-val__29194","*recur-frames*-temp-val__29195","p__29196","vec__29197","seq__29198","first__29199","statements","G__29200","G__29201","ret-env","G__29202","G__29203","cljs.analyzer/analyze-let-binding-init","loop-lets","*loop-lets*-orig-val__29204","*loop-lets*-temp-val__29205","cljs.analyzer/get-let-tag","cljs.analyzer/analyze-let-bindings*","encl-env","vec__29210","col","p1__29206#","cljs.analyzer/analyze-let-bindings","*recur-frames*-orig-val__29213","*recur-frames*-temp-val__29214","cljs.analyzer/analyze-let-body*","G__29215","G__29216","cljs.analyzer/analyze-let-body","*recur-frames*-orig-val__29217","*loop-lets*-orig-val__29218","*recur-frames*-temp-val__29219","*loop-lets*-temp-val__29220","p__29221","vec__29222","seq__29223","first__29224","cljs.analyzer/analyze-let","is-loop","widened-tags","vec__29225","p__29228","vec__29229","widened-tag","G__29232","*cljs-warning-handlers*-orig-val__29233","*cljs-warning-handlers*-temp-val__29234","nil->any","cljs.core/identity","p__29236","vec__29237","seq__29238","first__29239","frame","add-implicit-target-object?","G__29240","*recur-frames*-orig-val__29241","*recur-frames*-temp-val__29242","p1__29235#","G__29243","G__29244","cljs.core/reset!","tags","cljs.analyzer/analyze-const","map__29245","G__29246","G__29247","p__29249","vec__29250","p__29254","vec__29255","seq__29256","first__29257","ctor","*recur-frames*-orig-val__29258","*recur-frames*-temp-val__29259","enve","ctorexpr","ctor-var","G__29261","fexpr__29260","record-args","argexprs","p1__29253#","known-num-fields","argc","fexpr__29263","p__29264","vec__29265","target","alt","vec__29268","*recur-frames*-orig-val__29271","*recur-frames*-temp-val__29272","*private-var-access-nowarn*-orig-val__29273","*private-var-access-nowarn*-temp-val__29274","texpr","G__29275","cljs.analyzer/analyze-symbol","cljs.analyzer/analyze-seq","vexpr","G__29276","meta","fexpr__29278","cljs.analyzer/foreign-dep?","js-index","vec__29279","map__29282","foreign","G__29286","cljs.analyzer/analyze-deps","lib","cljs.analyzer.analyze_deps","compiler","*cljs-dep-set*-orig-val__29287","*cljs-dep-set*-temp-val__29288","p1__29284#","cljs.core/str","cljs.core.interpose","seq__29289","chunk__29290","count__29291","i__29292","dep-name","cljs.analyzer/missing-use?","js-lib","cljs.analyzer/missing-rename?","cljs.analyzer/missing-use-macro?","the-ns","cljs.core/find-macros-ns","cljs.analyzer/missing-rename-macro?","cljs.analyzer/missing-uses","uses","p__29293","vec__29294","cljs.analyzer/missing-renames","renames","p__29297","vec__29298","qualified-sym","cljs.analyzer/missing-use-macros","use-macros","p__29301","vec__29302","cljs.analyzer/inferred-use-macros","p__29305","vec__29306","cljs.analyzer/inferred-rename-macros","rename-macros","p__29309","vec__29310","cljs.analyzer/check-uses","seq__29313","chunk__29314","count__29315","i__29316","vec__29323","vec__29326","G__29330","cljs.analyzer/check-use-macros","cljs.analyzer.check_use_macros","missing-uses","seq__29331","chunk__29332","count__29333","i__29334","vec__29341","vec__29344","p__29350","map__29351","cljs.analyzer/check-use-macros-inferring-missing","p1__29347#","maybe-macros","remove-missing-uses","ast'","p1__29348#","p1__29349#","p__29356","map__29357","cljs.analyzer/check-rename-macros-inferring-missing","p1__29353#","missing-renames","missing-rename-macros","remove-missing-renames","p1__29354#","p1__29355#","cljs.analyzer/parse-ns-error-msg","spec","cljs.analyzer/basic-validate-ns-spec","macros?","cljs.core/sequential?","cljs.core/odd?","fs","cljs.core/frequencies","cljs.analyzer/parse-ns-excludes","p__29360","vec__29361","seq__29362","first__29363","filters","valid-kws","xs","err","kw","refs","p1__29359#","cljs.core/nnext","cljs.core.merge_with","p__29365","vec__29366","seq__29367","first__29368","cljs.analyzer/use->require","only?","p1__29364#","cljs.analyzer/parse-require-spec","aliases","vec__29369","seq__29370","first__29371","vec__29372","map__29375","vec__29376","js-module-provides","js-module-name","alias","referred","renamed","referred-without-renamed","rk","uk","renk","alias-type","lib'","fexpr__29380","cljs.core.interleave","p__29381","vec__29382","original","cljs.analyzer/parse-import-spec","import-map","p1__29385#","seq__29386","chunk__29387","count__29388","i__29389","vec__29396","vec__29399","cljs.analyzer/macro-autoload-ns?","map__29402","require-macros","cljs.analyzer/clj-ns->cljs-ns","segs","cljs.analyzer/canonicalize-specs","specs","quoted-spec-or-kw","canonicalize","cljs.analyzer/canonicalize-import-specs","cljs.analyzer/desugar-ns-specs","map__29405","p1__29404#","require","indexed","p__29406","vec__29407","seq__29408","first__29409","sugar-keys","remove-from-spec","pred","vec__29411","l","r","cljs.core/split-with","cljs.core/complement","cljs.core.drop","replace-refer-macros","reload-spec?","fexpr__29414","to-macro-specs","remove-sugar","require-specs","vec__29415","cljs.analyzer/find-def-clash","segments","to-check","cljs.core.reductions","seq__29418","chunk__29419","count__29420","i__29421","vec__29428","vec__29431","cljs.analyzer/macro-ns-name","name-str","goog.string/endsWith","p__29436","vec__29437","seq__29438","first__29439","G__29440","segment","map__29441","map__29442","vec__29443","docstring","mdocstr","metadata","excludes","core-renames","p__29447","vec__29448","spec-parsers","valid-forms","reloads","requires","imports","p__29451","vec__29452","seq__29453","first__29454","libs","libspec","fexpr__29455","fexpr__29456","cljs.core/disj","p1__29434#","p1__29435#","cljs.core/merge-with","p__29457","vec__29458","spec-map","p__29462","vec__29463","G__29466","ns-info","G__29467","fexpr__29468","fexpr__29469","fexpr__29470","fexpr__29471","cljs.analyzer/check-duplicate-aliases","old","new","seq__29472","chunk__29473","count__29474","i__29475","old-aliases","new-aliases","p__29484","vec__29485","p__29488","vec__29489","entry","p__29495","vec__29496","quoted-specs","not-quoted","cljs.core/keyword?","p1__29492#","map__29499","map__29500","p__29502","vec__29503","p__29506","vec__29507","seq__29508","first__29509","p1__29493#","p1__29494#","p__29510","vec__29511","require-info","ns-info'","merge-keys","G__29515","fexpr__29516","fexpr__29517","fexpr__29518","fexpr__29519","p__29520","vec__29521","cljs.analyzer/parse-type","tsym","fields","pmasks","fld","protocols","G__29524","G__29525","p1__29526#","cljs.analyzer/property-symbol?","cljs.core/re-matches","p__29527","vec__29528","cljs.analyzer/classify-dot-form","member","js/cljs.analyzer.build-dot-form","fexpr__29532","p1__29531#","cljs.analyzer/build-dot-form","p__29533","vec__29534","prop","p__29537","vec__29538","cljs.analyzer/build-method-call","meth","p__29541","vec__29542","p__29545","vec__29546","p__29549","vec__29550","meth-expr","dot-form","cljs.core.list_STAR_","cljs.analyzer/analyze-dot","field","member+","map__29554","dot-action","targetexpr","target-tag","fexpr__29557","vec__29558","pre'","G__29561","G__29562","p1__29553#","p__29563","vec__29564","seq__29565","first__29566","vec__29567","seq__29568","first__29569","*recur-frames*-orig-val__29570","*recur-frames*-temp-val__29571","cljs.analyzer/get-js-tag","cljs.analyzer/js-star-interp","end","inner","cljs.core/LazySeq","G__29572","G__29573","cljs.analyzer/js-star-seg","G__29574","cljs.analyzer/NUMERIC_SET","cljs.analyzer/numeric-type?","cljs.analyzer/array-types","cljs.analyzer/array-type?","cljs.analyzer/analyze-js-star-args","js-op","p__29575","vec__29576","arg","cljs.analyzer/analyze-js-star*","jsform","numeric","validate","valid-types?","p1__29579#","op-match?","p1__29580#","cljs.analyzer/analyze-js-star","*recur-frames*-orig-val__29581","*recur-frames*-temp-val__29582","p__29583","vec__29584","seq__29585","first__29586","code","cljs.analyzer/unsorted-map?","cljs.core/sorted?","cljs.analyzer/analyzed","cljs.analyzer/analyzed?","cljs.analyzer/all-values?","p1__29587#","cljs.analyzer/valid-arity?","method-params","cljs.analyzer/record-tag?","cljs.analyzer/record-basis","positional-factory","cljs.analyzer/record-with-field?","cljs.analyzer/invalid-arity?","max-fixed-arity","p__29589","vec__29590","seq__29591","first__29592","cljs.analyzer/parse-invoke*","kw?","cur-ns","HO-invoke?","bind-f-expr?","bind-args?","map__29593","macro","deprecated?","no-warn?","arg-syms","cljs.core.repeatedly","cljs.core/gensym","f-sym","G__29595","G__29596","G__29597","p1__29588#","ana-expr","field-access-form","*cljs-warnings*-orig-val__29598","*cljs-warnings*-temp-val__29599","cljs.analyzer/parse-invoke","*recur-frames*-orig-val__29600","*recur-frames*-temp-val__29601","p__29602","map__29603","cljs.analyzer/desugar-dotted-expr","G__29605","G__29606","G__29607","map__29608","lcls","cljs.analyzer/excluded?","cljs.analyzer/used?","cljs.analyzer/get-expander-ns","nstr","G__29610","cljs.analyzer/get-expander*","nsym","mvar","cached-var","cljs.core/Delay","cljs.analyzer/get-macroexpand-check-var","cljs.core/find-ns-obj","cljs.analyzer/var->sym","cljs.analyzer/do-macroexpand-check","mac-var","mchk","e29611","G__29612","G__29613","cljs.analyzer/check-macro-arity","mac-sym","map__29615","variadic?","offset","cljs.core/ffirst","p1__29614#","cljs.core/nthrest","cljs.analyzer/macroexpand-1*","form'","e29620","sym'","mac-var-ns","mac-var-name","opname","vec__29617","seq__29618","first__29619","cljs.analyzer/macroexpand-1","err__28742__auto__","e29621","cljs.analyzer/analyze-seq*","cljs.analyzer/analyze-seq*-wrap","e29622","G__29624","cljs.analyzer.analyze_seq","cljs.analyzer/analyze-list","mform","cljs.analyzer/analyze-map","*recur-frames*-orig-val__29627","*recur-frames*-temp-val__29628","p1__29625#","vs","*recur-frames*-orig-val__29629","*recur-frames*-temp-val__29630","p1__29626#","G__29631","items","*recur-frames*-orig-val__29633","*recur-frames*-temp-val__29634","p1__29632#","G__29635","cljs.analyzer/analyze-vector","*recur-frames*-orig-val__29637","*recur-frames*-temp-val__29638","p1__29636#","G__29639","cljs.analyzer/analyze-set","*recur-frames*-orig-val__29641","*recur-frames*-temp-val__29642","p1__29640#","G__29643","cljs.analyzer/analyze-js-value","keys","vals","*recur-frames*-orig-val__29646","*recur-frames*-temp-val__29647","p1__29644#","*recur-frames*-orig-val__29648","*recur-frames*-temp-val__29649","p1__29645#","cljs.analyzer/record-ns+name","cljs.analyzer/analyze-record","vec__29651","_items_","*recur-frames*-orig-val__29654","*recur-frames*-temp-val__29655","G__29656","G__29657","cljs.analyzer/elide-reader-meta","cljs.analyzer/elide-analyzer-meta","cljs.analyzer/elide-irrelevant-meta","meta-expr","p__29659","map__29660","cljs.analyzer/infer-type","cljs.core.update","ms","p1__29658#","cljs.analyzer/repl-self-require?","cljs.analyzer/invoke-arg-type-validators","p1__29662#","p1__29663#","aget-validator","aset-validator","p__29664","map__29665","cljs.analyzer/check-invoke-arg-types","vec__29667","map__29670","valid?","cljs.analyzer/analyze-form","cljs.core/record?","cljs.tagged-literals/JSValue","G__29672","cljs.analyzer/analyze*","passes","pass","G__29674","cljs.analyzer.analyze","e29675","*cljs-warnings*-orig-val__29676","*cljs-warnings*-temp-val__29677","cljs.analyzer/add-consts","compiler-state","constants-map","cljs.core/reduce-kv","*passes*-orig-val__29678","*passes*-temp-val__29679","cljs.analyzer/resolve-symbol","*private-var-access-nowarn*-orig-val__29680","*private-var-access-nowarn*-temp-val__29681","registry-ref","speced-vars","cljs.analyzer/get-spec-vars","cljs.analyzer/dump-specs","spec-vars","ns-str","p__29682","vec__29683","cljs.analyzer/register-specs","cached-ns","map__29686","registry","vars","G__29689","cljs.analyzer/analyze-form-seq","forms","cljs.analyzer.analyze_form_seq","return-last?","*file-defs*-orig-val__29690","*cljs-ns*-orig-val__29691","*cljs-file*-orig-val__29692","*alias-map*-orig-val__29693","*file-defs*-temp-val__29694","*cljs-ns*-temp-val__29695","*cljs-file*-temp-val__29696","*alias-map*-temp-val__29697","cljs.tools.reader/*alias-map*","last-ast","cljs.analyzer/ensure-defs","p1__29698#"]],"~:used-vars",["^Q",["~$cljs.analyzer/NUMERIC_SET","~$cljs.core/mapcat","~$cljs.analyzer/analyze-map","~$cljs.analyzer/confirm-var-exists","~$clojure.string/join","~$cljs.analyzer/missing-uses","~$cljs.core/symbol-identical?","~$cljs.analyzer/analyze-record","~$cljs.analyzer/missing-use?","~$cljs.analyzer/constants-ns-sym","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/comp","~$cljs.analyzer/analyze-let-bindings","~$js/cljs.analyzer","~$cljs.core/rest","~$cljs.analyzer/resolve-var","~$cljs.analyzer/resolve-alias","~$cljs.core/even?","~$cljs.analyzer/var->sym","~$cljs.analyzer/macroexpand-1*","~$cljs.analyzer/*cljs-dep-set*","~$cljs.core/str","~$cljs.core/char?","~$cljs.analyzer/analyzed?","~$cljs.analyzer/record-basis","~$cljs.analyzer/invalid-arity?","~$cljs.core/MultiFn","~$cljs.core/sequential?","~$cljs.analyzer/dotted-symbol?","~$cljs.core/odd?","~$clojure.string/starts-with?","~$cljs.analyzer/analyze-deps","~$cljs.analyzer/get-namespace","~$cljs.analyzer/*cljs-macros-is-classpath*","~$cljs.analyzer/elide-reader-meta","~$cljs.analyzer/handle-symbol-local","~$cljs.analyzer/resolve-invokeable-ns","~$cljs.analyzer/infer-type","~$cljs.analyzer/clj-ns->cljs-ns","~$cljs.analyzer/*fn-invoke-direct*","~$cljs.analyzer/js-tag?","~$cljs.analyzer/parse-invoke","~$cljs.analyzer/error-data","~$cljs.core/nthrest","~$cljs.analyzer/has-extern?*","~$cljs.analyzer/analyze-let","~$cljs.analyzer/constant-value?","~$clojure.string/split","~$cljs.analyzer/ensure-defs","~$cljs.core/vector?","~$cljs.analyzer/ast?","~$cljs.analyzer/foreign-dep?","~$js/cljs.analyzer.build-dot-form","~$cljs.core/filter","~$cljs.analyzer/checked-arrays","~$cljs.core/=","~$cljs.analyzer/hex-format","~$cljs.analyzer/analyze-js-star-args","~$cljs.analyzer/NEW_SYM","~$cljs.analyzer/es5-allowed","~$cljs.core/re-matches","~$cljs.analyzer/used?","~$cljs.analyzer/property-symbol?","~$cljs.core/doall","~$cljs.core/-write","~$cljs.analyzer/analyze","~$js/cljs.analyzer.t_cljs$analyzer28888","~$cljs.analyzer/analyze-fn-method","~$cljs.analyzer/source-info->error-data","~$cljs.analyzer/JS_STAR_SYM","~$cljs.analyzer/js-star-seg","~$cljs.analyzer/dep-has-global-exports?","~$cljs.analyzer/type?","~$js/cljs.analyzer.resolve*","~$cljs.analyzer/missing-use-macros","~$cljs.analyzer/register-specs","~$cljs.env/default-compiler-env","~$cljs.analyzer/-cljs-macros-loaded","~$cljs.core/count","~$cljs.analyzer/find-matching-method","~$cljs.core/deref","~$cljs.core/hash-map","~$cljs.analyzer/*cljs-warning-handlers*","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.analyzer/var-meta","~$cljs.analyzer/replay-accumulated-warnings","~$cljs.analyzer/desugar-ns-specs","~$cljs.core/apply","~$cljs.analyzer/analyze-seq*-wrap","~$cljs.analyzer/analyze-js-value","~$cljs.analyzer/topo-sort","~$cljs.analyzer/classify-dot-form","~$cljs.core/Keyword","~$cljs.analyzer/record-with-field?","~$goog.string/contains","~$cljs.analyzer/SENTINEL","~$cljs.core/last","~$cljs.analyzer/namespaces","~$cljs.analyzer/DOT_SYM","~$cljs.core/mapv","~$cljs.analyzer/*checked-arrays*","~$cljs.analyzer/valid-proto","~$cljs.analyzer/compile-syntax-error","~$cljs.core/not=","~$cljs.analyzer/ns->relpath","~$cljs.analyzer/js-reserved","~$cljs.core/ns-interns*","~$cljs.core/distinct","~$cljs.core/string?","~$cljs.core/dissoc","~$cljs.core/keyword-identical?","~$cljs.analyzer/check-use-macros","~$cljs.core/LazySeq","~$cljs.core/chunk-rest","~$cljs.core/atom","~$cljs.analyzer/basic-validate-ns-spec","~$cljs.analyzer/parse-type","~$cljs.analyzer/has-error-data?","~$cljs.core/concat","~$cljs.analyzer/all-values?","~$cljs.analyzer/desugar-dotted-expr","~$cljs.analyzer/check-rename-macros-inferring-missing","~$cljs.analyzer/infer-invoke","~$cljs.core/pr-str","~$cljs.analyzer/array-type?","~$cljs.analyzer/get-line","~$cljs.analyzer/excluded?","~$cljs.analyzer/array-types","~$cljs.analyzer/*check-alias-dupes*","~$clojure.string/ends-with?","~$cljs.analyzer/add-types","~$cljs.analyzer/resolve-existing-var","~$cljs.analyzer/required?","~$cljs.analyzer/analyze-fn-method-body","~$cljs.analyzer/parse-invoke*","~$cljs.analyzer/IGNORE_SYM","~$clojure.string/includes?","~$cljs.core/set","~$cljs.analyzer/truth-induced-tag","~$cljs.analyzer/ast-children","~$cljs.analyzer/analyze-symbol","~$cljs.analyzer/analyze-seq*","~$cljs.analyzer/analyze-keyword","~$cljs.analyzer/->t_cljs$analyzer28888","~$cljs.analyzer/predicate->tag","~$cljs.analyzer/elide-analyzer-meta","~$cljs.analyzer/*loop-lets*","~$cljs.core/empty?","~$cljs.analyzer/munge-global-export","~$cljs.core/memoize","~$cljs.analyzer/js-tag","~$cljs.core/fnil","~$cljs.core/merge-with","~$cljs.analyzer/get-expander","~$cljs.analyzer/->type-set","~$cljs.env/*compiler*","~$cljs.analyzer/analyze-let-body","~$cljs.analyzer/check-use-macros-inferring-missing","~$cljs.analyzer/*load-tests*","~$cljs.analyzer/canonicalize-type","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/map?","~$cljs.core/reset!","~$cljs.analyzer/get-col","~$js/cljs.analyzer.error-message","~$cljs.core/conj","~$cljs.analyzer/gets","~$cljs.analyzer/*cljs-warnings*","~$cljs.analyzer/alias->type","~$cljs.core/vary-meta","~$cljs.analyzer/error-message","~$cljs.core/zipmap","~$cljs.analyzer/analyze-const","~$cljs.core/update","~$js/require.resolve","~$cljs.analyzer/simple-predicate-induced-tag","~$cljs.core/run!","~$cljs.core/with-meta","~$cljs.core/namespace","~$cljs.analyzer/missing-rename?","~$cljs.analyzer/*allow-redef*","~$js/cljs","~$cljs.core/map","~$cljs.analyzer/*reload-macros*","~$cljs.analyzer/macro-ns-name","~$cljs.analyzer/parse-import-spec","~$cljs.analyzer/NOT_NATIVE","~$cljs.analyzer/dump-specs","~$cljs.analyzer/inferred-use-macros","~$cljs.analyzer/NUMBER_SYM","~$cljs.analyzer/use->require","~$cljs.analyzer/CLJS_CORE_SYM","~$cljs.analyzer/earmuffed?","~$cljs.analyzer/public-name?","~$cljs.analyzer/*macro-infer*","~$cljs.core/PersistentVector","~$cljs.analyzer/analyze-js-star*","~$cljs.analyzer/default-warning-handler","~$cljs.analyzer/intern-macros","~$cljs.analyzer/const-expr->constant-value","~$cljs.analyzer/BOOLEAN_OR_SEQ","~$cljs.analyzer/parse-ns-error-msg","~$cljs.core/get-in","~$cljs.core/List","~$cljs.analyzer/CLJ_NIL_SYM","~$cljs.analyzer/record-ns+name","~$cljs.core/vals","~$cljs.core/swap!","~$js/cljs.analyzer.parse","~$cljs.core/-add-method","~$cljs.analyzer/missing-renames","~$cljs.analyzer/implicit-nses","~$cljs.core/number?","~$cljs.analyzer/check-macro-arity","~$cljs.analyzer/normalize-js-tag","~$cljs.core/get","~$cljs.analyzer/unchecked-arrays?","~$cljs.analyzer/repeat-char","~$cljs.analyzer/analyze-js-star","~$cljs.analyzer/cljs-map?","~$cljs.analyzer/analyze-do-statements*","~$cljs.analyzer/analyze-let-bindings*","~$cljs.analyzer/register-constant!","~$cljs.analyzer/do-macroexpand-check","~$cljs.analyzer/valid-arity?","~$cljs.core/partition","~$cljs.analyzer/core-name?","~$cljs.analyzer/*recur-frames*","~$cljs.analyzer/STRING_SYM","~$cljs.analyzer/*load-macros*","~$cljs.analyzer/resolve-macro-ns-alias","~$cljs.analyzer/get-let-tag","~$cljs.analyzer/macroexpand-1","~$cljs.analyzer/analyze-fn-methods-pass2*","~$clojure.set/difference","~$cljs.analyzer/empty-env","~$cljs.analyzer/analyze-let-body*","~$cljs.core/symbol","~$cljs.analyzer/canonicalize-import-specs","~$cljs.analyzer/loaded-js-ns?","~$cljs.analyzer/analyze-vector","~$cljs.analyzer/unwrap-quote","~$cljs.analyzer/resolve-ns-alias","~$cljs.analyzer/inferred-rename-macros","~$cljs.core/*unchecked-arrays*","~$cljs.core/record?","~$cljs.analyzer/gen-constant-id","~$cljs.analyzer/missing-use-macro?","~$cljs.core/nnext","~$cljs.analyzer/analyzed","~$cljs.analyzer/macro-autoload-ns?","~$cljs.analyzer/get-tag","~$cljs.analyzer/resolve*","~$cljs.analyzer/BOOLEAN_SYM","~$cljs.analyzer/confirm-var-exist-warning","~$cljs.core/set?","~$cljs.analyzer/cljs-set?","~$cljs.core/sorted?","~$cljs.analyzer/type-check-induced-tag","~$cljs.core/ex-info","~$cljs.core/meta","~$cljs.analyzer/analyze-do-statements","~$cljs.core/list?","~$cljs.core/second","~$cljs.core/find-ns-obj","~$cljs.analyzer/*allow-ns*","~$cljs.analyzer/private-var-access-exceptions","~$cljs.analyzer/get-expander*","~$cljs.analyzer/*cljs-static-fns*","~$cljs.analyzer/analyze-seq","~$cljs.core/println","~$clojure.string/replace","~$cljs.analyzer/find-def-clash","~$cljs.core/interleave","~$cljs.analyzer/resolve-macro-var","~$cljs.analyzer/munge-node-lib","~$cljs.core/*target*","~$cljs.analyzer/fn-name-var","~$cljs.core/next","~$cljs.core/vec","~$cljs.analyzer/internal-js-module-exists?","~$cljs.core/sorted-map","~$cljs.analyzer/munge-path","~$cljs.core/select-keys","~$cljs.analyzer/ns->module-type","~$cljs.analyzer/get-macroexpand-check-var","~$cljs.analyzer/analyze-set","~$cljs.analyzer/build-method-call","~$cljs.analyzer/analyze-fn-method-param","~$cljs.analyzer/has-extern?","~$cljs.core/*print-fn*","~$cljs.analyzer/js-module-exists?","~$cljs.analyzer/confirm-var-exists-throw","~$cljs.analyzer/missing-rename-macro?","~$cljs.analyzer/numeric-type?","~$cljs.analyzer/repl-self-require?","~$cljs.analyzer/elide-env","~$cljs.core/not","~$cljs.analyzer/confirm-bindings","~$cljs.analyzer/var-ast","~$cljs.analyzer/analyze-wrap-meta","~$cljs.core/disj","~$cljs.core/cons","~$cljs.analyzer/node-module-dep?","~$cljs.core/assoc","~$cljs.analyzer/get-js-tag","~$cljs.analyzer/cljs-seq?","~$cljs.analyzer/get-spec-vars","~$cljs.core/interpose","~$clojure.set/union","~$cljs.analyzer/parse","~$cljs.core/assoc-in","~$cljs.core/Symbol","~$cljs.core/symbol?","~$cljs.analyzer/warning","~$cljs.analyzer/implicit-import?","~$cljs.tools.reader/*alias-map*","~$cljs.analyzer/check-uses","~$cljs.analyzer/set-test-induced-tags","~$cljs.tagged-literals/JSValue","~$cljs.analyzer/*passes*","~$cljs.analyzer/invoke-arg-type-validators","~$cljs.core/ex-data","~$cljs.analyzer/get-expander-ns","~$cljs.core/reduce-kv","~$cljs.analyzer/*file-defs*","~$cljs.analyzer/*private-var-access-nowarn*","~$cljs.analyzer/*cljs-file*","~$cljs.core/repeat","~$cljs.analyzer/*verbose*","~$cljs.analyzer/message","~$cljs.analyzer/confirm-ns","~$cljs.core/*unchecked-if*","~$cljs.core/munge","~$cljs.core/some-fn","~$cljs.analyzer/default-namespaces","~$cljs.analyzer/accumulating-warning-handler","~$cljs.analyzer/canonicalize-specs","~$cljs.analyzer/source-info","~$cljs.analyzer/t_cljs$analyzer28888","~$cljs.analyzer/analyze-form","~$cljs.core/first","~$cljs.core/butlast","~$cljs.core/seq?","~$cljs.analyzer/analyze-form-seq","~$cljs.analyzer/js-module-exists?*","~$cljs.analyzer/resolve-symbol","~$cljs.analyzer/record-tag?","~$cljs.analyzer/invokeable-ns?","~$cljs.analyzer/add-consts","~$cljs.analyzer/error","~$cljs.analyzer/core-ns?","~$cljs.analyzer/*cljs-macros-path*","~$cljs.analyzer/ANY_SYM","~$cljs.analyzer/cljs-vector?","~$cljs.core/name","~$cljs.analyzer/analyze-dot","~$cljs.core/subs","~$cljs.core/merge","~$cljs.analyzer/parse-require-spec","~$cljs.core/every?","~$cljs.analyzer/*cljs-ns*","~$cljs.core/update-in","~$cljs.analyzer/*analyze-deps*","~$cljs.analyzer/replace-env-pass","~$cljs.analyzer/analysis-error?","~$js/Error","~$cljs.core/list*","~$cljs.core/find-macros-ns","~$cljs.core/boolean","~$cljs.analyzer/js-star-interp","~$cljs.analyzer/build-dot-form","~$cljs.core/type","~$cljs.analyzer/analyze-list","~$cljs.analyzer/analyze*","~$cljs.analyzer/parse-ns-excludes","~$cljs.analyzer/elide-irrelevant-meta","~$cljs.core/some","~$cljs.analyzer/analyze-fn-methods-pass2","~$cljs.analyzer/specials","~$cljs.analyzer/unsorted-map?","~$cljs.analyzer/CLJS_CORE_MACROS_SYM","~$cljs.analyzer/check-invoke-arg-types","~$cljs.analyzer/check-duplicate-aliases","~$goog.string/endsWith","~$cljs.analyzer/infer-tag","~$cljs.core/chunked-seq?","~$cljs.analyzer/analyze-let-binding-init","~$cljs.analyzer/infer-if"]]],"~:cache-keys",["~#cmap",[["^1P","goog/dom/tagname.js"],[1586644092443,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^Q",[]],"~:deps-syms",["^17","~$goog.dom.HtmlElement"]]],["^1P","cljs/tools/reader/impl/utils.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^1=","^12"]]],["^1P","goog/math/math.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","~$goog.array","~$goog.asserts"]]],["^1P","goog/html/trustedtypes.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","cljs/env.cljc"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16"]]],["^1P","goog/labs/useragent/browser.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","~$goog.labs.userAgent.util","~$goog.object","~$goog.string.internal"]]],["^1P","goog/html/safeurl.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^;6"]]],["^1P","goog/array/array.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3"]]],["^1P","goog/debug/error.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","cljs/tools/reader/edn.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","~$cljs.tools.reader.impl.errors","^18","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","^13","^12","~$goog.string.StringBuffer"]]],["^1P","goog/dom/nodetype.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","cljs/tools/reader/impl/inspect.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16"]]],["^1P","cljs/tools/reader.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^18","^;>","^;?","^;=","^;2","^12","^;@"]]],["^1P","goog/string/typedstring.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/object/object.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/dom/asserts.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3"]]],"~:SHADOW-TIMESTAMP",[1586644100000,1586644100000,1585781238000],["^1P","goog/math/long.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","~$goog.reflect"]]],["^1P","goog/html/trustedresourceurl.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","~$goog.html.trustedtypes","^;9","^;:","^;;","^;<"]]],["^1P","goog/string/internal.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/functions/functions.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/html/safestyle.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;3","~$goog.html.SafeUrl","^;;","^;<","^;6"]]],["^1P","goog/dom/safe.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","~$goog.html.SafeScript","~$goog.html.SafeStyle","^;D","^;8","~$goog.html.uncheckedconversions","^;;","^;6"]]],["^1P","goog/structs/map.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^1P","goog/html/safehtml.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;3","~$goog.dom.TagName","~$goog.dom.tags","^;H","^;I","~$goog.html.SafeStyleSheet","^;D","^;8","^;C","^;9","^;:","~$goog.labs.userAgent.browser","^;5","^;;","^;<","^;6"]]],["^1P","goog/dom/tags.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;5"]]],["^1P","cljs/reader.cljs"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^;5","^13","~$cljs.tools.reader.edn","^;@"]]],["^1P","goog/asserts/asserts.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1P","cljs/tagged_literals.cljc"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^1>"]]],["^1P","goog/uri/uri.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;3","^12","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1P","goog/i18n/bidi.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/fs/url.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/base.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",[]]],["^1P","goog/structs/structs.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;5"]]],["^1P","cljs/tools/reader/impl/errors.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^18","^1=","~$cljs.tools.reader.impl.inspect"]]],["^1P","clojure/string.cljs"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^12","^;@"]]],["^1P","goog/string/string.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","~$goog.dom.safe","^;J","^;;","^;6"]]],["^1P","goog/reflect/reflect.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","goog/labs/useragent/util.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;6"]]],["^1P","goog/string/stringbuffer.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","cljs/tools/reader/reader_types.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^;>","^12","^;@"]]],["^1P","goog/iter/iter.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;3","^;F","~$goog.math"]]],["^1P","goog/html/uncheckedconversions.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","^;G","^;H","^;I","^;O","^;D","^;8","^;;","^;6"]]],["^1P","cljs/tools/reader/impl/commons.cljs"],[1585781237813,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^;=","^18","^;>"]]],["^1P","goog/dom/htmlelement.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17"]]],["^1P","cljs/core.cljs"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","~$goog.math.Long","~$goog.math.Integer","^12","^;5","^;2","~$goog.Uri","^;@"]]],["^1P","goog/html/safescript.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","^;C","^;;","^;<"]]],["^1P","goog/html/safestylesheet.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;3","^;I","^;5","^;;","^;<","^;6"]]],["^1P","goog/math/integer.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;B"]]],["^1P","clojure/set.cljs"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16"]]],["^1P","goog/uri/utils.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;2","^;3","^12"]]],["^1P","goog/string/const.js"],[1586644092443,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^;3","^;<"]]],["^1P","cljs/analyzer.cljc"],[1585781238779,"^:Y",["^ ","^:Z",null,"^:[",["^Q",[]],"^;0",["^17","^16","^12","^1=","^10","^19","^15","^13","^18","^1>"]]]]],"~:clj-info",["^ ","jar:file:/Users/sotiris/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/inspect.clj",1585781237000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader.clj",1585781237000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64_vlq.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/js_deps.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer/macros.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/string.clj",1581178465000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/set.clj",1581178465000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/tagged_literals.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/impl/errors.clj",1585781237000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env/macros.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/pprint.clj",1581178465000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/env.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/externs.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/analyzer.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/compiler.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/util.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/cljs/tools/reader/reader_types.clj",1585781237000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/reader.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/data.json/0.2.6/data.json-0.2.6.jar!/clojure/data/json.clj",1584832190000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/reader_types.clj",1585781237000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/instant.clj",1581178465000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/source_map/base64.clj",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/java/io.clj",1581178465000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/core.clj",1581178465000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojurescript/1.10.597/clojurescript-1.10.597.jar!/cljs/core.cljc",1585781238000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/tools.reader/1.3.2/tools.reader-1.3.2.jar!/clojure/tools/reader/default_data_readers.clj",1585781237000,"jar:file:/Users/sotiris/.m2/repository/org/clojure/clojure/1.10.1/clojure-1.10.1.jar!/clojure/edn.clj",1581178465000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/analyzer.cljc","^7",9,"^8",5,"^9",9,"^:",18],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H","^N","^O"],"^P",["^Q",["^N","^R","^S","^T"]],"~:shadow/js-access-properties",["^Q",["resolve"]],"^U","^V","^Y",null,"^Z",["^ ","^[","^10","^11","^12","^13","^13","^12","^12","^14","^15","^16","^16","^17","^17","^18","^18","^19","^19","^10","^10","^1:","^18","^15","^15","^1;","^19","^1<","^1=","^1=","^1=","^1>","^1>","^1?","^1>","^1@","^13"],"^1A",["^Q",["^1B","^1C"]],"~:shadow/js-access-global",["^Q",["require","Error"]],"^1D",null,"~:defs",["^ ","~$type?",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1372,"^8",7,"^9",1372,"^:",12,"~:arglists",["^1F",["~$quote",["^1F",[["^1;","~$t"]]]]],"~:tag","~$boolean"],"^U","^3L","^6","cljs/analyzer.cljc","^:",12,"~:method-params",["^1F",[["^1;","~$t"]]],"~:protocol-impl",null,"~:arglists-meta",["^1F",[null,null]],"^8",1,"~:variadic?",false,"^7",1372,"~:ret-tag","^<Y","^9",1372,"~:max-fixed-arity",2,"^<X","^<Y","~:fn-var",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$t"]]]]]],"~$invalid-arity?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3622,"^8",8,"^9",3622,"^:",22,"~:private",true,"^<V",["^1F",["^<W",["^1F",[["~$argc","~$method-params","~$variadic","~$max-fixed-arity"]]]]]],"^=6",true,"^U","^2I","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^=7","^=8","^=9","^=:"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3622,"^=2",["^Q",[null,"^<Y"]],"^9",3622,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=7","^=8","^=9","^=:"]]]]]],"~$record-basis",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3611,"^8",8,"^9",3611,"^:",20,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$tag"]]]]]],"^=6",true,"^U","^2H","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^=<"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3611,"^=2",["^Q",[null,"~$clj","~$any"]],"^9",3611,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=<"]]]]]],"~$get-namespace",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",607,"^8",7,"^9",607,"^:",20,"^<V",["^1F",["^<W",["^1F",[["~$key"],["~$cenv","^=@"]]]]],"~:top-fn",["^ ","^=1",false,"~:fixed-arity",2,"^=3",2,"^<Z",["^1F",[["^=@"],["^=A","^=@"]]],"^<V",["^1F",[["^=@"],["^=A","^=@"]]],"^=0",["^1F",[null,null]]]],"^U","^2P","^6","cljs/analyzer.cljc","^:",20,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^=@"],["^=A","^=@"]]],"^<V",["^1F",[["^=@"],["^=A","^=@"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^=@"],["^=A","^=@"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"~:methods",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X",["^Q",[null,"^=>","~$cljs.core/IMap","~$clj-nil"]]]],"^7",607,"^9",607,"^=3",2,"^=4",true,"^<V",["^1F",[["^=@"],["^=A","^=@"]]]],"~$error-message",["^ ","^U","^5X","^6","cljs/analyzer.cljc","^7",296,"^8",1,"^9",296,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",296,"^8",11,"^9",296,"^:",24],"^<X","^2J"],"~$elide-reader-meta",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4040,"^8",7,"^9",4040,"^:",24,"^<V",["^1F",["^<W",["^1F",[["~$m"]]]]]],"^U","^2R","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["~$m"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4040,"^=2",["^Q",["^==","^=F"]],"^9",4040,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$m"]]]]]],"~$missing-rename?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2620,"^8",7,"^9",2620,"^:",22,"^<V",["^1F",["^<W",["^1F",[["~$sym","^=A"]]]]]],"^U","^65","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^=J","^=A"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2620,"^=2","^<Y","^9",2620,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J","^=A"]]]]]],"~$resolve-invokeable-ns",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1128,"^8",7,"^9",1128,"^:",28,"^<V",["^1F",["^<W",["^1F",[["^1G","~$current-ns","^1;"]]]]]],"^U","^2T","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^1G","^=L","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1128,"^9",1128,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G","^=L","^1;"]]]]]],"~$analyze-let",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2337,"^8",7,"^9",2337,"^:",18,"^<V",["^1F",["^<W",["^1F",[["~$encl-env",["~$_","~$bindings","~$&","~$exprs","^1K","~$form"],"~$is-loop","~$widened-tags"]]]]]],"^U","^31","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^=N","~$p__29221","^=R","^=S"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2337,"^=2","^=E","^9",2337,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=N",["~$_","^=O","~$&","^=P","^1K","^=Q"],"^=R","^=S"]]]]]],"~$var-meta",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1473,"^8",7,"^9",1473,"^:",15,"^<V",["^1F",["^<W",["^1F",[["~$var"],["^=V","~$expr-env"]]]]],"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^=V"],["^=V","^=W"]]],"^<V",["^1F",[["^=V"],["^=V","^=W"]]],"^=0",["^1F",[null,null]]]],"^U","^3Y","^6","cljs/analyzer.cljc","^:",15,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^=V"],["^=V","^=W"]]],"^<V",["^1F",[["^=V"],["^=V","^=W"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^=V"],["^=V","^=W"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X",["^Q",["^=>","^=F"]]]],"^7",1473,"^9",1473,"^=3",2,"^=4",true,"^<V",["^1F",[["^=V"],["^=V","^=W"]]]],"~$desugar-ns-specs",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2971,"^8",7,"^9",2971,"^:",23,"^<V",["^1F",["^<W",["^1F",[["~$args"]]]]],"~:doc","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"^U","^3[","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^=Y"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2971,"^=2",["^Q",[null,"^4I"]],"^9",2971,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=Y"]]]]],"^=Z","Given an original set of ns specs desugar :include-macros and :refer-macros\n   usage into only primitive spec forms - :use, :require, :use-macros,\n   :require-macros. If a library includes a macro file of with the same name\n   as the namespace will also be desugared."],"~$replay-accumulated-warnings",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",735,"^8",8,"^9",735,"^:",35,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$warn-acc"]]]]]],"^=6",true,"^U","^3Z","^6","cljs/analyzer.cljc","^:",35,"^<Z",["^1F",[["^>0"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",735,"^=2","^=F","^9",735,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>0"]]]]]],"~$js-tag?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",919,"^8",7,"^9",919,"^:",14,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^2X","^6","cljs/analyzer.cljc","^:",14,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",919,"^=2","^<Y","^9",919,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$classify-dot-form",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3307,"^8",8,"^9",3307,"^:",25,"^=6",true,"^<V",["^1F",["^<W",["^1F",[[["~$target","~$member","^=Y"]]]]]]],"^=6",true,"^U","^44","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["~$p__29527"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3307,"^=2","~$cljs.core/IVector","^9",3307,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^>3","^>4","^=Y"]]]]]]],"~$NUMBER_SYM",["^ ","^U","^6?","^6","cljs/analyzer.cljc","^7",221,"^8",4,"^9",221,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",221,"^8",9,"^9",221,"^:",19],"^<X","^96"],"~$ensure-defs",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4667,"^8",7,"^9",4667,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1G"]]]]],"^=Z","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"^U","^34","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^1G"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4667,"^=2",["^Q",[null,"^=>"]],"^9",4667,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G"]]]]],"^=Z","Ensures that a non-nil defs map exists in the compiler state for a given\n  ns. (A non-nil defs map signifies that the namespace has been analyzed.)"],"~$analyze-map",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3966,"^8",7,"^9",3966,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^22","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3966,"^=2","^=>","^9",3966,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$NUMERIC_SET",["^ ","^U","^20","^6","cljs/analyzer.cljc","^7",3464,"^8",1,"^9",3464,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3464,"^8",6,"^9",3464,"^:",17],"^<X","~$cljs.core/ISet"],"~$analyze-record",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4028,"^8",7,"^9",4028,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1;","~$x"]]]]]],"^U","^27","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1;","~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4028,"^=2","^=E","^9",4028,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$x"]]]]]],"~$analyze-seq*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3932,"^8",7,"^9",3932,"^:",19,"^<V",["^1F",["^<W",["^1F",[["~$op","^1;","^=Q","~$name","~$opts"]]]]]],"^U","^5:","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^>>","^1;","^=Q","^>?","^>@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3932,"^=2","^=>","^9",3932,"^=3",5,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>>","^1;","^=Q","^>?","^>@"]]]]]],"~$constants-ns-sym",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",68,"^8",6,"^9",68,"^:",22],"^U","^29","^6","cljs/analyzer.cljc","^:",22,"^8",1,"^7",68,"^9",68,"^<X","^96","^=Z","The namespace of the constants table as a symbol."],"~$resolve-alias",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1044,"^8",7,"^9",1044,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^1G","^=J"]]]]],"^=Z","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"^U","^2@","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^1G","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1044,"^=2",["^Q",[null,"^=>"]],"^9",1044,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G","^=J"]]]]],"^=Z","Takes a namespace and an unqualified symbol and potentially returns a new\n  symbol to be used in lieu of the original."],"~$*cljs-dep-set*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",58,"^8",16,"^9",58,"^:",30,"~:dynamic",true],"^U","^2D","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>D",true,"^7",58,"^9",58,"^<X","^=>"],"~$resolve-var",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1156,"^8",7,"^9",1156,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"],["^1;","^=J","~$confirm"]]]]],"^=Z","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars.","^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^=J"],["^1;","^=J","^>F"]]],"^<V",["^1F",[["^1;","^=J"],["^1;","^=J","^>F"]]],"^=0",["^1F",[null,null]]]],"^U","^2?","^6","cljs/analyzer.cljc","^:",18,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^=J"],["^1;","^=J","^>F"]]],"^<V",["^1F",[["^1;","^=J"],["^1;","^=J","^>F"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^=J"],["^1;","^=J","^>F"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X",["^Q",["^==","^=>","^=E","^=F"]]]],"^7",1156,"^9",1156,"^=3",3,"^=4",true,"^<V",["^1F",[["^1;","^=J"],["^1;","^=J","^>F"]]],"^=Z","Resolve a var. Accepts a side-effecting confirm fn for producing\n   warnings about unresolved vars."],"~$analyze-fn-method",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2043,"^8",8,"^9",2043,"^:",25,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$locals","^=Q","~$type","~$analyze-body?"]]]]]],"^=6",true,"^U","^3G","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^1;","^>H","^=Q","^>I","^>J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2043,"^=2",["^Q",["^=>","^=F"]],"^9",2043,"^=3",5,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^>H","^=Q","^>I","^>J"]]]]]],"~$JS_STAR_SYM",["^ ","^U","^3I","^6","cljs/analyzer.cljc","^7",229,"^8",4,"^9",229,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",229,"^8",9,"^9",229,"^:",20],"^<X","^96"],"~$js-star-seg",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3454,"^8",7,"^9",3454,"^:",18,"^<V",["^1F",["^<W",["^1F",[["~$s"]]]]]],"^U","^3J","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["~$s"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3454,"^=2","^==","^9",3454,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$s"]]]]]],"~$dep-has-global-exports?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",836,"^8",7,"^9",836,"^:",30,"^<V",["^1F",["^<W",["^1F",[["~$module"]]]]]],"^U","^3K","^6","cljs/analyzer.cljc","^:",30,"^<Z",["^1F",[["^>N"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",836,"^=2","^<Y","^9",836,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>N"]]]]]],"~$register-specs",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4577,"^8",7,"^9",4577,"^:",21,"^<V",["^1F",["^<W",["^1F",[["~$cached-ns"]]]]],"^=Z","Registers speced vars found in a namespace analysis cache."],"^U","^3O","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^>P"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4577,"^=2",["^Q",[null,"^=>","^=F"]],"^9",4577,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>P"]]]]],"^=Z","Registers speced vars found in a namespace analysis cache."],"~$*passes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",64,"^8",16,"^9",64,"^:",24,"^>D",true],"^U","^9>","^6","cljs/analyzer.cljc","^:",24,"^8",1,"^>D",true,"^7",64,"^9",64,"^<X","^=>"],"~$has-extern?*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",977,"^8",7,"^9",977,"^:",19,"^<V",["^1F",["^<W",["^1F",[["~$pre","~$externs"],["^>S","^>T","~$top"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^>S","^>T"],["^>S","^>T","^>U"]]],"^<V",["^1F",[["^>S","^>T"],["^>S","^>T","^>U"]]],"^=0",["^1F",[null,null]]]],"^U","^30","^6","cljs/analyzer.cljc","^:",19,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^>S","^>T"],["^>S","^>T","^>U"]]],"^<V",["^1F",[["^>S","^>T"],["^>S","^>T","^>U"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^>S","^>T"],["^>S","^>T","^>U"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X",["^Q",["^<Y","^=>"]]]],"^7",977,"^9",977,"^=3",3,"^=4",true,"^<V",["^1F",[["^>S","^>T"],["^>S","^>T","^>U"]]]],"~$handle-symbol-local",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1151,"^8",7,"^9",1151,"^:",26,"^<V",["^1F",["^<W",["^1F",[["^=J","~$lb"]]]]]],"^U","^2S","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["^=J","^>W"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1151,"^=2",["^Q",[null,"^=E"]],"^9",1151,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J","^>W"]]]]]],"~$get-expander-ns",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3781,"^8",7,"^9",3781,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^1;","~$nstr"]]]]]],"^U","^9A","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^1;","^>Y"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3781,"^=2",["^Q",["~$cljs.core/Namespace","^=>","^=F"]],"^9",3781,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^>Y"]]]]]],"~$message",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",719,"^8",7,"^9",719,"^:",14,"^<V",["^1F",["^<W",["^1F",[["^1;","~$s"]]]]]],"^U","^9H","^6","cljs/analyzer.cljc","^:",14,"^<Z",["^1F",[["^1;","~$s"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",719,"^=2","^1<","^9",719,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$s"]]]]]],"~$parse-invoke",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3688,"^8",7,"^9",3688,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^2Y","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3688,"^9",3688,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$*cljs-warning-handlers*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",522,"^8",16,"^9",522,"^:",39,"^>D",true],"^U","^3V","^6","cljs/analyzer.cljc","^:",39,"^8",1,"^>D",true,"^7",522,"^9",522,"^<X","^=>"],"~$analyze-seq*-wrap",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3937,"^8",7,"^9",3937,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^>>","^1;","^=Q","^>?","^>@"]]]]]],"^U","^41","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^>>","^1;","^=Q","^>?","^>@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3937,"^9",3937,"^=3",5,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>>","^1;","^=Q","^>?","^>@"]]]]]],"~$confirm-bindings",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1279,"^8",7,"^9",1279,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^1;","~$names"]]]]],"^=Z","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"^U","^8T","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^1;","^?4"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1279,"^=2","^=F","^9",1279,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^?4"]]]]],"^=Z","Given env, an analysis environment env, and names, a list of symbols, confirm\n   that all correspond to declared dynamic vars."],"~$has-extern?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1003,"^8",7,"^9",1003,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^>S"],["^>S","^>T"]]]]],"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^>S"],["^>S","^>T"]]],"^<V",["^1F",[["^>S"],["^>S","^>T"]]],"^=0",["^1F",[null,null]]]],"^U","^8K","^6","cljs/analyzer.cljc","^:",18,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^>S"],["^>S","^>T"]]],"^<V",["^1F",[["^>S"],["^>S","^>T"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^>S"],["^>S","^>T"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X",["^Q",["^<Y","^=>"]]]],"^7",1003,"^9",1003,"^=3",2,"^=4",true,"^<V",["^1F",[["^>S"],["^>S","^>T"]]]],"~$foreign-dep?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2567,"^8",7,"^9",2567,"^:",19,"^<V",["^1F",["^<W",["^1F",[["~$dep"]]]]],"^<X","^<Y"],"^U","^37","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^?7"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2567,"^=2","^<Y","^9",2567,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?7"]]]]]],"~$missing-rename-macro?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2631,"^8",7,"^9",2631,"^:",28,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"^U","^8O","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2631,"^=2","^<Y","^9",2631,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"~$missing-uses",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2638,"^8",7,"^9",2638,"^:",19,"^<V",["^1F",["^<W",["^1F",[["~$uses","^1;"]]]]]],"^U","^25","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^?:","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2638,"^=2",["^Q",[null,"^==","^=>"]],"^9",2638,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?:","^1;"]]]]]],"~$get-macroexpand-check-var",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3833,"^8",12,"^9",3833,"^:",37,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"^U","^8G","^6","cljs/analyzer.cljc","^:",37,"^<Z",["^1F",[[]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",6,"^=1",false,"^7",3833,"^=2",["^Q",["^=>","^=F"]],"^9",3833,"^=3",0,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"~$missing-use?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2612,"^8",7,"^9",2612,"^:",19,"^<V",["^1F",["^<W",["^1F",[["~$lib","^=J","^=A"]]]]]],"^U","^28","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^?=","^=J","^=A"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2612,"^=2","^<Y","^9",2612,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?=","^=J","^=A"]]]]]],"~$hex-format",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",536,"^8",8,"^9",536,"^:",18,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$s","~$pad"]]]]]],"^=6",true,"^U","^3<","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["~$s","^??"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",536,"^=2","^1<","^9",536,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$s","^??"]]]]]],"~$es5-allowed",["^ ","^U","^3?","^6","cljs/analyzer.cljc","^7",191,"^8",1,"^9",191,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",191,"^8",6,"^9",191,"^:",17],"^<X","^>;"],"~$NEW_SYM",["^ ","^U","^3>","^6","cljs/analyzer.cljc","^7",235,"^8",4,"^9",235,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",235,"^8",9,"^9",235,"^:",16],"^<X","^96"],"~$source-info->error-data",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",700,"^8",8,"^9",700,"^:",31,"^=6",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","~:keys",["~$file","~$line","~$column"]]]]]]]],"^=6",true,"^U","^3H","^6","cljs/analyzer.cljc","^:",31,"^<Z",["^1F",[["~$p__28904"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",700,"^=2","^=E","^9",700,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^?D","^?E","^?F"]]]]]]]],"~$get-spec-vars",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4550,"^8",13,"^9",4550,"^:",26,"^=6",true,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"^=6",true,"^U","^91","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[[]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",6,"^=1",false,"^7",4550,"^=2",["^Q",["^=E","^=F"]],"^9",4550,"^=3",0,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"~$analyze",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4203,"^8",7,"^9",4203,"^:",14,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]]]],"^=Z","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set.","^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^<V",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^=0",["^1F",[null,null,null]]]],"^U","^3E","^6","cljs/analyzer.cljc","^:",14,"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^<V",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^=0",["^1F",[null,null,null]]],"^<Z",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^<[",null,"^=C",4,"^=0",["^1F",[null,null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X","^=>"],["^ ","^=C",4,"^=1",false]],"^7",4203,"^9",4203,"^=3",4,"^=4",true,"^<V",["^1F",[["^1;","^=Q"],["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^=Z","Given an environment, a map containing {:locals (mapping of names to bindings), :context\n  (one of :statement, :expr, :return), :ns (a symbol naming the\n  compilation ns)}, and form, returns an expression object (a map\n  containing at least :form, :op and :env keys). If expr has any (immediately)\n  nested exprs, must have a :children entry. This must be a vector of keywords naming\n  the immediately nested fields mapped to an expr or vector of exprs. This will\n  facilitate code walking without knowing the details of the op set."],"~$used?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3775,"^8",7,"^9",3775,"^:",12,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^<X","^<Y"],"^U","^3A","^6","cljs/analyzer.cljc","^:",12,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3775,"^=2","^<Y","^9",3775,"^=3",2,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]]],"~$node-module-dep?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",824,"^8",7,"^9",824,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^>N"]]]]],"^<X","^<Y"],"^U","^8Y","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^>N"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",824,"^=2","^<Y","^9",824,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>N"]]]]]],"~$parse-type",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3258,"^8",7,"^9",3258,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^>>","^1;",["~$_","~$tsym","~$fields","~$pmasks","~$body","^1K","^=Q"]]]]]]],"^U","^4M","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^>>","^1;","~$p__29520"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3258,"^=2","^=E","^9",3258,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>>","^1;",["~$_","^?M","^?N","^?O","^?P","^1K","^=Q"]]]]]]],"~$gets",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",197,"^8",7,"^9",197,"^:",11,"^<V",["^1F",["^<W",["^1F",[["~$m","~$k0","~$k1"],["~$m","^?S","^?T","~$k2"],["~$m","^?S","^?T","^?U","~$k3"]]]]],"^=B",["^ ","^=1",false,"^=C",5,"^=3",5,"^<Z",["^1F",[["~$m","^?S","^?T"],["~$m","^?S","^?T","^?U"],["~$m","^?S","^?T","^?U","^?V"]]],"^<V",["^1F",[["~$m","^?S","^?T"],["~$m","^?S","^?T","^?U"],["~$m","^?S","^?T","^?U","^?V"]]],"^=0",["^1F",[null,null,null]]]],"^U","^5T","^6","cljs/analyzer.cljc","^:",11,"^=B",["^ ","^=1",false,"^=C",5,"^=3",5,"^<Z",["^1F",[["~$m","^?S","^?T"],["~$m","^?S","^?T","^?U"],["~$m","^?S","^?T","^?U","^?V"]]],"^<V",["^1F",[["~$m","^?S","^?T"],["~$m","^?S","^?T","^?U"],["~$m","^?S","^?T","^?U","^?V"]]],"^=0",["^1F",[null,null,null]]],"^<Z",["^1F",[["~$m","^?S","^?T"],["~$m","^?S","^?T","^?U"],["~$m","^?S","^?T","^?U","^?V"]]],"^<[",null,"^=C",5,"^=0",["^1F",[null,null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",3,"^=1",false,"^<X",["^Q",["^=>","^=F"]]],["^ ","^=C",4,"^=1",false,"^<X",["^Q",["^=>","^=F"]]],["^ ","^=C",5,"^=1",false,"^<X",["^Q",["^=>","^=F"]]]],"^7",197,"^9",197,"^=3",5,"^=4",true,"^<V",["^1F",[["~$m","^?S","^?T"],["~$m","^?S","^?T","^?U"],["~$m","^?S","^?T","^?U","^?V"]]]],"~$check-rename-macros-inferring-missing",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2701,"^8",7,"^9",2701,"^:",44,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>?","~$renames"],"^1K","~$ast"],"^1;"]]]]]],"^U","^4R","^6","cljs/analyzer.cljc","^:",44,"^<Z",["^1F",[["~$p__29356","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2701,"^=2",["^Q",["^==","^=>"]],"^9",2701,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>?","^?X"],"^1K","^?Y"],"^1;"]]]]]],"~$*allow-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1334,"^8",16,"^9",1334,"^:",26,"^>D",true],"^U","^83","^6","cljs/analyzer.cljc","^:",26,"^8",1,"^>D",true,"^7",1334,"^9",1334,"^<X","^=>"],"~$analyze-const",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2428,"^8",7,"^9",2428,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^5Z","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2428,"^=2","^=E","^9",2428,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$simple-predicate-induced-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1588,"^8",8,"^9",1588,"^:",36,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$test"]]]]],"^=Z","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"^=6",true,"^U","^61","^6","cljs/analyzer.cljc","^:",36,"^<Z",["^1F",[["^1;","^@2"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1588,"^=2",["^Q",["^>6","^=F"]],"^9",1588,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Look for a predicate-induced tag when the test expression is a simple\n   application of a predicate to a local, as in (string? x)."],"~$infer-invoke",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1430,"^8",7,"^9",1430,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^1;",["^ ","~$f","~:fn","^?C",["^=Y"],"^1K","~$e"]]]]]]],"^U","^4S","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^1;","~$p__28978"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1430,"^=2",["^Q",["^=>","^96","^=F"]],"^9",1430,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;",["^ ","~$f","^@4","^?C",["^=Y"],"^1K","~$e"]]]]]]],"~$*cljs-static-fns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",54,"^8",16,"^9",54,"^:",33,"^>D",true],"^U","^86","^6","cljs/analyzer.cljc","^:",33,"^8",1,"^>D",true,"^7",54,"^9",54,"^<X","^=>"],"~$array-types",["^ ","^U","^4X","^6","cljs/analyzer.cljc","^7",3488,"^8",1,"^9",3488,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3488,"^8",6,"^9",3488,"^:",17],"^<X","^>;"],"~$*check-alias-dupes*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",53,"^8",16,"^9",53,"^:",35,"^>D",true],"^U","^4Y","^6","cljs/analyzer.cljc","^:",35,"^8",1,"^>D",true,"^7",53,"^9",53,"^<X","^=>"],"~$macro-ns-name",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3033,"^8",7,"^9",3033,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^>?"]]]]]],"^U","^6:","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^>?"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3033,"^=2",["^Q",[null,"^=>","^96"]],"^9",3033,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>?"]]]]]],"~$*reload-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",62,"^8",16,"^9",62,"^:",31,"^>D",true],"^U","^69","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^>D",true,"^7",62,"^9",62,"^<X","^=>"],"~$resolve-existing-var",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1271,"^8",7,"^9",1271,"^:",27,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"^U","^50","^6","cljs/analyzer.cljc","^:",27,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1271,"^=2",["^Q",["^==","^=>","^=E","^=F"]],"^9",1271,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Given env, an analysis environment, and sym, a symbol, resolve an existing var.\n   Emits a warning if no such var exists."],"~$required?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1114,"^8",7,"^9",1114,"^:",16,"^<V",["^1F",["^<W",["^1F",[["^1G","^1;"]]]]]],"^U","^51","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["^1G","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1114,"^=2","^<Y","^9",1114,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G","^1;"]]]]]],"~$NOT_NATIVE",["^ ","^U","^6<","^6","cljs/analyzer.cljc","^7",1388,"^8",1,"^9",1388,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1388,"^8",6,"^9",1388,"^:",16],"^<X","^>;"],"~$IGNORE_SYM",["^ ","^U","^54","^6","cljs/analyzer.cljc","^7",243,"^8",1,"^9",243,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",243,"^8",6,"^9",243,"^:",16],"^<X","^96"],"~$parse-invoke*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3627,"^8",7,"^9",3627,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^1;",["~$f","~$&","^=Y","^1K","^=Q"]]]]]]],"^U","^53","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^1;","~$p__29589"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3627,"^=2",["^Q",[null,"^=>","^=E"]],"^9",3627,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;",["~$f","~$&","^=Y","^1K","^=Q"]]]]]]],"~$*checked-arrays*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",52,"^8",16,"^9",52,"^:",32,"^>D",true],"^U","^4=","^6","cljs/analyzer.cljc","^:",32,"^8",1,"^>D",true,"^7",52,"^9",52,"^<X","^=>"],"~$ast-children",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1792,"^8",7,"^9",1792,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^?Y"]]]]]],"^U","^58","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^?Y"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1792,"^=2","^=>","^9",1792,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?Y"]]]]]],"~$loaded-js-ns?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",797,"^8",7,"^9",797,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^1;","~$prefix"]]]]],"^=Z","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked.","^<X","^<Y"],"^U","^7E","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^1;","^@D"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",797,"^=2","^<Y","^9",797,"^=3",2,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@D"]]]]],"^=Z","Check if a JavaScript namespace has been loaded. JavaScript vars are\n  not currently checked."],"~$analyze-vector",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3984,"^8",7,"^9",3984,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^7F","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3984,"^=2","^=>","^9",3984,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$unwrap-quote",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1392,"^8",7,"^9",1392,"^:",19,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","~$expr"]]]]]]],"^U","^7G","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["~$p__28969"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1392,"^=2",["^Q",[null,"^=>"]],"^9",1392,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","^@G"]]]]]]],"~$namespaces",["^ ","^U","^4:","^6","cljs/analyzer.cljc","^7",593,"^8",1,"^9",593,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",593,"^8",6,"^9",593,"^:",16],"^<X","^9Q"],"~$->t_cljs$analyzer28888",["^ ","^<U",null,"^5",["^ ","~:anonymous",true,"~:protocols",["^Q",["~$cljs.core/IMeta","~$cljs.core/IDeref","~$cljs.core/IWithMeta"]],"~:skip-protocol-flag",["^Q",["^@M","^@N","^@O"]],"~:factory","~:positional","^<V",["^1F",["^<W",["^1F",[["~$meta28889"]]]]],"^=Z","Positional factory function for cljs.analyzer/t_cljs$analyzer28888.","^6",null],"^@L",["^Q",["^@M","^@N","^@O"]],"^U","^5<","^6","cljs/analyzer.cljc","^<Z",["^1F",[["^@S"]]],"^<[",null,"^=0",["^1F",[null,null]],"^@K",true,"^8",6,"^=1",false,"^@Q","^@R","^7",601,"^=2","^9Q","^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^@S"]]]]],"^@P",["^Q",["^@M","^@N","^@O"]],"^=Z","Positional factory function for cljs.analyzer/t_cljs$analyzer28888."],"~$predicate->tag",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1524,"^8",16,"^9",1524,"^:",30,"^=6",true],"^=6",true,"^U","^5=","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^7",1524,"^9",1524,"^<X","^=E"],"~$record-with-field?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3617,"^8",8,"^9",3617,"^:",26,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^=<","~$field"]]]]]],"^=6",true,"^U","^46","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["^=<","^@V"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3617,"^=2","^<Y","^9",3617,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=<","^@V"]]]]]],"~$elide-analyzer-meta",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4043,"^8",7,"^9",4043,"^:",26,"^<V",["^1F",["^<W",["^1F",[["~$m"]]]]]],"^U","^5>","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["~$m"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4043,"^=2",["^Q",["^==","^=F"]],"^9",4043,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$m"]]]]]],"~$ns->relpath",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",268,"^8",10,"^9",268,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1G"],["^1G","~$ext"]]]]],"^=Z","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs.","^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^1G"],["^1G","^@Y"]]],"^<V",["^1F",[["^1G"],["^1G","^@Y"]]],"^=0",["^1F",[null,null]]]],"^U","^4A","^6","cljs/analyzer.cljc","^:",21,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^1G"],["^1G","^@Y"]]],"^<V",["^1F",[["^1G"],["^1G","^@Y"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1G"],["^1G","^@Y"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X","^1<"]],"^7",268,"^9",268,"^=3",2,"^=4",true,"^<V",["^1F",[["^1G"],["^1G","^@Y"]]],"^=Z","Given a namespace as a symbol return the relative path. May optionally\n     provide the file extension, defaults to :cljs."],"~$compile-syntax-error",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",747,"^8",8,"^9",747,"^:",28,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$msg","~$symbol"]]]]]],"^=6",true,"^U","^4?","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^1;","^@[","^A0"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",747,"^=2","~$cljs.core/ExceptionInfo","^9",747,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@[","^A0"]]]]]],"~$analyze-let-body",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2332,"^8",7,"^9",2332,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^1;","~$context","^=P","~$recur-frames","~$loop-lets"]]]]]],"^U","^5I","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^1;","^A3","^=P","^A4","^A5"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2332,"^9",2332,"^=3",5,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A3","^=P","^A4","^A5"]]]]]],"~$cljs-set?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",260,"^8",19,"^9",260,"^:",28,"^<X","^<Y","^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^7V","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",260,"^=2","^<Y","^9",260,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$get-col",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",631,"^8",7,"^9",631,"^:",14,"^<V",["^1F",["^<W",["^1F",[["~$x","^1;"]]]]]],"^U","^5Q","^6","cljs/analyzer.cljc","^:",14,"^<Z",["^1F",[["~$x","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",631,"^=2","^=>","^9",631,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x","^1;"]]]]]],"~$type-check-induced-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1605,"^8",8,"^9",1605,"^:",30,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"^=6",true,"^U","^7X","^6","cljs/analyzer.cljc","^:",30,"^<Z",["^1F",[["^1;","^@2"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1605,"^=2",["^Q",["^>6","^=F"]],"^9",1605,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Look for a type-check-induced tag when the test expression is the use of\n  instance? on a local, as in (instance? UUID x) or implements? on a local, as\n  in (implements? ICounted x)."],"~$basic-validate-ns-spec",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2723,"^8",7,"^9",2723,"^:",29,"^<V",["^1F",["^<W",["^1F",[["^1;","~$macros?","~$spec"]]]]]],"^U","^4L","^6","cljs/analyzer.cljc","^:",29,"^<Z",["^1F",[["^1;","^A:","^A;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2723,"^=2","^=F","^9",2723,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A:","^A;"]]]]]],"~$*cljs-warnings*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",124,"^8",16,"^9",124,"^:",31,"^>D",true],"^U","^5U","^6","cljs/analyzer.cljc","^:",31,"^8",1,"^>D",true,"^7",124,"^9",124,"^<X","^=>"],"~$alias->type",["^ ","^U","^5V","^6","cljs/analyzer.cljc","^7",968,"^8",1,"^9",968,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",968,"^8",6,"^9",968,"^:",17],"^<X","^=E"],"~$analyzed?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3585,"^8",7,"^9",3585,"^:",16,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]],"^=Z","Returns boolean if the form has already been marked as analyzed.","^<X","^<Y"],"^U","^2G","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3585,"^=2","^<Y","^9",3585,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]],"^=Z","Returns boolean if the form has already been marked as analyzed."],"~$analyze-deps",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2575,"^8",7,"^9",2575,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^?=","~$deps","^1;"],["^?=","^A@","^1;","^>@"]]]]],"^=Z","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces.","^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^?=","^A@","^1;"],["^?=","^A@","^1;","^>@"]]],"^<V",["^1F",[["^?=","^A@","^1;"],["^?=","^A@","^1;","^>@"]]],"^=0",["^1F",[null,null]]]],"^U","^2O","^6","cljs/analyzer.cljc","^:",19,"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^?=","^A@","^1;"],["^?=","^A@","^1;","^>@"]]],"^<V",["^1F",[["^?=","^A@","^1;"],["^?=","^A@","^1;","^>@"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^?=","^A@","^1;"],["^?=","^A@","^1;","^>@"]]],"^<[",null,"^=C",4,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",3,"^=1",false,"^<X","^=>"],["^ ","^=C",4,"^=1",false]],"^7",2575,"^9",2575,"^=3",4,"^=4",true,"^<V",["^1F",[["^?=","^A@","^1;"],["^?=","^A@","^1;","^>@"]]],"^=Z","Given a lib, a namespace, deps, its dependencies, env, an analysis environment\n   and opts, compiler options - analyze all of the dependencies. Required to\n   correctly analyze usage of other namespaces."],"~$array-type?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3491,"^8",7,"^9",3491,"^:",18,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]],"^<X","^<Y"],"^U","^4U","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["~$t"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3491,"^=2","^<Y","^9",3491,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]]],"~$dotted-symbol?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1029,"^8",7,"^9",1029,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"^U","^2L","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1029,"^=2","^<Y","^9",1029,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"~$*cljs-macros-is-classpath*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",57,"^8",16,"^9",57,"^:",42,"^>D",true],"^U","^2Q","^6","cljs/analyzer.cljc","^:",42,"^8",1,"^>D",true,"^7",57,"^9",57,"^<X","^=>"],"~$*allow-redef*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1333,"^8",16,"^9",1333,"^:",29,"^>D",true],"^U","^66","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>D",true,"^7",1333,"^9",1333,"^<X","^=>"],"~$analyze-fn-method-body",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2039,"^8",7,"^9",2039,"^:",29,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^A4"]]]]]],"^U","^52","^6","cljs/analyzer.cljc","^:",29,"^<Z",["^1F",[["^1;","^=Q","^A4"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2039,"^9",2039,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^A4"]]]]]],"~$infer-type",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4060,"^8",7,"^9",4060,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^1;",["^ ","^?C",["^=<"],"^1K","^?Y"],"~$_"]]]]]],"^U","^2U","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^1;","~$p__29659","~$_"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4060,"^=2",["^Q",[null,"^==","^=>"]],"^9",4060,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;",["^ ","^?C",["^=<"],"^1K","^?Y"],"~$_"]]]]]],"~$parse-import-spec",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2883,"^8",7,"^9",2883,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^1;","^A@","^A;"]]]]]],"^U","^6;","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^1;","^A@","^A;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2883,"^=2","^=E","^9",2883,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A@","^A;"]]]]]],"~$clj-ns->cljs-ns",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2915,"^8",7,"^9",2915,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]],"^=Z","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"^U","^2V","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2915,"^=2",["^Q",[null,"^=>","^96"]],"^9",2915,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]],"^=Z","Given a symbol that starts with clojure as the first segment return the\n   same symbol with the first segment replaced with cljs"],"~$constant-value?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1800,"^8",7,"^9",1800,"^:",22,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","^?Y"]]]]]]],"^U","^32","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["~$p__29102"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1800,"^=2",["^Q",["^<Y","^=>"]],"^9",1800,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","^?Y"]]]]]]],"~$dump-specs",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4555,"^8",7,"^9",4555,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^1G"]]]]],"^=Z","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"^U","^6=","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^1G"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4555,"^=2",["^Q",[null,"^=>"]],"^9",4555,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G"]]]]],"^=Z","Dumps registered speced vars for a given namespace into the compiler\n  environment."],"~$*fn-invoke-direct*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",55,"^8",16,"^9",55,"^:",34,"^>D",true],"^U","^2W","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^>D",true,"^7",55,"^9",55,"^<X","^=>"],"~$use->require",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2793,"^8",7,"^9",2793,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^1;",["^?=","~$&","~$filters","^1K","^A;"]]]]]]],"^U","^6@","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^1;","~$p__29365"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2793,"^=2","^=>","^9",2793,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;",["^?=","~$&","^AO","^1K","^A;"]]]]]]],"~$inferred-use-macros",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2654,"^8",7,"^9",2654,"^:",26,"^<V",["^1F",["^<W",["^1F",[["~$use-macros","^1;"]]]]]],"^U","^6>","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["^AR","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2654,"^=2",["^Q",[null,"^==","^=>"]],"^9",2654,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^AR","^1;"]]]]]],"~$error-data",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",738,"^8",8,"^9",738,"^:",18,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$phase"],["^1;","^AT","^A0"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^AT"],["^1;","^AT","^A0"]]],"^<V",["^1F",[["^1;","^AT"],["^1;","^AT","^A0"]]],"^=0",["^1F",[null,null]]]],"^=6",true,"^U","^2Z","^6","cljs/analyzer.cljc","^:",18,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^AT"],["^1;","^AT","^A0"]]],"^<V",["^1F",[["^1;","^AT"],["^1;","^AT","^A0"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^AT"],["^1;","^AT","^A0"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X",["^Q",["^=>","^=F"]]]],"^7",738,"^9",738,"^=3",3,"^=4",true,"^<V",["^1F",[["^1;","^AT"],["^1;","^AT","^A0"]]]],"~$analyze-symbol",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3719,"^8",7,"^9",3719,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Finds the var associated with sym"],"^U","^59","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3719,"^=2",["^Q",["^=>","^=F"]],"^9",3719,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Finds the var associated with sym"],"~$truth-induced-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1625,"^8",8,"^9",1625,"^:",25,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Refine a tag to exclude clj-nil if the test is a local."],"^=6",true,"^U","^57","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^1;","^@2"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1625,"^=2",["^Q",["^>6","^=F"]],"^9",1625,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Refine a tag to exclude clj-nil if the test is a local."],"~$confirm-var-exists",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",842,"^8",7,"^9",842,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^1;","^@D","~$suffix"],["^1;","^@D","^AX","~$missing-fn"]]]]],"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^1;","^@D","^AX"],["^1;","^@D","^AX","^AY"]]],"^<V",["^1F",[["^1;","^@D","^AX"],["^1;","^@D","^AX","^AY"]]],"^=0",["^1F",[null,null]]]],"^U","^23","^6","cljs/analyzer.cljc","^:",25,"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^1;","^@D","^AX"],["^1;","^@D","^AX","^AY"]]],"^<V",["^1F",[["^1;","^@D","^AX"],["^1;","^@D","^AX","^AY"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^@D","^AX"],["^1;","^@D","^AX","^AY"]]],"^<[",null,"^=C",4,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",3,"^=1",false,"^<X","^=>"],["^ ","^=C",4,"^=1",false,"^<X",["^Q",["^=>","^=F"]]]],"^7",842,"^9",842,"^=3",4,"^=4",true,"^<V",["^1F",[["^1;","^@D","^AX"],["^1;","^@D","^AX","^AY"]]]],"~$analyze-keyword",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1349,"^8",7,"^9",1349,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]]],"^U","^5;","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1349,"^=2","^=E","^9",1349,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]]],"~$SENTINEL",["^ ","^U","^48","^6","cljs/analyzer.cljc","^7",195,"^8",10,"^9",195,"^:",23,"^5",["^ ","^6","cljs/analyzer.cljc","^7",195,"^8",15,"^9",195,"^:",23],"^<X","~$object"],"~$analyze-let-bindings",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2326,"^8",7,"^9",2326,"^:",27,"^<V",["^1F",["^<W",["^1F",[["^=N","^=O","^>>"]]]]]],"^U","^2<","^6","cljs/analyzer.cljc","^:",27,"^<Z",["^1F",[["^=N","^=O","^>>"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2326,"^9",2326,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=N","^=O","^>>"]]]]]],"~$munge-global-export",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1040,"^8",7,"^9",1040,"^:",26,"^<V",["^1F",["^<W",["^1F",[["^>?"]]]]]],"^U","^5A","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["^>?"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1040,"^=2","^1<","^9",1040,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>?"]]]]]],"~$*loop-lets*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1332,"^8",16,"^9",1332,"^:",27,"^>D",true],"^U","^5?","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>D",true,"^7",1332,"^9",1332,"^<X","^=>"],"~$->type-set",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",933,"^8",7,"^9",933,"^:",17,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]],"^=Z","Ensures that a type tag is a set."],"^U","^5G","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["~$t"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",933,"^=2",["^Q",[null,"^>;"]],"^9",933,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]],"^=Z","Ensures that a type tag is a set."],"~$js-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1014,"^8",7,"^9",1014,"^:",13,"^<V",["^1F",["^<W",["^1F",[["^>S"],["^>S","~$tag-type"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]]]],"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^>S"],["^>S","^B6"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]],"^<V",["^1F",[["^>S"],["^>S","^B6"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]],"^=0",["^1F",[null,null,null,null]]]],"^U","^5C","^6","cljs/analyzer.cljc","^:",13,"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^>S"],["^>S","^B6"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]],"^<V",["^1F",[["^>S"],["^>S","^B6"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]],"^=0",["^1F",[null,null,null,null]]],"^<Z",["^1F",[["^>S"],["^>S","^B6"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]],"^<[",null,"^=C",4,"^=0",["^1F",[null,null,null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X","^=>"],["^ ","^=C",4,"^=1",false,"^<X",["^Q",["^=>","^96","^=F"]]]],"^7",1014,"^9",1014,"^=3",4,"^=4",true,"^<V",["^1F",[["^>S"],["^>S","^B6"],["^>S","^B6","^>T"],["^>S","^B6","^>T","^>U"]]]],"^R",["^ ","^U","^4B","^6","cljs/analyzer.cljc","^7",176,"^8",1,"^9",176,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",176,"^8",6,"^9",176,"^:",17],"^<X","^>;"],"~$*load-tests*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",60,"^8",16,"^9",60,"^:",28,"^>D",true],"^U","^5K","^6","cljs/analyzer.cljc","^:",28,"^8",1,"^>D",true,"^7",60,"^9",60,"^<X","^=>"],"~$check-use-macros-inferring-missing",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2683,"^8",7,"^9",2683,"^:",41,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>?","^?:","^AR"],"^1K","^?Y"],"^1;"]]]]]],"^U","^5J","^6","cljs/analyzer.cljc","^:",41,"^<Z",["^1F",[["~$p__29350","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2683,"^=2",["^Q",["^==","^=>"]],"^9",2683,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>?","^?:","^AR"],"^1K","^?Y"],"^1;"]]]]]],"~$canonicalize-type",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",941,"^8",7,"^9",941,"^:",24,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]]],"^U","^5L","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["~$t"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",941,"^=2",["^Q",[null,"^==","^=>","^96","^=F"]],"^9",941,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]]],"~$macroexpand-1*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3864,"^8",7,"^9",3864,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^2C","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3864,"^=2",["^Q",[null,"^==","~$cljs.core/MetaFn","^=F"]],"^9",3864,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$var->sym",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3837,"^8",8,"^9",3837,"^:",16,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^=V"]]]]]],"^=6",true,"^U","^2B","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["^=V"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3837,"^=2","^=>","^9",3837,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=V"]]]]]],"~$check-use-macros",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2670,"^8",7,"^9",2670,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]],"^<V",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]],"^=0",["^1F",[null,null]]]],"^U","^4H","^6","cljs/analyzer.cljc","^:",23,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]],"^<V",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X",["^Q",[null,"^==","^=>"]]]],"^7",2670,"^9",2670,"^=3",3,"^=4",true,"^<V",["^1F",[["^AR","^1;"],["^AR","^?9","^1;"]]]],"~$get-expander",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3821,"^8",7,"^9",3821,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^=J","^1;"]]]]],"^=Z","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"^U","^5F","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^=J","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3821,"^=2",["^Q",["^=>","^=F"]],"^9",3821,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J","^1;"]]]]],"^=Z","Given a sym, a symbol identifying a macro, and env, an analysis environment\n   return the corresponding Clojure macroexpander."],"~$analyze-js-star",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3548,"^8",7,"^9",3548,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^1;","~$jsform","^=Y","^=Q"]]]]]],"^U","^70","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^1;","^BA","^=Y","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3548,"^9",3548,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^BA","^=Y","^=Q"]]]]]],"~$cljs-map?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",252,"^8",19,"^9",252,"^:",28,"^<X","^<Y","^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^71","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",252,"^=2","^<Y","^9",252,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$do-macroexpand-check",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3841,"^8",8,"^9",3841,"^:",28,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","~$mac-var"]]]]]],"^=6",true,"^U","^75","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^1;","^=Q","^BD"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3841,"^=2",["^Q",[null,"^=F"]],"^9",3841,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^BD"]]]]]],"~$build-dot-form",["^ ","^U","^:E","^6","cljs/analyzer.cljc","^7",3318,"^8",1,"^9",3318,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3318,"^8",11,"^9",3318,"^:",25],"^<X","^2J"],"~$register-constant!",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",565,"^8",8,"^9",565,"^:",26,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$val"],["^1;","^BG"]]]]],"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^BG"],["^1;","^BG"]]],"^<V",["^1F",[["^BG"],["^1;","^BG"]]],"^=0",["^1F",[null,null]]]],"^=6",true,"^U","^74","^6","cljs/analyzer.cljc","^:",26,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^BG"],["^1;","^BG"]]],"^<V",["^1F",[["^BG"],["^1;","^BG"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^BG"],["^1;","^BG"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X",["^Q",[null,"^=>"]]]],"^7",565,"^9",565,"^=3",2,"^=4",true,"^<V",["^1F",[["^BG"],["^1;","^BG"]]]],"~$js-star-interp",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3442,"^8",7,"^9",3442,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1;","~$s"]]]]]],"^U","^:D","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1;","~$s"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3442,"^=2","^==","^9",3442,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$s"]]]]]],"~$*recur-frames*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1331,"^8",16,"^9",1331,"^:",30,"^>D",true],"^U","^79","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>D",true,"^7",1331,"^9",1331,"^<X","^=>"],"~$STRING_SYM",["^ ","^U","^7:","^6","cljs/analyzer.cljc","^7",224,"^8",4,"^9",224,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",224,"^8",9,"^9",224,"^:",19],"^<X","^96"],"~$analyze-fn-methods-pass2*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2100,"^8",7,"^9",2100,"^:",32,"^<V",["^1F",["^<W",["^1F",[["~$menv","^>H","^>I","~$meths"]]]]]],"^U","^7?","^6","cljs/analyzer.cljc","^:",32,"^<Z",["^1F",[["^BL","^>H","^>I","^BM"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2100,"^=2","^==","^9",2100,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^BL","^>H","^>I","^BM"]]]]]],"^S",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3924,"^8",7,"^9",3924,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]],"^=Z","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"^U","^7>","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3924,"^9",3924,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]],"^=Z","Given a env, an analysis environment, and form, a ClojureScript form,\n   macroexpand the form once."],"~$resolve-macro-var",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1289,"^8",7,"^9",1289,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"^U","^8<","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1289,"^=2",["^Q",[null,"^=>","^=F"]],"^9",1289,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Given env, an analysis environment, and sym, a symbol, resolve a macro."],"~$analyze-let-binding-init",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2271,"^8",7,"^9",2271,"^:",31,"^<V",["^1F",["^<W",["^1F",[["^1;","~$init","^A5"]]]]]],"^U","^:U","^6","cljs/analyzer.cljc","^:",31,"^<Z",["^1F",[["^1;","^BP","^A5"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2271,"^9",2271,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^BP","^A5"]]]]]],"~$infer-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1442,"^8",7,"^9",1442,"^:",16,"^<V",["^1F",["^<W",["^1F",[["^1;","~$e"]]]]],"^=Z","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"^U","^:S","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["^1;","~$e"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1442,"^=2",["^Q",[null,"^=>"]],"^9",1442,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$e"]]]]],"^=Z","Given env, an analysis environment, and e, an AST node, return the inferred\n   type of the node"],"~$canonicalize-import-specs",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2964,"^8",7,"^9",2964,"^:",32,"^<V",["^1F",["^<W",["^1F",[["~$specs"]]]]]],"^U","^7D","^6","cljs/analyzer.cljc","^:",32,"^<Z",["^1F",[["^BS"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2964,"^9",2964,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^BS"]]]]]],"~$analyze-form-seq",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4640,"^8",7,"^9",4640,"^:",23,"^<V",["^1F",["^<W",["^1F",[["~$forms"],["^BU","^>@"],["^BU","^>@","~$return-last?"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^BU"],["^BU","^>@"],["^BU","^>@","^BV"]]],"^<V",["^1F",[["^BU"],["^BU","^>@"],["^BU","^>@","^BV"]]],"^=0",["^1F",[null,null,null]]]],"^U","^9V","^6","cljs/analyzer.cljc","^:",23,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^BU"],["^BU","^>@"],["^BU","^>@","^BV"]]],"^<V",["^1F",[["^BU"],["^BU","^>@"],["^BU","^>@","^BV"]]],"^=0",["^1F",[null,null,null]]],"^<Z",["^1F",[["^BU"],["^BU","^>@"],["^BU","^>@","^BV"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false]],"^7",4640,"^9",4640,"^=3",3,"^=4",true,"^<V",["^1F",[["^BU"],["^BU","^>@"],["^BU","^>@","^BV"]]]],"~$analyze-let-body*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2329,"^8",7,"^9",2329,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^1;","^A3","^=P"]]]]]],"^U","^7B","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^1;","^A3","^=P"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2329,"^=2","^=>","^9",2329,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A3","^=P"]]]]]],"~$analyze-js-star*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3519,"^8",7,"^9",3519,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^1;","^BA","^=Y","^=Q"]]]]]],"^U","^6F","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^1;","^BA","^=Y","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3519,"^=2","^=E","^9",3519,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^BA","^=Y","^=Q"]]]]]],"~$inferred-rename-macros",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2659,"^8",7,"^9",2659,"^:",29,"^<V",["^1F",["^<W",["^1F",[["~$rename-macros","^1;"]]]]]],"^U","^7I","^6","cljs/analyzer.cljc","^:",29,"^<Z",["^1F",[["^BZ","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2659,"^=2",["^Q",[null,"^==","^=>"]],"^9",2659,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^BZ","^1;"]]]]]],"~$parse-ns-error-msg",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2720,"^8",7,"^9",2720,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^A;","^@["]]]]]],"^U","^6K","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^A;","^@["]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2720,"^=2","^1<","^9",2720,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^A;","^@["]]]]]],"~$missing-use-macro?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2625,"^8",7,"^9",2625,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^?=","^=J"]]]]]],"^U","^7M","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^?=","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2625,"^=2",["^Q",["^<Y","^=F"]],"^9",2625,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?=","^=J"]]]]]],"~$CLJ_NIL_SYM",["^ ","^U","^6N","^6","cljs/analyzer.cljc","^7",218,"^8",4,"^9",218,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",218,"^8",9,"^9",218,"^:",20],"^<X","^96"],"~$record-ns+name",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4020,"^8",7,"^9",4020,"^:",21,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^6O","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4020,"^=2","^4I","^9",4020,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$analyzed",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3577,"^8",7,"^9",3577,"^:",15,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]],"^=Z","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"^U","^7O","^6","cljs/analyzer.cljc","^:",15,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3577,"^=2",["^Q",["^==","^=>","^B<","^=F"]],"^9",3577,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]],"^=Z","Mark a form as being analyzed. Assumes x satisfies IMeta. Useful to suppress\n  warnings that will have been caught by a first compiler pass."],"~$resolve-symbol",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4245,"^8",7,"^9",4245,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"^U","^9X","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4245,"^=2",["^Q",[null,"^=>"]],"^9",4245,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"~$missing-renames",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2644,"^8",7,"^9",2644,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^?X","^1;"]]]]]],"^U","^6T","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^?X","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2644,"^=2",["^Q",[null,"^==","^=>"]],"^9",2644,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?X","^1;"]]]]]],"~$resolve*",["^ ","^U","^7R","^6","cljs/analyzer.cljc","^7",1065,"^8",1,"^9",1065,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1065,"^8",11,"^9",1065,"^:",19],"^<X","^2J"],"~$*cljs-macros-path*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",56,"^8",16,"^9",56,"^:",34,"^>D",true],"^U","^:2","^6","cljs/analyzer.cljc","^:",34,"^8",1,"^>D",true,"^7",56,"^9",56,"^<X","^=>"],"~$confirm-var-exist-warning",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",790,"^8",7,"^9",790,"^:",32,"^<V",["^1F",["^<W",["^1F",[["^1;","^@D","^AX"]]]]]],"^U","^7T","^6","cljs/analyzer.cljc","^:",32,"^<Z",["^1F",[["^1;","^@D","^AX"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",790,"^=2","~$function","^9",790,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@D","^AX"]]]]]],"~$repeat-char",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",530,"^8",8,"^9",530,"^:",19,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$c","~$n"]]]]]],"^=6",true,"^U","^6[","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["~$c","~$n"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",530,"^9",530,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$c","~$n"]]]]]],"~$unchecked-arrays?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",165,"^8",7,"^9",165,"^:",24,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"^U","^6Z","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[[]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",165,"^=2","^<Y","^9",165,"^=3",0,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"~$core-ns?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1821,"^8",8,"^9",1821,"^:",16,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$ns-sym"]]]]]],"^=6",true,"^U","^:1","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["^C="]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1821,"^=2","^<Y","^9",1821,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^C="]]]]]],"~$analyze-dot",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3369,"^8",7,"^9",3369,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;","^>3","^@V","~$member+","^=Q"]]]]]],"^U","^:6","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^1;","^>3","^@V","^C?","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3369,"^9",3369,"^=3",5,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^>3","^@V","^C?","^=Q"]]]]]],"~$analyze-do-statements",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2245,"^8",7,"^9",2245,"^:",28,"^<V",["^1F",["^<W",["^1F",[["^1;","^=P"]]]]]],"^U","^7[","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^1;","^=P"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2245,"^9",2245,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=P"]]]]]],"~$get-line",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",628,"^8",7,"^9",628,"^:",15,"^<V",["^1F",["^<W",["^1F",[["~$x","^1;"]]]]]],"^U","^4V","^6","cljs/analyzer.cljc","^:",15,"^<Z",["^1F",[["~$x","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",628,"^=2","^=>","^9",628,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x","^1;"]]]]]],"~$analyze-do-statements*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2242,"^8",7,"^9",2242,"^:",29,"^<V",["^1F",["^<W",["^1F",[["^1;","^=P"]]]]]],"^U","^72","^6","cljs/analyzer.cljc","^:",29,"^<Z",["^1F",[["^1;","^=P"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2242,"^=2","^==","^9",2242,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=P"]]]]]],"~$analyze-seq",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3941,"^8",7,"^9",3941,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]]]],"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^<V",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^=0",["^1F",[null,null]]]],"^U","^87","^6","cljs/analyzer.cljc","^:",18,"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^<V",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]],"^<[",null,"^=C",4,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",3,"^=1",false,"^<X","^=>"],["^ ","^=C",4,"^=1",false,"^<X","^=>"]],"^7",3941,"^9",3941,"^=3",4,"^=4",true,"^<V",["^1F",[["^1;","^=Q","^>?"],["^1;","^=Q","^>?","^>@"]]]],"~$desugar-dotted-expr",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3692,"^8",7,"^9",3692,"^:",26,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","^@G"]]]]]]],"^U","^4Q","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["~$p__29602"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3692,"^9",3692,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","^@G"]]]]]]],"~$private-var-access-exceptions",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",1092,"^8",16,"^9",1092,"^:",45,"^=6",true],"^=6",true,"^U","^84","^6","cljs/analyzer.cljc","^:",45,"^8",1,"^7",1092,"^9",1092,"^<X","^>;","^=Z","Specially-treated symbols for which we don't trigger :private-var-access warnings."],"~$all-values?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3594,"^8",8,"^9",3594,"^:",19,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^=P"]]]]],"^<X","^<Y"],"^=6",true,"^U","^4P","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^=P"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3594,"^=2","^<Y","^9",3594,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=P"]]]]]],"~$find-def-clash",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3022,"^8",7,"^9",3022,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1;","^1G","~$segments"]]]]]],"^U","^8:","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1;","^1G","^CI"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3022,"^=2","^=F","^9",3022,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^1G","^CI"]]]]]],"~$has-error-data?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",765,"^8",7,"^9",765,"^:",22,"^<V",["^1F",["^<W",["^1F",[["~$ex"]]]]],"^<X","^<Y"],"^U","^4N","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^CK"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",765,"^=2","^<Y","^9",765,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^CK"]]]]]],"~$get-expander*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3796,"^8",7,"^9",3796,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^=J","^1;"]]]]]],"^U","^85","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^=J","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3796,"^=2",["^Q",["^=>","^=F"]],"^9",3796,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J","^1;"]]]]]],"~$fn-name-var",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2081,"^8",7,"^9",2081,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;","^>H","^>?"]]]]]],"^U","^8?","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^1;","^>H","^>?"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2081,"^=2",["^Q",["^=>","^=F"]],"^9",2081,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^>H","^>?"]]]]]],"~$munge-node-lib",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1036,"^8",7,"^9",1036,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^>?"]]]]]],"^U","^8=","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^>?"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1036,"^=2","^1<","^9",1036,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>?"]]]]]],"~$internal-js-module-exists?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",807,"^8",8,"^9",807,"^:",34,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$js-module-index","^>N"]]]]]],"^=6",true,"^U","^8B","^6","cljs/analyzer.cljc","^:",34,"^<Z",["^1F",[["^CP","^>N"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",807,"^=2","^<Y","^9",807,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^CP","^>N"]]]]]],"~$*load-macros*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",61,"^8",16,"^9",61,"^:",29,"^>D",true],"^U","^7;","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>D",true,"^7",61,"^9",61,"^<X","^=>"],"~$add-types",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",955,"^8",7,"^9",955,"^:",16,"^<V",["^1F",["^<W",["^1F",[[],["~$t1"],["^CS","~$t2"],["^CS","^CT","~$&","~$ts"]]]]],"^=Z","Produces a union of types.","^=B",["^ ","^=1",true,"^=C",2,"^=3",2,"^<Z",["^1F",[[],["^CS"],["^CS","^CT"]]],"^<V",["^1F",[[],["^CS"],["^CS","^CT"],["^CS","^CT","~$&","^CU"]]],"^=0",["^1F",[null,null,null,null]]]],"^U","^4[","^6","cljs/analyzer.cljc","^:",16,"^=B",["^ ","^=1",true,"^=C",2,"^=3",2,"^<Z",["^1F",[[],["^CS"],["^CS","^CT"]]],"^<V",["^1F",[[],["^CS"],["^CS","^CT"],["^CS","^CT","~$&","^CU"]]],"^=0",["^1F",[null,null,null,null]]],"^<Z",["^1F",[[],["^CS"],["^CS","^CT"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null,null,null]],"^8",1,"^=1",true,"^=D",[["^ ","^=C",0,"^=1",false,"^<X","^96"],["^ ","^=C",1,"^=1",false],["^ ","^=C",2,"^=1",false,"^<X",["^Q",[null,"^==","^=>","^96","^=F"]]],["^ ","^=C",2,"^=1",true,"^<X","^=>"]],"^7",955,"^9",955,"^=3",2,"^=4",true,"^<V",["^1F",[[],["^CS"],["^CS","^CT"],["^CS","^CT","~$&","^CU"]]],"^=Z","Produces a union of types."],"~$excluded?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3769,"^8",7,"^9",3769,"^:",16,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^<X","^<Y"],"^U","^4W","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3769,"^=2","^<Y","^9",3769,"^=3",2,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]]],"~$empty-env",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",686,"^8",7,"^9",686,"^:",16,"^<V",["^1F",["^<W",["^1F",[[]]]]],"^=Z","Construct an empty analysis environment. Required to analyze forms."],"^U","^7A","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[[]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",686,"^9",686,"^=3",0,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[]]]]],"^=Z","Construct an empty analysis environment. Required to analyze forms."],"~$public-name?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",908,"^8",7,"^9",908,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^1G","^=J"]]]]],"^=Z","Is sym public?","^<X","^<Y"],"^U","^6C","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^1G","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",908,"^=2","^<Y","^9",908,"^=3",2,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G","^=J"]]]]],"^=Z","Is sym public?"],"~$default-warning-handler",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",514,"^8",7,"^9",514,"^:",30,"^<V",["^1F",["^<W",["^1F",[["~$warning-type","^1;","~$extra"]]]]]],"^U","^6G","^6","cljs/analyzer.cljc","^:",30,"^<Z",["^1F",[["^CZ","^1;","^C["]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",514,"^=2",["^Q",[null,"^=F"]],"^9",514,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^CZ","^1;","^C["]]]]]],"~$resolve-ns-alias",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",868,"^8",7,"^9",868,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^1;","^>?"],["^1;","^>?","~$not-found"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^<V",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^=0",["^1F",[null,null]]]],"^U","^7H","^6","cljs/analyzer.cljc","^:",23,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^<V",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X",["^Q",[null,"^=>"]]]],"^7",868,"^9",868,"^=3",3,"^=4",true,"^<V",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]]],"~$intern-macros",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",634,"^8",7,"^9",634,"^:",20,"^<V",["^1F",["^<W",["^1F",[["^1G"],["^1G","~$reload"]]]]],"^=Z","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment.","^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^1G"],["^1G","^D3"]]],"^<V",["^1F",[["^1G"],["^1G","^D3"]]],"^=0",["^1F",[null,null]]]],"^U","^6H","^6","cljs/analyzer.cljc","^:",20,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^1G"],["^1G","^D3"]]],"^<V",["^1F",[["^1G"],["^1G","^D3"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1G"],["^1G","^D3"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X","^=>"],["^ ","^=C",2,"^=1",false,"^<X",["^Q",[null,"^=>","^=F"]]]],"^7",634,"^9",634,"^=3",2,"^=4",true,"^<V",["^1F",[["^1G"],["^1G","^D3"]]],"^=Z","Given a Clojure namespace intern all macros into the ambient ClojureScript\n   analysis environment."],"~$const-expr->constant-value",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1806,"^8",7,"^9",1806,"^:",33,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","~$e"]]]]]]],"^U","^6I","^6","cljs/analyzer.cljc","^:",33,"^<Z",["^1F",[["~$p__29110"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1806,"^9",1806,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[["^ ","^?C",["^>>"],"^1K","~$e"]]]]]]],"~$BOOLEAN_OR_SEQ",["^ ","^U","^6J","^6","cljs/analyzer.cljc","^7",1390,"^8",1,"^9",1390,"^:",20,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1390,"^8",6,"^9",1390,"^:",20],"^<X","^>;"],"~$*macro-infer*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",63,"^8",16,"^9",63,"^:",29,"^>D",true],"^U","^6D","^6","cljs/analyzer.cljc","^:",29,"^8",1,"^>D",true,"^7",63,"^9",63,"^<X","^=>"],"~$DOT_SYM",["^ ","^U","^4;","^6","cljs/analyzer.cljc","^7",232,"^8",4,"^9",232,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",232,"^8",9,"^9",232,"^:",16],"^<X","^96"],"~$gen-constant-id",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",545,"^8",7,"^9",545,"^:",22,"^<V",["^1F",["^<W",["^1F",[["~$value"]]]]]],"^U","^7L","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^D:"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",545,"^=2",["^Q",["^=>","^96"]],"^9",545,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^D:"]]]]]],"~$BOOLEAN_SYM",["^ ","^U","^7S","^6","cljs/analyzer.cljc","^7",226,"^8",1,"^9",226,"^:",17,"^5",["^ ","^6","cljs/analyzer.cljc","^7",226,"^8",6,"^9",226,"^:",17],"^<X","^96"],"~$macro-autoload-ns?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2900,"^8",7,"^9",2900,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^=Q"]]]]],"^=Z","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true.","^<X","^<Y"],"^U","^7P","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2900,"^=2","^<Y","^9",2900,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=Q"]]]]],"^=Z","Given a spec form check whether the spec namespace requires a macro file\n   of the same name. If so return true."],"~$get-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1354,"^8",7,"^9",1354,"^:",14,"^<V",["^1F",["^<W",["^1F",[["~$e"]]]]]],"^U","^7Q","^6","cljs/analyzer.cljc","^:",14,"^<Z",["^1F",[["~$e"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1354,"^=2","^=>","^9",1354,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$e"]]]]]],"~$implicit-nses",["^ ","^U","^6U","^6","cljs/analyzer.cljc","^7",781,"^8",1,"^9",781,"^:",19,"^5",["^ ","^6","cljs/analyzer.cljc","^7",781,"^8",6,"^9",781,"^:",19],"^<X","^>;"],"~$valid-proto",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1782,"^8",7,"^9",1782,"^:",18,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^4>","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1782,"^=2",["^Q",["^96","^=F"]],"^9",1782,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$normalize-js-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",924,"^8",7,"^9",924,"^:",23,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^6X","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",924,"^=2",["^Q",[null,"^==","^B<","^=F"]],"^9",924,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$analyze-list",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3978,"^8",7,"^9",3978,"^:",19,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^:G","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3978,"^=2","^=>","^9",3978,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$warning",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",726,"^8",7,"^9",726,"^:",14,"^<V",["^1F",["^<W",["^1F",[["^CZ","^1;","^C["]]]]]],"^U","^98","^6","cljs/analyzer.cljc","^:",14,"^<Z",["^1F",[["^CZ","^1;","^C["]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",726,"^=2","^=F","^9",726,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^CZ","^1;","^C["]]]]]],"~$implicit-import?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",783,"^8",7,"^9",783,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^1;","^@D","^AX"]]]]],"^<X","^<Y"],"^U","^99","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^1;","^@D","^AX"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",783,"^=2","^<Y","^9",783,"^=3",3,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@D","^AX"]]]]]],"~$missing-use-macros",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2649,"^8",7,"^9",2649,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^AR","^1;"]]]]]],"^U","^3N","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^AR","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2649,"^=2",["^Q",[null,"^==","^=>"]],"^9",2649,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^AR","^1;"]]]]]],"~$analyze*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4191,"^8",7,"^9",4191,"^:",15,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^>?","^>@"]]]]]],"^U","^:H","^6","cljs/analyzer.cljc","^:",15,"^<Z",["^1F",[["^1;","^=Q","^>?","^>@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4191,"^=2",["^Q",[null,"^=>"]],"^9",4191,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^>?","^>@"]]]]]],"~$-cljs-macros-loaded",["^ ","^U","^3Q","^6","cljs/analyzer.cljc","^7",122,"^8",1,"^9",122,"^:",25,"^5",["^ ","^6","cljs/analyzer.cljc","^7",122,"^8",6,"^9",122,"^:",25],"^<X","~$cljs.core/Atom"],"~$check-uses",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2662,"^8",7,"^9",2662,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^?:","^1;"]]]]]],"^U","^9;","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^?:","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2662,"^=2","^=F","^9",2662,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^?:","^1;"]]]]]],"~$set-test-induced-tags",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1637,"^8",8,"^9",1637,"^:",29,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"^=6",true,"^U","^9<","^6","cljs/analyzer.cljc","^:",29,"^<Z",["^1F",[["^1;","^@2"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1637,"^=2",["^Q",[null,"^==","^=>"]],"^9",1637,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^@2"]]]]],"^=Z","Looks at the test and sets any tags which are induced by virtue\n  of the test being truthy. For example in (if (string? x) x :bar)\n  the local x in the then branch must be of string type."],"~$find-matching-method",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1361,"^8",7,"^9",1361,"^:",27,"^<V",["^1F",["^<W",["^1F",[["~$f","~$params"]]]]]],"^U","^3S","^6","cljs/analyzer.cljc","^:",27,"^<Z",["^1F",[["~$f","^DK"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1361,"^=2",["^Q",["^=>","^=F"]],"^9",1361,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$f","^DK"]]]]]],"~$*private-var-access-nowarn*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",66,"^8",16,"^9",66,"^:",43,"^>D",true],"^U","^9D","^6","cljs/analyzer.cljc","^:",43,"^8",1,"^>D",true,"^7",66,"^9",66,"^<X","^=>"],"~$invoke-arg-type-validators",["^ ","^U","^9?","^6","cljs/analyzer.cljc","^7",4121,"^8",1,"^9",4121,"^:",32,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4121,"^8",6,"^9",4121,"^:",32],"^<X","^=E"],"~$*cljs-file*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",51,"^8",16,"^9",51,"^:",27,"^>D",true],"^U","^9E","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>D",true,"^7",51,"^9",51,"^<X","^=>"],"~$CLJS_CORE_MACROS_SYM",["^ ","^U","^:O","^6","cljs/analyzer.cljc","^7",241,"^8",4,"^9",241,"^:",29,"^5",["^ ","^6","cljs/analyzer.cljc","^7",241,"^8",9,"^9",241,"^:",29],"^<X","^96"],"~$*file-defs*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",65,"^8",16,"^9",65,"^:",27,"^>D",true],"^U","^9C","^6","cljs/analyzer.cljc","^:",27,"^8",1,"^>D",true,"^7",65,"^9",65,"^<X","^=>"],"~$infer-if",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1398,"^8",7,"^9",1398,"^:",15,"^<V",["^1F",["^<W",["^1F",[["^1;","~$e"]]]]]],"^U","^:V","^6","cljs/analyzer.cljc","^:",15,"^<Z",["^1F",[["^1;","~$e"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1398,"^=2",["^Q",[null,"^==","^=>","^96"]],"^9",1398,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$e"]]]]]],"~$topo-sort",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",276,"^8",10,"^9",276,"^:",19,"^<V",["^1F",["^<W",["^1F",[["~$x","~$get-deps"],["~$x","~$depth","~$state","~$memo-get-deps"]]]]],"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["~$x","^DS"],["~$x","^DT","^DU","^DV"]]],"^<V",["^1F",[["~$x","^DS"],["~$x","^DT","^DU","^DV"]]],"^=0",["^1F",[null,null]]]],"^U","^43","^6","cljs/analyzer.cljc","^:",19,"^=B",["^ ","^=1",false,"^=C",4,"^=3",4,"^<Z",["^1F",[["~$x","^DS"],["~$x","^DT","^DU","^DV"]]],"^<V",["^1F",[["~$x","^DS"],["~$x","^DT","^DU","^DV"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["~$x","^DS"],["~$x","^DT","^DU","^DV"]]],"^<[",null,"^=C",4,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",4,"^=1",false,"^<X",["^Q",["^4I","^=F"]]]],"^7",276,"^9",276,"^=3",4,"^=4",true,"^<V",["^1F",[["~$x","^DS"],["~$x","^DT","^DU","^DV"]]]],"~$*verbose*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",120,"^8",16,"^9",120,"^:",25,"^>D",true],"^U","^9G","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^>D",true,"^7",120,"^9",120,"^<X","^=>"],"~$analyze-js-value",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3996,"^8",7,"^9",3996,"^:",23,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^42","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3996,"^=2","^=E","^9",3996,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$ns->module-type",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1059,"^8",7,"^9",1059,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^1G"]]]]]],"^U","^8F","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^1G"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1059,"^=2",["^Q",["^45","^=F"]],"^9",1059,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G"]]]]]],"~$source-info",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",706,"^8",7,"^9",706,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;"],["^>?","^1;"]]]]],"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^1;"],["^>?","^1;"]]],"^<V",["^1F",[["^1;"],["^>?","^1;"]]],"^=0",["^1F",[null,null]]]],"^U","^9P","^6","cljs/analyzer.cljc","^:",18,"^=B",["^ ","^=1",false,"^=C",2,"^=3",2,"^<Z",["^1F",[["^1;"],["^>?","^1;"]]],"^<V",["^1F",[["^1;"],["^>?","^1;"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;"],["^>?","^1;"]]],"^<[",null,"^=C",2,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",1,"^=1",false,"^<X",["^Q",["^=>","^=F"]]],["^ ","^=C",2,"^=1",false,"^<X",["^Q",["^=>","^=E","^=F"]]]],"^7",706,"^9",706,"^=3",2,"^=4",true,"^<V",["^1F",[["^1;"],["^>?","^1;"]]]],"~$t_cljs$analyzer28888",["^ ","~:num-fields",1,"^@L",["^Q",["^@M","^@N","^@O"]],"^U","^9Q","^6","cljs/analyzer.cljc","~:type",true,"^@K",true,"^8",6,"^7",601,"~:record",false,"^<X","^C9","^@P",["^Q",["^@M","^@N","^@O"]]],"~$analyze-fn-method-param",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2011,"^8",7,"^9",2011,"^:",30,"^<V",["^1F",["^<W",["^1F",[["^1;"]]]]]],"^U","^8J","^6","cljs/analyzer.cljc","^:",30,"^<Z",["^1F",[["^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2011,"^=2","^C9","^9",2011,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;"]]]]]],"~$repl-self-require?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4073,"^8",8,"^9",4073,"^:",26,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A@"]]]]]],"^=6",true,"^U","^8Q","^6","cljs/analyzer.cljc","^:",26,"^<Z",["^1F",[["^1;","^A@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4073,"^=2",["^Q",["^=>","^=F"]],"^9",4073,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A@"]]]]]],"~$analyze-set",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3990,"^8",7,"^9",3990,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"^U","^8H","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^1;","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3990,"^=2","^=>","^9",3990,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q"]]]]]],"~$numeric-type?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3466,"^8",7,"^9",3466,"^:",20,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]],"^<X","^<Y"],"^U","^8P","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["~$t"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3466,"^=2","^<Y","^9",3466,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$t"]]]]]],"~$munge-path",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",264,"^8",10,"^9",264,"^:",20,"^<V",["^1F",["^<W",["^1F",[["~$ss"]]]]]],"^U","^8D","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^E8"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",264,"^=2",["^Q",["^=>","^1<","^96"]],"^9",264,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^E8"]]]]]],"~$ast?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",291,"^8",7,"^9",291,"^:",11,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]],"^<X","^<Y"],"^U","^36","^6","cljs/analyzer.cljc","^:",11,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",291,"^=2","^<Y","^9",291,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$checked-arrays",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",168,"^8",7,"^9",168,"^:",21,"^<V",["^1F",["^<W",["^1F",[[]]]]],"^=Z","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"^U","^3:","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[[]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",168,"^=2",["^Q",["^=>","^=F"]],"^9",168,"^=3",0,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[]]]]],"^=Z","Returns false-y, :warn, or :error based on configuration and the\n   current value of *unchecked-arrays*."],"~$elide-env",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1785,"^8",7,"^9",1785,"^:",16,"^<V",["^1F",["^<W",["^1F",[["^1;","^?Y","^>@"]]]]]],"^U","^8R","^6","cljs/analyzer.cljc","^:",16,"^<Z",["^1F",[["^1;","^?Y","^>@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1785,"^=2",["^Q",["^==","^=F"]],"^9",1785,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^?Y","^>@"]]]]]],"~$js-module-exists?*",["^ ","^U","^9W","^6","cljs/analyzer.cljc","^7",818,"^8",1,"^9",818,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",818,"^8",6,"^9",818,"^:",24],"^<X","^C9"],"~$parse-require-spec",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2827,"^8",7,"^9",2827,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^1;","^A:","^A@","~$aliases","^A;"]]]]]],"^U","^:9","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^1;","^A:","^A@","^E>","^A;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2827,"^=2",["^Q",["^=>","^=F"]],"^9",2827,"^=3",5,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^A:","^A@","^E>","^A;"]]]]]],"~$analyze-wrap-meta",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4049,"^8",7,"^9",4049,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^@G"]]]]]],"^U","^8V","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^@G"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4049,"^=2",["^Q",[null,"^=E"]],"^9",4049,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^@G"]]]]]],"~$ANY_SYM",["^ ","^U","^:3","^6","cljs/analyzer.cljc","^7",245,"^8",1,"^9",245,"^:",13,"^5",["^ ","^6","cljs/analyzer.cljc","^7",245,"^8",6,"^9",245,"^:",13],"^<X","^96"],"~$property-symbol?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3305,"^8",16,"^9",3305,"^:",32,"^=6",true],"^=6",true,"^U","^3B","^6","cljs/analyzer.cljc","^:",32,"^<Z",["^1F",[["~$p1__29526#"]]],"^<[",null,"^=0",["^1F",[]],"^8",1,"^=1",false,"^7",3305,"^=2","^<Y","^9",3305,"^=3",1,"^=4",true,"^<V",null],"~$analyze-js-star-args",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3509,"^8",8,"^9",3509,"^:",28,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$js-op","^1;","^=Y"]]]]]],"^=6",true,"^U","^3=","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^ED","^1;","^=Y"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3509,"^=2",["^Q",["^=>","^=F"]],"^9",3509,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^ED","^1;","^=Y"]]]]]],"~$cljs-seq?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",248,"^8",19,"^9",248,"^:",28,"^<X","^<Y","^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^90","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",248,"^=2","^<Y","^9",248,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$get-js-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3435,"^8",7,"^9",3435,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^=Q"]]]]]],"^U","^8[","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3435,"^=2",["^Q",["^=>","^96","^=F"]],"^9",3435,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=Q"]]]]]],"~$parse",["^ ","^U","^94","^6","cljs/analyzer.cljc","^7",1471,"^8",1,"^9",1471,"^:",16,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1471,"^8",11,"^9",1471,"^:",16],"^<X","^2J"],"~$*analyze-deps*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",59,"^8",16,"^9",59,"^:",30,"^>D",true],"^U","^:=","^6","cljs/analyzer.cljc","^:",30,"^8",1,"^>D",true,"^7",59,"^9",59,"^<X","^=>"],"~$analyze-let-bindings*",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2282,"^8",7,"^9",2282,"^:",28,"^<V",["^1F",["^<W",["^1F",[["^=N","^=O","^>>"]]]]]],"^U","^73","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^=N","^=O","^>>"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2282,"^=2","^>6","^9",2282,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=N","^=O","^>>"]]]]]],"~$analysis-error?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",760,"^8",7,"^9",760,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^CK"]]]]],"^<X","^<Y"],"^U","^:?","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^CK"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",760,"^=2","^<Y","^9",760,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^CK"]]]]]],"~$replace-env-pass",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1788,"^8",7,"^9",1788,"^:",23,"^<V",["^1F",["^<W",["^1F",[["~$new-env"]]]]]],"^U","^:>","^6","cljs/analyzer.cljc","^:",23,"^<Z",["^1F",[["^EL"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1788,"^=2","^C9","^9",1788,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^EL"]]]]]],"~$valid-arity?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3599,"^8",8,"^9",3599,"^:",20,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^=7","^=8"]]]]],"^<X","^<Y"],"^=6",true,"^U","^76","^6","cljs/analyzer.cljc","^:",20,"^<Z",["^1F",[["^=7","^=8"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3599,"^=2","^<Y","^9",3599,"^=3",2,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=7","^=8"]]]]]],"~$parse-ns-excludes",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2753,"^8",7,"^9",2753,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Y"]]]]]],"^U","^:I","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^1;","^=Y"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2753,"^=2",["^Q",[null,"^=>"]],"^9",2753,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Y"]]]]]],"~$analyze-fn-methods-pass2",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2103,"^8",7,"^9",2103,"^:",31,"^<V",["^1F",["^<W",["^1F",[["^BL","^>H","^>I","^BM"]]]]]],"^U","^:L","^6","cljs/analyzer.cljc","^:",31,"^<Z",["^1F",[["^BL","^>H","^>I","^BM"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2103,"^=2","^==","^9",2103,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^BL","^>H","^>I","^BM"]]]]]],"~$core-name?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",897,"^8",7,"^9",897,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Is sym visible from core in the current compilation namespace?","^<X","^<Y"],"^U","^78","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",897,"^=2","^<Y","^9",897,"^=3",2,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]],"^=Z","Is sym visible from core in the current compilation namespace?"],"~$get-let-tag",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2275,"^8",7,"^9",2275,"^:",18,"^<V",["^1F",["^<W",["^1F",[["^>?","~$init-expr"]]]]]],"^U","^7=","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^>?","^ER"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2275,"^=2","^=>","^9",2275,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>?","^ER"]]]]]],"~$specials",["^ ","^U","^:M","^6","cljs/analyzer.cljc","^7",1328,"^8",1,"^9",1328,"^:",14,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1328,"^8",6,"^9",1328,"^:",14],"^<X","^>;"],"~$elide-irrelevant-meta",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4046,"^8",7,"^9",4046,"^:",28,"^<V",["^1F",["^<W",["^1F",[["~$m"]]]]]],"^U","^:J","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["~$m"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4046,"^=2",["^Q",["^==","^=F"]],"^9",4046,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$m"]]]]]],"~$resolve-macro-ns-alias",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",875,"^8",7,"^9",875,"^:",29,"^<V",["^1F",["^<W",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^<V",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^=0",["^1F",[null,null]]]],"^U","^7<","^6","cljs/analyzer.cljc","^:",29,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^<V",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X",["^Q",[null,"^=>"]]]],"^7",875,"^9",875,"^=3",3,"^=4",true,"^<V",["^1F",[["^1;","^>?"],["^1;","^>?","^D1"]]]],"~$unsorted-map?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3573,"^8",8,"^9",3573,"^:",21,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^=6",true,"^U","^:N","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3573,"^=2","^<Y","^9",3573,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$check-invoke-arg-types",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4133,"^8",7,"^9",4133,"^:",29,"^<V",["^1F",["^<W",["^1F",[["^1;",["^ ","^?C",["^>>"],"^1K","^?Y"],"^>@"]]]]]],"^U","^:P","^6","cljs/analyzer.cljc","^:",29,"^<Z",["^1F",[["^1;","~$p__29664","^>@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4133,"^=2",["^Q",["^==","^=>","^B<","^=F"]],"^9",4133,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;",["^ ","^?C",["^>>"],"^1K","^?Y"],"^>@"]]]]]],"~$check-duplicate-aliases",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3148,"^8",8,"^9",3148,"^:",31,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^1;","~$old","~$new"]]]]]],"^=6",true,"^U","^:Q","^6","cljs/analyzer.cljc","^:",31,"^<Z",["^1F",[["^1;","^EZ","^E["]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3148,"^=2","^=F","^9",3148,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^EZ","^E["]]]]]],"~$confirm-ns",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",882,"^8",7,"^9",882,"^:",17,"^<V",["^1F",["^<W",["^1F",[["^1;","^C="]]]]],"^=Z","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"^U","^9I","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^1;","^C="]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",882,"^=2","^=F","^9",882,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^C="]]]]],"^=Z","Given env, an analysis environment, and ns-sym, a symbol identifying a\n   namespace, confirm that the namespace exists. Warn if not found."],"~$default-namespaces",["^ ","^U","^9M","^6","cljs/analyzer.cljc","^7",585,"^8",1,"^9",585,"^:",24,"^5",["^ ","^6","cljs/analyzer.cljc","^7",585,"^8",6,"^9",585,"^:",24],"^<X","^=E"],"~$CLJS_CORE_SYM",["^ ","^U","^6A","^6","cljs/analyzer.cljc","^7",238,"^8",4,"^9",238,"^:",22,"^5",["^ ","^6","cljs/analyzer.cljc","^7",238,"^8",9,"^9",238,"^:",22],"^<X","^96"],"~$earmuffed?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1815,"^8",8,"^9",1815,"^:",18,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"^=6",true,"^U","^6B","^6","cljs/analyzer.cljc","^:",18,"^<Z",["^1F",[["^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1815,"^=2","^<Y","^9",1815,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=J"]]]]]],"~$accumulating-warning-handler",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",730,"^8",8,"^9",730,"^:",36,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^>0"]]]]]],"^=6",true,"^U","^9N","^6","cljs/analyzer.cljc","^:",36,"^<Z",["^1F",[["^>0"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",730,"^=2","^C9","^9",730,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>0"]]]]]],"~$canonicalize-specs",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",2956,"^8",7,"^9",2956,"^:",25,"^<V",["^1F",["^<W",["^1F",[["^BS"]]]]]],"^U","^9O","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^BS"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",2956,"^9",2956,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^BS"]]]]]],"~$build-method-call",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3332,"^8",8,"^9",3332,"^:",25,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^>3","~$meth","^=Y"]]]]],"^=Z","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"^=6",true,"^U","^8I","^6","cljs/analyzer.cljc","^:",25,"^<Z",["^1F",[["^>3","^F7","^=Y"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3332,"^=2","^=E","^9",3332,"^=3",3,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>3","^F7","^=Y"]]]]],"^=Z","Builds the intermediate method call map used to reason about the parsed form during\n  compilation."],"~$confirm-var-exists-throw",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",862,"^8",7,"^9",862,"^:",31,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"^U","^8N","^6","cljs/analyzer.cljc","^:",31,"^<Z",["^1F",[[]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",862,"^=2","^C9","^9",862,"^=3",0,"^=4",true,"^<V",["^1F",["^<W",["^1F",[[]]]]]],"~$js-module-exists?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",820,"^8",7,"^9",820,"^:",24,"^<V",["^1F",["^<W",["^1F",[["^>N"]]]]]],"^U","^8M","^6","cljs/analyzer.cljc","^:",24,"^<Z",["^1F",[["^>N"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",820,"^=2","^=>","^9",820,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^>N"]]]]]],"~$analyze-form",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4170,"^8",10,"^9",4170,"^:",22,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^>?","^>@"]]]]]],"^U","^9R","^6","cljs/analyzer.cljc","^:",22,"^<Z",["^1F",[["^1;","^=Q","^>?","^>@"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",4170,"^=2",["^Q",["^==","^=>","^=E","^=F"]],"^9",4170,"^=3",4,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=Q","^>?","^>@"]]]]]],"~$var-ast",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1498,"^8",7,"^9",1498,"^:",14,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]]],"^U","^8U","^6","cljs/analyzer.cljc","^:",14,"^<Z",["^1F",[["^1;","^=J"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1498,"^9",1498,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1;","^=J"]]]]]],"~$add-consts",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",4222,"^8",7,"^9",4222,"^:",17,"^<V",["^1F",["^<W",["^1F",[["~$compiler-state","~$constants-map"]]]]],"^=Z","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"^U","^9[","^6","cljs/analyzer.cljc","^:",17,"^<Z",["^1F",[["^F=","^F>"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",4222,"^=2",["^Q",[null,"^=>"]],"^9",4222,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^F=","^F>"]]]]],"^=Z","Given a compiler state and a map from fully qualified symbols to constant\n  EDN values, update the compiler state marking these vars as const to support\n  direct substitution of these vars in source."],"~$error",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",752,"^8",7,"^9",752,"^:",12,"^<V",["^1F",["^<W",["^1F",[["^1;","^@["],["^1;","^@[","~$cause"]]]]],"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^@["],["^1;","^@[","^F@"]]],"^<V",["^1F",[["^1;","^@["],["^1;","^@[","^F@"]]],"^=0",["^1F",[null,null]]]],"^U","^:0","^6","cljs/analyzer.cljc","^:",12,"^=B",["^ ","^=1",false,"^=C",3,"^=3",3,"^<Z",["^1F",[["^1;","^@["],["^1;","^@[","^F@"]]],"^<V",["^1F",[["^1;","^@["],["^1;","^@[","^F@"]]],"^=0",["^1F",[null,null]]],"^<Z",["^1F",[["^1;","^@["],["^1;","^@[","^F@"]]],"^<[",null,"^=C",3,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^=D",[["^ ","^=C",2,"^=1",false,"^<X","^=>"],["^ ","^=C",3,"^=1",false,"^<X","^A1"]],"^7",752,"^9",752,"^=3",3,"^=4",true,"^<V",["^1F",[["^1;","^@["],["^1;","^@[","^F@"]]]],"~$record-tag?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3605,"^8",8,"^9",3605,"^:",19,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^=<"]]]]]],"^=6",true,"^U","^9Y","^6","cljs/analyzer.cljc","^:",19,"^<Z",["^1F",[["^=<"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",3605,"^=2","^<Y","^9",3605,"^=3",1,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^=<"]]]]]],"~$invokeable-ns?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",1118,"^8",7,"^9",1118,"^:",21,"^<V",["^1F",["^<W",["^1F",[["^1G","^1;"]]]]],"^=Z","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"^U","^9Z","^6","cljs/analyzer.cljc","^:",21,"^<Z",["^1F",[["^1G","^1;"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",1,"^=1",false,"^7",1118,"^=2",["^Q",["^<Y","^=>"]],"^9",1118,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^1G","^1;"]]]]],"^=Z","Returns true if ns is a required namespace and a JavaScript module that\n   might be invokeable as a function."],"~$cljs-vector?",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",256,"^8",19,"^9",256,"^:",31,"^<X","^<Y","^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"^U","^:4","^6","cljs/analyzer.cljc","^:",31,"^<Z",["^1F",[["~$x"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",256,"^=2","^<Y","^9",256,"^=3",1,"^<X","^<Y","^=4",true,"^<V",["^1F",["^<W",["^1F",[["~$x"]]]]]],"~$*cljs-ns*",["^ ","^5",["^ ","^6","cljs/analyzer.cljc","^7",50,"^8",16,"^9",50,"^:",25,"^>D",true],"^U","^:;","^6","cljs/analyzer.cljc","^:",25,"^8",1,"^>D",true,"^7",50,"^9",50,"^<X","^=>"],"~$check-macro-arity",["^ ","^<U",null,"^5",["^ ","^6","cljs/analyzer.cljc","^7",3854,"^8",11,"^9",3854,"^:",28,"^=6",true,"^<V",["^1F",["^<W",["^1F",[["^BD","^=Q"]]]]]],"^=6",true,"^U","^6W","^6","cljs/analyzer.cljc","^:",28,"^<Z",["^1F",[["^BD","^=Q"]]],"^<[",null,"^=0",["^1F",[null,null]],"^8",4,"^=1",false,"^7",3854,"^=2","^=F","^9",3854,"^=3",2,"^=4",true,"^<V",["^1F",["^<W",["^1F",[["^BD","^=Q"]]]]]]],"^1C",["^ ","^H","^H","^O","^O","^16","^16","^1>","^1>","^1?","^1>"],"~:cljs.analyzer/constants",["^ ","^1A",["^Q",["~$cljs.core/array?","~:args","~$cljs.core/IRecord","~:invoke-ctor","~$&","~$seq","~:ns*","^3","~$console","^4","~$case*","~:extending-base-js-type","~:case-then","~$Window","~:cljs.analyzer/namespaces","~:tags","~:unsupported-preprocess-value","~$defrecord*","~:argc","~:finally","~:statement","~$cljs.spec.alpha$macros","~$js/Function","~$cljs.core/boolean?","~:suffix","^2F","~$cljs.core/PersistentHashMap","~:deftype","~$try","~$checked-aget'","~:fns","~$Object","~:defined","~:ret","^2K","~$cljs.core/checked-aset'","~:redef","~:fexpr","~:existing","~:children","~:fdef-ns","^1I","~$js/RegExp","~$cljs.core/when","~$cljs.core/keyword?","~:ctor","~$aget","~:recurs","~$cljs.core/implements?","~:body?","^1","~:fname","^==","^<Y","~:js-shadowed-by-local","^>6","~$cljs.core/simple-symbol?","~$location","~:let","^<U","~$cljs.core/Reduced","^@4","~$cljs.core/qualified-symbol?","~:unsupported-js-module-type","^B0","~:goog","~:only","~:invalid-protocol-symbol","~:done","~:group","^5","~:ev","~$cljs.core$macros","~:host-field","~:frame","~$cljs.core/IList","~$Symbol","~:valid?","~:externs","~$cljs.core/checked-aget'","~:fn-scope","~:do","~:private-var-access","~$String","~$registry-ref","~:macros-ns","~:macro-syntax-check","~$cljs.core/var?","~:pmasks","~:init","~:cljs.analyzer/property","~:numeric","^=6","~:exprs","~:else","~:protocol-duped-method","~:protocol-symbol","~:cblocks","~:clojure.error/phase","^=>","~$floats","~:protocol","~:cljs.analyzer/symbol","~$*warn-on-infer*","~:cljs.analyzer/externs","~$ns*","~$checked-aset'","~:if","~:fn-method","~$escape","~:global","~$cljs.core/Volatile","^F","^P","~:macros","~:locals","~:tests","~:js-globals","~:return","~$finally","^45","~:method","~:use","~:segs","~$Function","~:default","~:repl-env","^E0","^12","~:cljs.analyzer/call","~:new","~$loop*","~:property","~:case-test","^@L","~$cljs.core/map-entry?","^X","~:bindings","~:warn","~:global-exports","~:def-emits-var","^U","~:munged-namespace","~:binding-form?","~$cljs.core/double?","^1K","~$&form","~$cljs.core/Object","^4E","~$Array","~$cljs.core/Delay","~$*unchecked-arrays*","~:flag","~:loop-lets","~$cljs.core/qualified-ident?","~:clojure.error/symbol","~:unchecked","~$cljs.core.constants","^16","~$cljs.core/qualified-keyword?","^6","~:fields","~:spec-skip-macros","~$js","^>;","~:undeclared-macros-ns","~$long","~$double","^:","~:single-segment-namespace","~$cljs.core/Var","~$__hash","~:start","~$screen","~:inferred-ret-tag","~:fn-arity","^=B","~$cljs.core/Inst","^1B","~:params","~:warning-type","~:macro-present?","^17","~:dblock","~:js-module-index","~:fn-self-name","~$js/Boolean","~:val","~:advanced","~$longs","~:compile-syntax-check","~:recur","~:field","~:with-meta","^E1","~$.-cljs$lang$test","^;5","~$js/String","~$do","~$__meta","~:const-expr","~$-speced-vars","~:state","^<Z","~:rename","~$number","~$objects","~:vals","~:js-dependency-index","~:ns-name","^<[","^=C","^W","~:current-symbol","^1T","~:js-provide","~:env","~:cljs.analyzer/type","~:letfn","~:node","~:infer-warning","~:vector","~:variadic-max-arity","~$cljs.core/inst?","~$letfn*","~:export","~:cljs.analyzer/analyzed","~:protocol-with-variadic-method","~$if","^=0","^Y","~:cljs.analyzer/protocol-inline","~$global","~:cljs.analyzer/constant-table","^E[","~:fn-deprecated","~$cljs.core/float?","^1G","^A0","~:literal?","~:sym","^@K","~:no-op","~:catches","~:prefix","^8","~$unquote","~:types","~:cljs.analyzer/protocol-impl","~:loop","~:dot-action","~:undeclared-var","~$cljs.core/true?","~:internal-ctor","~:module-type","~:case-node","^6M","~:root-source-info","~$cljs.core/let","~$process","~:declared-arglists-mismatch","~:cljs.analyzer/expr","~:include-macros","~$cljs.core/checked-aget","^6V","~:clojure.error/column","^Z","~:preamble-missing","~:clojure.error/line","~$cljs.core/volatile?","~:binding","~$cljs.core/ns-special-form","~$require","~$cljs.core/cond","^=1","~:unsynchronized-mutable","~$cljs.core/integer?","~:const","~:js-fn-var","~:cljs.analyzer/access","^?C","~$deftype*","~$let*","~$js/Array","~$cljs.core/infinite?","~:set!","^=D","~$not-native","~$js*","~$cljs.core/undefined?","~$cljs.core/ISeqable","~:undeclared-protocol-symbol","~$alert","~:build-options","~:protocol-with-overwriting-method","~:nodes","~:cljs.spec/speced-vars","^1A","~:js-array","^>D","~:clojure.error/source","^7","~:expr","~$Boolean","~:arg","~:list","~:var","~$history","~$fn*","~:cljs/analysis-error","~:protocol-info","~:quote","~$recur","~:macro","~$cljs.core/IMapEntry","~:invalid-array-access","~:unprovided","~:deprecation-nowarn","~$Math","~:ns-var-clash","~$cljs.core/uuid?","~:deprecated","^1D","~:case","~:undeclared-ns","^7K","~:class","~:preprocess","~:catch","~:arg-id","~:recur-frames","~$window","^E2","~$array","^<S","~$cljs.core/reduced?","~$cljs.core/tagged-literal?","~$cljs.core/nil?","~:cljs.spec/registry-ref","^1<","~:non-dynamic-earmuffed-var","~:quoted?","~:declared","~$cljs.core/zero?","~$cljs.core/false?","~:cljs.analyzer/not-found","~:defrecord","~:lib","^>N","^80","~:info","~:code","~$cljs.core/simple-ident?","^=2","~:cljs.analyzer/error","^C9","~:then","~$ignore","~:js-object","~:def-var","^9","~:cljs.analyzer/no-resolve","~:js-op","~$exports","~:var-ast","~:context","~$Number","~:invoke","~:throw","~:reload","~:undeclared-ns-form","~$doubles","~:order","~:no-such-method","^1H","~:error","^@S","~$document","~$checked-aset","~:def","~:reload-all","^1C","~:exception","^=3","~:t","~:options","~$set!","^1E","~:missing","^<X","~:invalid-arithmetic","^1W","~:protocol-deprecated","~:target","~$cljs.repl","~$.","~$cljs.core/simple-keyword?","^=V","~:mutable","~:reloads","~$cljs.core/ITaggedLiteral","~$cljs.core/seqable?","~$aset","^<W","^FF","~:try","^96","^97","~:set","~:items","~:in-loop","~$prototype","~$chars","^=4","~:js-var","^<V","~:protocol-impl-recur-with-target","~:volatile-mutable","~:import","~$macroexpand-check","~$ints","~$cljs.core/and","~:impls","~:hierarchy","~$catch","~:shadow","~$js/Object","~:body","~:host-call","~:ns-sym","~:macroexpansion","^=Z","^E","~:overload-arity","~:speced-vars","~:local","~:closure-lib","~:cljs.analyzer/numeric","^;2","^9U","~$cljs.core/IChunkedSeq","~:protocol-multiple-impls","~$navigator","~:jsdoc","~$js/Number","~$cljs.core/ISequential","~$cljs.core/delay?","~:redef-in-file","~:clj","~$constructor","~:protocol-invalid-method","~:invalid-arity","~$cljs.core/regexp?","^1V","~:extend-type-invalid-method-shape","~:the-var","~:suggested-symbol","~:map","~$cljs.core/IUUID","~$__extmap","~:cljs.analyzer/list","~:object","~:test","~:foreign","~:multiple-variadic-overloads","~:warn-type","~$checked-aget","~$shorts","~$*unchecked-if*","~$throw","~:forms","~:fblock","^=E","~:dep-path","^=F","~:registry-ref","~$cljs.core/instance?","^1N","~$cljs.core/checked-aset","^1J","~:statements","~$def","~:compilation","~$cljs.core/ident?","~:refer-macros","~$cljs.user","^:T","~$unescape","~:protocol-impl-with-variadic-method","~$bytes"]],"^ME",["^OE","^O<","^IF","^FJ","^FO","^FT","^G:","^GH","^GN","^GQ","^H3","^H?","^I9","^IN","^IT","^JK","^JM","^JR","^JW","^K7","^K?","^KD","^KY","^L0","^>D","^LB","^LC","^LF","^LJ","^LV","^MC","^MP","^MQ","^=4","^N5","^ND","^NJ","^NP","^NS","^NV","^O4","^OG","^J2","^MM","^=F","^J@","^1<","^<Y","^KV","~~~:t~:ns-specs",["^ "],"~:ns-spec-vars",["^Q",[]],"~:compiler-options",["^:X",[["^OK","~:static-fns"],true,["^OK","~:shadow-tweaks"],null,["^OK","~:source-map-inline"],null,["^OK","~:elide-asserts"],false,["^OK","~:optimize-constants"],null,["^OK","^1S"],null,["^OK","~:external-config"],null,["^OK","~:tooling-config"],null,["^OK","~:emit-constants"],null,["^OK","~:load-tests"],null,["^OK","~:form-size-threshold"],null,["^OK","~:infer-externs"],true,["^OK","^1U"],null,["~:js-options","~:js-provider"],"^N>",["~:mode"],"~:dev",["^OK","~:fn-invoke-direct"],null,["^OK","~:source-map"],"/dev/null"]]]